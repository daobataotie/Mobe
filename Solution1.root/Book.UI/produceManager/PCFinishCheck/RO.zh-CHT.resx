<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="xrLabel10.Text" xml:space="preserve">
    <value>單位：</value>
  </data>
  <data name="xrLabel2.Text" xml:space="preserve">
    <value>合格： √</value>
  </data>
  <data name="xrLabel3.Text" xml:space="preserve">
    <value>不合格： X</value>
  </data>
  <data name="xrLabel4.Text" xml:space="preserve">
    <value>無此項目：△</value>
  </data>
  <data name="xrLabel1.Text" xml:space="preserve">
    <value>編號：</value>
  </data>
  <data name="xrLabel15.Text" xml:space="preserve">
    <value>檢驗單日期：</value>
  </data>
  <data name="xrLabel17.Text" xml:space="preserve">
    <value>商品名稱：</value>
  </data>
  <data name="xrLabel6.Text" xml:space="preserve">
    <value>加工單編號：</value>
  </data>
  <data name="xrTableCell43.Text" xml:space="preserve">
    <value>部門：</value>
  </data>
  <data name="xrTableCell44.Text" xml:space="preserve">
    <value>型號：</value>
  </data>
  <data name="xrTableCell46.Text" xml:space="preserve">
    <value>數量：</value>
  </data>
  <data name="xrTableCell48.Text" xml:space="preserve">
    <value>驗　收　項　目</value>
  </data>
  <data name="xrTableCell7.Text" xml:space="preserve">
    <value>判　定</value>
  </data>
  <data name="xrTableCell49.Text" xml:space="preserve">
    <value>驗　收　項　目</value>
  </data>
  <data name="xrTableCell8.Text" xml:space="preserve">
    <value>判　定</value>
  </data>
  <data name="xrTableCell50.Text" xml:space="preserve">
    <value>豆仔點完全定位</value>
  </data>
  <data name="xrTableCell62.Text" xml:space="preserve">
    <value>外箱、貼標</value>
  </data>
  <data name="xrTableCell51.Text" xml:space="preserve">
    <value>腳尾圓滑無肉利</value>
  </data>
  <data name="xrTableCell63.Text" xml:space="preserve">
    <value>正麥、側麥</value>
  </data>
  <data name="xrTableCell53.Text" xml:space="preserve">
    <value>整支無變形乾淨</value>
  </data>
  <data name="xrTableCell65.Text" xml:space="preserve">
    <value>內盒吊卡是否正確</value>
  </data>
  <data name="xrTableCell54.Text" xml:space="preserve">
    <value>鏡片不可(刮)擦傷</value>
  </data>
  <data name="xrTableCell66.Text" xml:space="preserve">
    <value>內盒貼標</value>
  </data>
  <data name="xrTableCell55.Text" xml:space="preserve">
    <value>鏡片(腳)記號正確</value>
  </data>
  <data name="xrTableCell67.Text" xml:space="preserve">
    <value>鏡繩是否正確</value>
  </data>
  <data name="xrTableCell56.Text" xml:space="preserve">
    <value>鏡片(腳)色系</value>
  </data>
  <data name="xrTableCell68.Text" xml:space="preserve">
    <value>鏡袋置入方式</value>
  </data>
  <data name="xrTableCell57.Text" xml:space="preserve">
    <value>鏡腳是否太鬆搖晃</value>
  </data>
  <data name="xrTableCell69.Text" xml:space="preserve">
    <value>泡殼置入方式</value>
  </data>
  <data name="xrTableCell58.Text" xml:space="preserve">
    <value>光學</value>
  </data>
  <data name="xrTableCell70.Text" xml:space="preserve">
    <value>塑料袋/內盒/外箱</value>
  </data>
  <data name="xrTableCell59.Text" xml:space="preserve">
    <value>透視率</value>
  </data>
  <data name="xrTableCell71.Text" xml:space="preserve">
    <value>條碼貼標是否正確</value>
  </data>
  <data name="xrTableCell60.Text" xml:space="preserve">
    <value>衝擊標準</value>
  </data>
  <assembly alias="DevExpress.Data.v10.2" name="DevExpress.Data.v10.2, Version=10.2.4.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="lblCJBZ.TextAlignment" type="DevExpress.XtraPrinting.TextAlignment, DevExpress.Data.v10.2">
    <value>MiddleCenter</value>
  </data>
  <data name="xrLabel5.Text" xml:space="preserve">
    <value>訂單：</value>
  </data>
  <data name="xrLabel7.Text" xml:space="preserve">
    <value>客戶訂單數量：</value>
  </data>
  <data name="xrLabel9.Text" xml:space="preserve">
    <value>備註：</value>
  </data>
  <data name="xrLabel11.Text" xml:space="preserve">
    <value>檢驗員：</value>
  </data>
  <data name="lblEmployee0.Text" xml:space="preserve">
    <value />
  </data>
  <data name="lblEmployee1.Text" xml:space="preserve">
    <value />
  </data>
</root>