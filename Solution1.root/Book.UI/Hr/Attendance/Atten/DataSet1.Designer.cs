//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5466
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Book.UI.Hr.Attendance.Atten {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private attentreportDataTable tableattentreport;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["attentreport"] != null)) {
                    base.Tables.Add(new attentreportDataTable(ds.Tables["attentreport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public attentreportDataTable attentreport {
            get {
                return this.tableattentreport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["attentreport"] != null)) {
                    base.Tables.Add(new attentreportDataTable(ds.Tables["attentreport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableattentreport = ((attentreportDataTable)(base.Tables["attentreport"]));
            if ((initTable == true)) {
                if ((this.tableattentreport != null)) {
                    this.tableattentreport.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableattentreport = new attentreportDataTable();
            base.Tables.Add(this.tableattentreport);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeattentreport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void attentreportRowChangeEventHandler(object sender, attentreportRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class attentreportDataTable : global::System.Data.TypedTableBase<attentreportRow> {
            
            private global::System.Data.DataColumn columnDutyDate;
            
            private global::System.Data.DataColumn columnEmployeeId;
            
            private global::System.Data.DataColumn columnEmployeeName;
            
            private global::System.Data.DataColumn columnIDNo;
            
            private global::System.Data.DataColumn columnShouldCheckIn;
            
            private global::System.Data.DataColumn columnShouldCheckOut;
            
            private global::System.Data.DataColumn columnActualCheckIn;
            
            private global::System.Data.DataColumn columnActualCheckOut;
            
            private global::System.Data.DataColumn columnLateInMinute;
            
            private global::System.Data.DataColumn columnDayFactor;
            
            private global::System.Data.DataColumn columnMonthFactor;
            
            private global::System.Data.DataColumn columnNote;
            
            private global::System.Data.DataColumn columnEoverTime;
            
            private global::System.Data.DataColumn columnstr1;
            
            private global::System.Data.DataColumn columnstr2;
            
            private global::System.Data.DataColumn columnstr3;
            
            private global::System.Data.DataColumn columndate1;
            
            private global::System.Data.DataColumn columndate2;
            
            private global::System.Data.DataColumn columndate3;
            
            private global::System.Data.DataColumn columnweekofday;
            
            private global::System.Data.DataColumn columnorderValue;
            
            private global::System.Data.DataColumn columnEmployeeJoinDate;
            
            private global::System.Data.DataColumn columnFromtime;
            
            private global::System.Data.DataColumn columnToTime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public attentreportDataTable() {
                this.TableName = "attentreport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal attentreportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected attentreportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DutyDateColumn {
                get {
                    return this.columnDutyDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeIdColumn {
                get {
                    return this.columnEmployeeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeNameColumn {
                get {
                    return this.columnEmployeeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDNoColumn {
                get {
                    return this.columnIDNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShouldCheckInColumn {
                get {
                    return this.columnShouldCheckIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShouldCheckOutColumn {
                get {
                    return this.columnShouldCheckOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActualCheckInColumn {
                get {
                    return this.columnActualCheckIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActualCheckOutColumn {
                get {
                    return this.columnActualCheckOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateInMinuteColumn {
                get {
                    return this.columnLateInMinute;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DayFactorColumn {
                get {
                    return this.columnDayFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthFactorColumn {
                get {
                    return this.columnMonthFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoteColumn {
                get {
                    return this.columnNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EoverTimeColumn {
                get {
                    return this.columnEoverTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn str1Column {
                get {
                    return this.columnstr1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn str2Column {
                get {
                    return this.columnstr2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn str3Column {
                get {
                    return this.columnstr3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn date1Column {
                get {
                    return this.columndate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn date2Column {
                get {
                    return this.columndate2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn date3Column {
                get {
                    return this.columndate3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn weekofdayColumn {
                get {
                    return this.columnweekofday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn orderValueColumn {
                get {
                    return this.columnorderValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeJoinDateColumn {
                get {
                    return this.columnEmployeeJoinDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromtimeColumn {
                get {
                    return this.columnFromtime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToTimeColumn {
                get {
                    return this.columnToTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public attentreportRow this[int index] {
                get {
                    return ((attentreportRow)(this.Rows[index]));
                }
            }
            
            public event attentreportRowChangeEventHandler attentreportRowChanging;
            
            public event attentreportRowChangeEventHandler attentreportRowChanged;
            
            public event attentreportRowChangeEventHandler attentreportRowDeleting;
            
            public event attentreportRowChangeEventHandler attentreportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddattentreportRow(attentreportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public attentreportRow AddattentreportRow(
                        System.DateTime DutyDate, 
                        string EmployeeId, 
                        string EmployeeName, 
                        string IDNo, 
                        System.DateTime ShouldCheckIn, 
                        System.DateTime ShouldCheckOut, 
                        System.DateTime ActualCheckIn, 
                        System.DateTime ActualCheckOut, 
                        double LateInMinute, 
                        double DayFactor, 
                        double MonthFactor, 
                        string Note, 
                        double EoverTime, 
                        string str1, 
                        string str2, 
                        string str3, 
                        System.DateTime date1, 
                        System.DateTimeOffset date2, 
                        System.DateTime date3, 
                        string weekofday, 
                        string orderValue, 
                        System.DateTime EmployeeJoinDate, 
                        System.DateTime Fromtime, 
                        System.DateTime ToTime) {
                attentreportRow rowattentreportRow = ((attentreportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DutyDate,
                        EmployeeId,
                        EmployeeName,
                        IDNo,
                        ShouldCheckIn,
                        ShouldCheckOut,
                        ActualCheckIn,
                        ActualCheckOut,
                        LateInMinute,
                        DayFactor,
                        MonthFactor,
                        Note,
                        EoverTime,
                        str1,
                        str2,
                        str3,
                        date1,
                        date2,
                        date3,
                        weekofday,
                        orderValue,
                        EmployeeJoinDate,
                        Fromtime,
                        ToTime};
                rowattentreportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowattentreportRow);
                return rowattentreportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                attentreportDataTable cln = ((attentreportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new attentreportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDutyDate = base.Columns["DutyDate"];
                this.columnEmployeeId = base.Columns["EmployeeId"];
                this.columnEmployeeName = base.Columns["EmployeeName"];
                this.columnIDNo = base.Columns["IDNo"];
                this.columnShouldCheckIn = base.Columns["ShouldCheckIn"];
                this.columnShouldCheckOut = base.Columns["ShouldCheckOut"];
                this.columnActualCheckIn = base.Columns["ActualCheckIn"];
                this.columnActualCheckOut = base.Columns["ActualCheckOut"];
                this.columnLateInMinute = base.Columns["LateInMinute"];
                this.columnDayFactor = base.Columns["DayFactor"];
                this.columnMonthFactor = base.Columns["MonthFactor"];
                this.columnNote = base.Columns["Note"];
                this.columnEoverTime = base.Columns["EoverTime"];
                this.columnstr1 = base.Columns["str1"];
                this.columnstr2 = base.Columns["str2"];
                this.columnstr3 = base.Columns["str3"];
                this.columndate1 = base.Columns["date1"];
                this.columndate2 = base.Columns["date2"];
                this.columndate3 = base.Columns["date3"];
                this.columnweekofday = base.Columns["weekofday"];
                this.columnorderValue = base.Columns["orderValue"];
                this.columnEmployeeJoinDate = base.Columns["EmployeeJoinDate"];
                this.columnFromtime = base.Columns["Fromtime"];
                this.columnToTime = base.Columns["ToTime"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDutyDate = new global::System.Data.DataColumn("DutyDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDutyDate);
                this.columnEmployeeId = new global::System.Data.DataColumn("EmployeeId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeId);
                this.columnEmployeeName = new global::System.Data.DataColumn("EmployeeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeName);
                this.columnIDNo = new global::System.Data.DataColumn("IDNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDNo);
                this.columnShouldCheckIn = new global::System.Data.DataColumn("ShouldCheckIn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShouldCheckIn);
                this.columnShouldCheckOut = new global::System.Data.DataColumn("ShouldCheckOut", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShouldCheckOut);
                this.columnActualCheckIn = new global::System.Data.DataColumn("ActualCheckIn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualCheckIn);
                this.columnActualCheckOut = new global::System.Data.DataColumn("ActualCheckOut", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualCheckOut);
                this.columnLateInMinute = new global::System.Data.DataColumn("LateInMinute", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateInMinute);
                this.columnDayFactor = new global::System.Data.DataColumn("DayFactor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDayFactor);
                this.columnMonthFactor = new global::System.Data.DataColumn("MonthFactor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthFactor);
                this.columnNote = new global::System.Data.DataColumn("Note", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNote);
                this.columnEoverTime = new global::System.Data.DataColumn("EoverTime", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEoverTime);
                this.columnstr1 = new global::System.Data.DataColumn("str1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstr1);
                this.columnstr2 = new global::System.Data.DataColumn("str2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstr2);
                this.columnstr3 = new global::System.Data.DataColumn("str3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstr3);
                this.columndate1 = new global::System.Data.DataColumn("date1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate1);
                this.columndate2 = new global::System.Data.DataColumn("date2", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate2);
                this.columndate3 = new global::System.Data.DataColumn("date3", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate3);
                this.columnweekofday = new global::System.Data.DataColumn("weekofday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweekofday);
                this.columnorderValue = new global::System.Data.DataColumn("orderValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorderValue);
                this.columnEmployeeJoinDate = new global::System.Data.DataColumn("EmployeeJoinDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeJoinDate);
                this.columnFromtime = new global::System.Data.DataColumn("Fromtime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromtime);
                this.columnToTime = new global::System.Data.DataColumn("ToTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToTime);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public attentreportRow NewattentreportRow() {
                return ((attentreportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new attentreportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(attentreportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.attentreportRowChanged != null)) {
                    this.attentreportRowChanged(this, new attentreportRowChangeEvent(((attentreportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.attentreportRowChanging != null)) {
                    this.attentreportRowChanging(this, new attentreportRowChangeEvent(((attentreportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.attentreportRowDeleted != null)) {
                    this.attentreportRowDeleted(this, new attentreportRowChangeEvent(((attentreportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.attentreportRowDeleting != null)) {
                    this.attentreportRowDeleting(this, new attentreportRowChangeEvent(((attentreportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveattentreportRow(attentreportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "attentreportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class attentreportRow : global::System.Data.DataRow {
            
            private attentreportDataTable tableattentreport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal attentreportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableattentreport = ((attentreportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DutyDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableattentreport.DutyDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“attentreport”中列“DutyDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattentreport.DutyDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmployeeId {
                get {
                    try {
                        return ((string)(this[this.tableattentreport.EmployeeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“attentreport”中列“EmployeeId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattentreport.EmployeeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmployeeName {
                get {
                    try {
                        return ((string)(this[this.tableattentreport.EmployeeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“attentreport”中列“EmployeeName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattentreport.EmployeeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IDNo {
                get {
                    try {
                        return ((string)(this[this.tableattentreport.IDNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“attentreport”中列“IDNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattentreport.IDNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ShouldCheckIn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableattentreport.ShouldCheckInColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“attentreport”中列“ShouldCheckIn”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattentreport.ShouldCheckInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ShouldCheckOut {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableattentreport.ShouldCheckOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“attentreport”中列“ShouldCheckOut”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattentreport.ShouldCheckOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ActualCheckIn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableattentreport.ActualCheckInColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“attentreport”中列“ActualCheckIn”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattentreport.ActualCheckInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ActualCheckOut {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableattentreport.ActualCheckOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“attentreport”中列“ActualCheckOut”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattentreport.ActualCheckOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LateInMinute {
                get {
                    try {
                        return ((double)(this[this.tableattentreport.LateInMinuteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“attentreport”中列“LateInMinute”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattentreport.LateInMinuteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DayFactor {
                get {
                    try {
                        return ((double)(this[this.tableattentreport.DayFactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“attentreport”中列“DayFactor”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattentreport.DayFactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MonthFactor {
                get {
                    try {
                        return ((double)(this[this.tableattentreport.MonthFactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“attentreport”中列“MonthFactor”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattentreport.MonthFactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Note {
                get {
                    try {
                        return ((string)(this[this.tableattentreport.NoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“attentreport”中列“Note”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattentreport.NoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double EoverTime {
                get {
                    try {
                        return ((double)(this[this.tableattentreport.EoverTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“attentreport”中列“EoverTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattentreport.EoverTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string str1 {
                get {
                    try {
                        return ((string)(this[this.tableattentreport.str1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“attentreport”中列“str1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattentreport.str1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string str2 {
                get {
                    try {
                        return ((string)(this[this.tableattentreport.str2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“attentreport”中列“str2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattentreport.str2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string str3 {
                get {
                    try {
                        return ((string)(this[this.tableattentreport.str3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“attentreport”中列“str3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattentreport.str3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime date1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableattentreport.date1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“attentreport”中列“date1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattentreport.date1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTimeOffset date2 {
                get {
                    try {
                        return ((global::System.DateTimeOffset)(this[this.tableattentreport.date2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“attentreport”中列“date2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattentreport.date2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime date3 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableattentreport.date3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“attentreport”中列“date3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattentreport.date3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string weekofday {
                get {
                    try {
                        return ((string)(this[this.tableattentreport.weekofdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“attentreport”中列“weekofday”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattentreport.weekofdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string orderValue {
                get {
                    try {
                        return ((string)(this[this.tableattentreport.orderValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“attentreport”中列“orderValue”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattentreport.orderValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EmployeeJoinDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableattentreport.EmployeeJoinDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“attentreport”中列“EmployeeJoinDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattentreport.EmployeeJoinDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fromtime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableattentreport.FromtimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“attentreport”中列“Fromtime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattentreport.FromtimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ToTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableattentreport.ToTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“attentreport”中列“ToTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattentreport.ToTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDutyDateNull() {
                return this.IsNull(this.tableattentreport.DutyDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDutyDateNull() {
                this[this.tableattentreport.DutyDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmployeeIdNull() {
                return this.IsNull(this.tableattentreport.EmployeeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmployeeIdNull() {
                this[this.tableattentreport.EmployeeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmployeeNameNull() {
                return this.IsNull(this.tableattentreport.EmployeeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmployeeNameNull() {
                this[this.tableattentreport.EmployeeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNoNull() {
                return this.IsNull(this.tableattentreport.IDNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNoNull() {
                this[this.tableattentreport.IDNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShouldCheckInNull() {
                return this.IsNull(this.tableattentreport.ShouldCheckInColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShouldCheckInNull() {
                this[this.tableattentreport.ShouldCheckInColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShouldCheckOutNull() {
                return this.IsNull(this.tableattentreport.ShouldCheckOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShouldCheckOutNull() {
                this[this.tableattentreport.ShouldCheckOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActualCheckInNull() {
                return this.IsNull(this.tableattentreport.ActualCheckInColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActualCheckInNull() {
                this[this.tableattentreport.ActualCheckInColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActualCheckOutNull() {
                return this.IsNull(this.tableattentreport.ActualCheckOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActualCheckOutNull() {
                this[this.tableattentreport.ActualCheckOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLateInMinuteNull() {
                return this.IsNull(this.tableattentreport.LateInMinuteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLateInMinuteNull() {
                this[this.tableattentreport.LateInMinuteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDayFactorNull() {
                return this.IsNull(this.tableattentreport.DayFactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDayFactorNull() {
                this[this.tableattentreport.DayFactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthFactorNull() {
                return this.IsNull(this.tableattentreport.MonthFactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthFactorNull() {
                this[this.tableattentreport.MonthFactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoteNull() {
                return this.IsNull(this.tableattentreport.NoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoteNull() {
                this[this.tableattentreport.NoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEoverTimeNull() {
                return this.IsNull(this.tableattentreport.EoverTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEoverTimeNull() {
                this[this.tableattentreport.EoverTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstr1Null() {
                return this.IsNull(this.tableattentreport.str1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstr1Null() {
                this[this.tableattentreport.str1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstr2Null() {
                return this.IsNull(this.tableattentreport.str2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstr2Null() {
                this[this.tableattentreport.str2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstr3Null() {
                return this.IsNull(this.tableattentreport.str3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstr3Null() {
                this[this.tableattentreport.str3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdate1Null() {
                return this.IsNull(this.tableattentreport.date1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdate1Null() {
                this[this.tableattentreport.date1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdate2Null() {
                return this.IsNull(this.tableattentreport.date2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdate2Null() {
                this[this.tableattentreport.date2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdate3Null() {
                return this.IsNull(this.tableattentreport.date3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdate3Null() {
                this[this.tableattentreport.date3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsweekofdayNull() {
                return this.IsNull(this.tableattentreport.weekofdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetweekofdayNull() {
                this[this.tableattentreport.weekofdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsorderValueNull() {
                return this.IsNull(this.tableattentreport.orderValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetorderValueNull() {
                this[this.tableattentreport.orderValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmployeeJoinDateNull() {
                return this.IsNull(this.tableattentreport.EmployeeJoinDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmployeeJoinDateNull() {
                this[this.tableattentreport.EmployeeJoinDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromtimeNull() {
                return this.IsNull(this.tableattentreport.FromtimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromtimeNull() {
                this[this.tableattentreport.FromtimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToTimeNull() {
                return this.IsNull(this.tableattentreport.ToTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToTimeNull() {
                this[this.tableattentreport.ToTimeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class attentreportRowChangeEvent : global::System.EventArgs {
            
            private attentreportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public attentreportRowChangeEvent(attentreportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public attentreportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591