//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5466
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Book.UI.Hr.Salary.Salaryset {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private MonthlySalarysDataTable tableMonthlySalarys;
        
        private employeeDataTable tableemployee;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["MonthlySalarys"] != null)) {
                    base.Tables.Add(new MonthlySalarysDataTable(ds.Tables["MonthlySalarys"]));
                }
                if ((ds.Tables["employee"] != null)) {
                    base.Tables.Add(new employeeDataTable(ds.Tables["employee"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MonthlySalarysDataTable MonthlySalarys {
            get {
                return this.tableMonthlySalarys;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public employeeDataTable employee {
            get {
                return this.tableemployee;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MonthlySalarys"] != null)) {
                    base.Tables.Add(new MonthlySalarysDataTable(ds.Tables["MonthlySalarys"]));
                }
                if ((ds.Tables["employee"] != null)) {
                    base.Tables.Add(new employeeDataTable(ds.Tables["employee"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableMonthlySalarys = ((MonthlySalarysDataTable)(base.Tables["MonthlySalarys"]));
            if ((initTable == true)) {
                if ((this.tableMonthlySalarys != null)) {
                    this.tableMonthlySalarys.InitVars();
                }
            }
            this.tableemployee = ((employeeDataTable)(base.Tables["employee"]));
            if ((initTable == true)) {
                if ((this.tableemployee != null)) {
                    this.tableemployee.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMonthlySalarys = new MonthlySalarysDataTable();
            base.Tables.Add(this.tableMonthlySalarys);
            this.tableemployee = new employeeDataTable();
            base.Tables.Add(this.tableemployee);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMonthlySalarys() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeemployee() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void MonthlySalarysRowChangeEventHandler(object sender, MonthlySalarysRowChangeEvent e);
        
        public delegate void employeeRowChangeEventHandler(object sender, employeeRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MonthlySalarysDataTable : global::System.Data.TypedTableBase<MonthlySalarysRow> {
            
            private global::System.Data.DataColumn columnEmployeeId;
            
            private global::System.Data.DataColumn columnDailyPay;
            
            private global::System.Data.DataColumn columnIDNo;
            
            private global::System.Data.DataColumn columnDepartmentName;
            
            private global::System.Data.DataColumn columnCompanyName;
            
            private global::System.Data.DataColumn columnMonthlyPay;
            
            private global::System.Data.DataColumn columnBasePay;
            
            private global::System.Data.DataColumn columnFieldPay;
            
            private global::System.Data.DataColumn columnSubTotal;
            
            private global::System.Data.DataColumn columnLunchFee;
            
            private global::System.Data.DataColumn columnInsurance;
            
            private global::System.Data.DataColumn columnLoanFee;
            
            private global::System.Data.DataColumn columnTax;
            
            private global::System.Data.DataColumn columnSalaryTotal;
            
            private global::System.Data.DataColumn columnDutyPay;
            
            private global::System.Data.DataColumn columnPostPay;
            
            private global::System.Data.DataColumn columnAllAttendBonus;
            
            private global::System.Data.DataColumn columnSpecialBonus;
            
            private global::System.Data.DataColumn columnWorkBonus;
            
            private global::System.Data.DataColumn columnEffectBonus;
            
            private global::System.Data.DataColumn columnTechBonus;
            
            private global::System.Data.DataColumn columnEffectFactor;
            
            private global::System.Data.DataColumn columnGeneralOverTime;
            
            private global::System.Data.DataColumn columnHolidayOverTime;
            
            private global::System.Data.DataColumn columnGeneralOverTimeFee;
            
            private global::System.Data.DataColumn columnHolidayOverTimeFee;
            
            private global::System.Data.DataColumn columnOverTimeFee;
            
            private global::System.Data.DataColumn columnOverTimeBonus;
            
            private global::System.Data.DataColumn columnAnnualHolidayFee;
            
            private global::System.Data.DataColumn columnOtherPay;
            
            private global::System.Data.DataColumn columnOtherPunish;
            
            private global::System.Data.DataColumn columnBonusTotal;
            
            private global::System.Data.DataColumn columnShouldPay;
            
            private global::System.Data.DataColumn columnAnnualPay;
            
            private global::System.Data.DataColumn columnGivenDays;
            
            private global::System.Data.DataColumn columnLatePunish;
            
            private global::System.Data.DataColumn columnLateCount;
            
            private global::System.Data.DataColumn columnTotalLateInMinute;
            
            private global::System.Data.DataColumn columnTotalLateInHour;
            
            private global::System.Data.DataColumn columnPunishCount;
            
            private global::System.Data.DataColumn columnEmployeeName;
            
            private global::System.Data.DataColumn columnBoundTitle;
            
            private global::System.Data.DataColumn columnSalaryTitle;
            
            private global::System.Data.DataColumn columnDaysFactor;
            
            private global::System.Data.DataColumn columnMonthFactor;
            
            private global::System.Data.DataColumn columnBusinessHoursName;
            
            private global::System.Data.DataColumn columnXiaoJI;
            
            private global::System.Data.DataColumn columnJiaBan;
            
            private global::System.Data.DataColumn columnJiaBanDesc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MonthlySalarysDataTable() {
                this.TableName = "MonthlySalarys";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MonthlySalarysDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MonthlySalarysDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeIdColumn {
                get {
                    return this.columnEmployeeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DailyPayColumn {
                get {
                    return this.columnDailyPay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDNoColumn {
                get {
                    return this.columnIDNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepartmentNameColumn {
                get {
                    return this.columnDepartmentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyNameColumn {
                get {
                    return this.columnCompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthlyPayColumn {
                get {
                    return this.columnMonthlyPay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BasePayColumn {
                get {
                    return this.columnBasePay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FieldPayColumn {
                get {
                    return this.columnFieldPay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubTotalColumn {
                get {
                    return this.columnSubTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LunchFeeColumn {
                get {
                    return this.columnLunchFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsuranceColumn {
                get {
                    return this.columnInsurance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LoanFeeColumn {
                get {
                    return this.columnLoanFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxColumn {
                get {
                    return this.columnTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalaryTotalColumn {
                get {
                    return this.columnSalaryTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DutyPayColumn {
                get {
                    return this.columnDutyPay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PostPayColumn {
                get {
                    return this.columnPostPay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AllAttendBonusColumn {
                get {
                    return this.columnAllAttendBonus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecialBonusColumn {
                get {
                    return this.columnSpecialBonus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkBonusColumn {
                get {
                    return this.columnWorkBonus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffectBonusColumn {
                get {
                    return this.columnEffectBonus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TechBonusColumn {
                get {
                    return this.columnTechBonus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffectFactorColumn {
                get {
                    return this.columnEffectFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GeneralOverTimeColumn {
                get {
                    return this.columnGeneralOverTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HolidayOverTimeColumn {
                get {
                    return this.columnHolidayOverTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GeneralOverTimeFeeColumn {
                get {
                    return this.columnGeneralOverTimeFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HolidayOverTimeFeeColumn {
                get {
                    return this.columnHolidayOverTimeFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OverTimeFeeColumn {
                get {
                    return this.columnOverTimeFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OverTimeBonusColumn {
                get {
                    return this.columnOverTimeBonus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AnnualHolidayFeeColumn {
                get {
                    return this.columnAnnualHolidayFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherPayColumn {
                get {
                    return this.columnOtherPay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherPunishColumn {
                get {
                    return this.columnOtherPunish;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BonusTotalColumn {
                get {
                    return this.columnBonusTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShouldPayColumn {
                get {
                    return this.columnShouldPay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AnnualPayColumn {
                get {
                    return this.columnAnnualPay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GivenDaysColumn {
                get {
                    return this.columnGivenDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LatePunishColumn {
                get {
                    return this.columnLatePunish;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateCountColumn {
                get {
                    return this.columnLateCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalLateInMinuteColumn {
                get {
                    return this.columnTotalLateInMinute;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalLateInHourColumn {
                get {
                    return this.columnTotalLateInHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PunishCountColumn {
                get {
                    return this.columnPunishCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeNameColumn {
                get {
                    return this.columnEmployeeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BoundTitleColumn {
                get {
                    return this.columnBoundTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalaryTitleColumn {
                get {
                    return this.columnSalaryTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DaysFactorColumn {
                get {
                    return this.columnDaysFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthFactorColumn {
                get {
                    return this.columnMonthFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessHoursNameColumn {
                get {
                    return this.columnBusinessHoursName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XiaoJIColumn {
                get {
                    return this.columnXiaoJI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JiaBanColumn {
                get {
                    return this.columnJiaBan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JiaBanDescColumn {
                get {
                    return this.columnJiaBanDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MonthlySalarysRow this[int index] {
                get {
                    return ((MonthlySalarysRow)(this.Rows[index]));
                }
            }
            
            public event MonthlySalarysRowChangeEventHandler MonthlySalarysRowChanging;
            
            public event MonthlySalarysRowChangeEventHandler MonthlySalarysRowChanged;
            
            public event MonthlySalarysRowChangeEventHandler MonthlySalarysRowDeleting;
            
            public event MonthlySalarysRowChangeEventHandler MonthlySalarysRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMonthlySalarysRow(MonthlySalarysRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MonthlySalarysRow AddMonthlySalarysRow(
                        string EmployeeId, 
                        double DailyPay, 
                        string IDNo, 
                        string DepartmentName, 
                        string CompanyName, 
                        double MonthlyPay, 
                        double BasePay, 
                        int FieldPay, 
                        int SubTotal, 
                        int LunchFee, 
                        int Insurance, 
                        int LoanFee, 
                        int Tax, 
                        int SalaryTotal, 
                        int DutyPay, 
                        int PostPay, 
                        int AllAttendBonus, 
                        int SpecialBonus, 
                        int WorkBonus, 
                        int EffectBonus, 
                        int TechBonus, 
                        int EffectFactor, 
                        double GeneralOverTime, 
                        double HolidayOverTime, 
                        int GeneralOverTimeFee, 
                        int HolidayOverTimeFee, 
                        int OverTimeFee, 
                        int OverTimeBonus, 
                        int AnnualHolidayFee, 
                        int OtherPay, 
                        int OtherPunish, 
                        int BonusTotal, 
                        int ShouldPay, 
                        int AnnualPay, 
                        int GivenDays, 
                        int LatePunish, 
                        int LateCount, 
                        int TotalLateInMinute, 
                        double TotalLateInHour, 
                        double PunishCount, 
                        string EmployeeName, 
                        string BoundTitle, 
                        string SalaryTitle, 
                        double DaysFactor, 
                        string MonthFactor, 
                        string BusinessHoursName, 
                        double XiaoJI, 
                        double JiaBan, 
                        string JiaBanDesc) {
                MonthlySalarysRow rowMonthlySalarysRow = ((MonthlySalarysRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EmployeeId,
                        DailyPay,
                        IDNo,
                        DepartmentName,
                        CompanyName,
                        MonthlyPay,
                        BasePay,
                        FieldPay,
                        SubTotal,
                        LunchFee,
                        Insurance,
                        LoanFee,
                        Tax,
                        SalaryTotal,
                        DutyPay,
                        PostPay,
                        AllAttendBonus,
                        SpecialBonus,
                        WorkBonus,
                        EffectBonus,
                        TechBonus,
                        EffectFactor,
                        GeneralOverTime,
                        HolidayOverTime,
                        GeneralOverTimeFee,
                        HolidayOverTimeFee,
                        OverTimeFee,
                        OverTimeBonus,
                        AnnualHolidayFee,
                        OtherPay,
                        OtherPunish,
                        BonusTotal,
                        ShouldPay,
                        AnnualPay,
                        GivenDays,
                        LatePunish,
                        LateCount,
                        TotalLateInMinute,
                        TotalLateInHour,
                        PunishCount,
                        EmployeeName,
                        BoundTitle,
                        SalaryTitle,
                        DaysFactor,
                        MonthFactor,
                        BusinessHoursName,
                        XiaoJI,
                        JiaBan,
                        JiaBanDesc};
                rowMonthlySalarysRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMonthlySalarysRow);
                return rowMonthlySalarysRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MonthlySalarysDataTable cln = ((MonthlySalarysDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MonthlySalarysDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmployeeId = base.Columns["EmployeeId"];
                this.columnDailyPay = base.Columns["DailyPay"];
                this.columnIDNo = base.Columns["IDNo"];
                this.columnDepartmentName = base.Columns["DepartmentName"];
                this.columnCompanyName = base.Columns["CompanyName"];
                this.columnMonthlyPay = base.Columns["MonthlyPay"];
                this.columnBasePay = base.Columns["BasePay"];
                this.columnFieldPay = base.Columns["FieldPay"];
                this.columnSubTotal = base.Columns["SubTotal"];
                this.columnLunchFee = base.Columns["LunchFee"];
                this.columnInsurance = base.Columns["Insurance"];
                this.columnLoanFee = base.Columns["LoanFee"];
                this.columnTax = base.Columns["Tax"];
                this.columnSalaryTotal = base.Columns["SalaryTotal"];
                this.columnDutyPay = base.Columns["DutyPay"];
                this.columnPostPay = base.Columns["PostPay"];
                this.columnAllAttendBonus = base.Columns["AllAttendBonus"];
                this.columnSpecialBonus = base.Columns["SpecialBonus"];
                this.columnWorkBonus = base.Columns["WorkBonus"];
                this.columnEffectBonus = base.Columns["EffectBonus"];
                this.columnTechBonus = base.Columns["TechBonus"];
                this.columnEffectFactor = base.Columns["EffectFactor"];
                this.columnGeneralOverTime = base.Columns["GeneralOverTime"];
                this.columnHolidayOverTime = base.Columns["HolidayOverTime"];
                this.columnGeneralOverTimeFee = base.Columns["GeneralOverTimeFee"];
                this.columnHolidayOverTimeFee = base.Columns["HolidayOverTimeFee"];
                this.columnOverTimeFee = base.Columns["OverTimeFee"];
                this.columnOverTimeBonus = base.Columns["OverTimeBonus"];
                this.columnAnnualHolidayFee = base.Columns["AnnualHolidayFee"];
                this.columnOtherPay = base.Columns["OtherPay"];
                this.columnOtherPunish = base.Columns["OtherPunish"];
                this.columnBonusTotal = base.Columns["BonusTotal"];
                this.columnShouldPay = base.Columns["ShouldPay"];
                this.columnAnnualPay = base.Columns["AnnualPay"];
                this.columnGivenDays = base.Columns["GivenDays"];
                this.columnLatePunish = base.Columns["LatePunish"];
                this.columnLateCount = base.Columns["LateCount"];
                this.columnTotalLateInMinute = base.Columns["TotalLateInMinute"];
                this.columnTotalLateInHour = base.Columns["TotalLateInHour"];
                this.columnPunishCount = base.Columns["PunishCount"];
                this.columnEmployeeName = base.Columns["EmployeeName"];
                this.columnBoundTitle = base.Columns["BoundTitle"];
                this.columnSalaryTitle = base.Columns["SalaryTitle"];
                this.columnDaysFactor = base.Columns["DaysFactor"];
                this.columnMonthFactor = base.Columns["MonthFactor"];
                this.columnBusinessHoursName = base.Columns["BusinessHoursName"];
                this.columnXiaoJI = base.Columns["XiaoJI"];
                this.columnJiaBan = base.Columns["JiaBan"];
                this.columnJiaBanDesc = base.Columns["JiaBanDesc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmployeeId = new global::System.Data.DataColumn("EmployeeId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeId);
                this.columnDailyPay = new global::System.Data.DataColumn("DailyPay", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDailyPay);
                this.columnIDNo = new global::System.Data.DataColumn("IDNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDNo);
                this.columnDepartmentName = new global::System.Data.DataColumn("DepartmentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartmentName);
                this.columnCompanyName = new global::System.Data.DataColumn("CompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyName);
                this.columnMonthlyPay = new global::System.Data.DataColumn("MonthlyPay", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthlyPay);
                this.columnBasePay = new global::System.Data.DataColumn("BasePay", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBasePay);
                this.columnFieldPay = new global::System.Data.DataColumn("FieldPay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFieldPay);
                this.columnSubTotal = new global::System.Data.DataColumn("SubTotal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubTotal);
                this.columnLunchFee = new global::System.Data.DataColumn("LunchFee", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLunchFee);
                this.columnInsurance = new global::System.Data.DataColumn("Insurance", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsurance);
                this.columnLoanFee = new global::System.Data.DataColumn("LoanFee", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoanFee);
                this.columnTax = new global::System.Data.DataColumn("Tax", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTax);
                this.columnSalaryTotal = new global::System.Data.DataColumn("SalaryTotal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalaryTotal);
                this.columnDutyPay = new global::System.Data.DataColumn("DutyPay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDutyPay);
                this.columnPostPay = new global::System.Data.DataColumn("PostPay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostPay);
                this.columnAllAttendBonus = new global::System.Data.DataColumn("AllAttendBonus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllAttendBonus);
                this.columnSpecialBonus = new global::System.Data.DataColumn("SpecialBonus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialBonus);
                this.columnWorkBonus = new global::System.Data.DataColumn("WorkBonus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkBonus);
                this.columnEffectBonus = new global::System.Data.DataColumn("EffectBonus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectBonus);
                this.columnTechBonus = new global::System.Data.DataColumn("TechBonus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechBonus);
                this.columnEffectFactor = new global::System.Data.DataColumn("EffectFactor", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectFactor);
                this.columnGeneralOverTime = new global::System.Data.DataColumn("GeneralOverTime", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneralOverTime);
                this.columnHolidayOverTime = new global::System.Data.DataColumn("HolidayOverTime", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHolidayOverTime);
                this.columnGeneralOverTimeFee = new global::System.Data.DataColumn("GeneralOverTimeFee", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneralOverTimeFee);
                this.columnHolidayOverTimeFee = new global::System.Data.DataColumn("HolidayOverTimeFee", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHolidayOverTimeFee);
                this.columnOverTimeFee = new global::System.Data.DataColumn("OverTimeFee", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverTimeFee);
                this.columnOverTimeBonus = new global::System.Data.DataColumn("OverTimeBonus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverTimeBonus);
                this.columnAnnualHolidayFee = new global::System.Data.DataColumn("AnnualHolidayFee", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnnualHolidayFee);
                this.columnOtherPay = new global::System.Data.DataColumn("OtherPay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherPay);
                this.columnOtherPunish = new global::System.Data.DataColumn("OtherPunish", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherPunish);
                this.columnBonusTotal = new global::System.Data.DataColumn("BonusTotal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBonusTotal);
                this.columnShouldPay = new global::System.Data.DataColumn("ShouldPay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShouldPay);
                this.columnAnnualPay = new global::System.Data.DataColumn("AnnualPay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnnualPay);
                this.columnGivenDays = new global::System.Data.DataColumn("GivenDays", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGivenDays);
                this.columnLatePunish = new global::System.Data.DataColumn("LatePunish", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLatePunish);
                this.columnLateCount = new global::System.Data.DataColumn("LateCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateCount);
                this.columnTotalLateInMinute = new global::System.Data.DataColumn("TotalLateInMinute", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalLateInMinute);
                this.columnTotalLateInHour = new global::System.Data.DataColumn("TotalLateInHour", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalLateInHour);
                this.columnPunishCount = new global::System.Data.DataColumn("PunishCount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPunishCount);
                this.columnEmployeeName = new global::System.Data.DataColumn("EmployeeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeName);
                this.columnBoundTitle = new global::System.Data.DataColumn("BoundTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoundTitle);
                this.columnSalaryTitle = new global::System.Data.DataColumn("SalaryTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalaryTitle);
                this.columnDaysFactor = new global::System.Data.DataColumn("DaysFactor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDaysFactor);
                this.columnMonthFactor = new global::System.Data.DataColumn("MonthFactor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthFactor);
                this.columnBusinessHoursName = new global::System.Data.DataColumn("BusinessHoursName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessHoursName);
                this.columnXiaoJI = new global::System.Data.DataColumn("XiaoJI", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXiaoJI);
                this.columnJiaBan = new global::System.Data.DataColumn("JiaBan", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJiaBan);
                this.columnJiaBanDesc = new global::System.Data.DataColumn("JiaBanDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJiaBanDesc);
                this.columnBusinessHoursName.Caption = "班别";
                this.columnXiaoJI.Caption = "小计";
                this.columnJiaBan.Caption = "加班";
                this.columnJiaBanDesc.Caption = "加班计算过程";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MonthlySalarysRow NewMonthlySalarysRow() {
                return ((MonthlySalarysRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MonthlySalarysRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MonthlySalarysRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MonthlySalarysRowChanged != null)) {
                    this.MonthlySalarysRowChanged(this, new MonthlySalarysRowChangeEvent(((MonthlySalarysRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MonthlySalarysRowChanging != null)) {
                    this.MonthlySalarysRowChanging(this, new MonthlySalarysRowChangeEvent(((MonthlySalarysRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MonthlySalarysRowDeleted != null)) {
                    this.MonthlySalarysRowDeleted(this, new MonthlySalarysRowChangeEvent(((MonthlySalarysRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MonthlySalarysRowDeleting != null)) {
                    this.MonthlySalarysRowDeleting(this, new MonthlySalarysRowChangeEvent(((MonthlySalarysRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMonthlySalarysRow(MonthlySalarysRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MonthlySalarysDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class employeeDataTable : global::System.Data.TypedTableBase<employeeRow> {
            
            private global::System.Data.DataColumn columnEmployeeId;
            
            private global::System.Data.DataColumn columnEmployeeName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeeDataTable() {
                this.TableName = "employee";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal employeeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected employeeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeIdColumn {
                get {
                    return this.columnEmployeeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeNameColumn {
                get {
                    return this.columnEmployeeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeeRow this[int index] {
                get {
                    return ((employeeRow)(this.Rows[index]));
                }
            }
            
            public event employeeRowChangeEventHandler employeeRowChanging;
            
            public event employeeRowChangeEventHandler employeeRowChanged;
            
            public event employeeRowChangeEventHandler employeeRowDeleting;
            
            public event employeeRowChangeEventHandler employeeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddemployeeRow(employeeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeeRow AddemployeeRow(string EmployeeId, string EmployeeName) {
                employeeRow rowemployeeRow = ((employeeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EmployeeId,
                        EmployeeName};
                rowemployeeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowemployeeRow);
                return rowemployeeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                employeeDataTable cln = ((employeeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new employeeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmployeeId = base.Columns["EmployeeId"];
                this.columnEmployeeName = base.Columns["EmployeeName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmployeeId = new global::System.Data.DataColumn("EmployeeId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeId);
                this.columnEmployeeName = new global::System.Data.DataColumn("EmployeeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeeRow NewemployeeRow() {
                return ((employeeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new employeeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(employeeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.employeeRowChanged != null)) {
                    this.employeeRowChanged(this, new employeeRowChangeEvent(((employeeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.employeeRowChanging != null)) {
                    this.employeeRowChanging(this, new employeeRowChangeEvent(((employeeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.employeeRowDeleted != null)) {
                    this.employeeRowDeleted(this, new employeeRowChangeEvent(((employeeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.employeeRowDeleting != null)) {
                    this.employeeRowDeleting(this, new employeeRowChangeEvent(((employeeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveemployeeRow(employeeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "employeeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MonthlySalarysRow : global::System.Data.DataRow {
            
            private MonthlySalarysDataTable tableMonthlySalarys;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MonthlySalarysRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMonthlySalarys = ((MonthlySalarysDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmployeeId {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalarys.EmployeeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“EmployeeId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.EmployeeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DailyPay {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalarys.DailyPayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“DailyPay”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.DailyPayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IDNo {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalarys.IDNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“IDNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.IDNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DepartmentName {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalarys.DepartmentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“DepartmentName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.DepartmentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyName {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalarys.CompanyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“CompanyName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.CompanyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MonthlyPay {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalarys.MonthlyPayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“MonthlyPay”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.MonthlyPayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BasePay {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalarys.BasePayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“BasePay”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.BasePayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FieldPay {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.FieldPayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“FieldPay”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.FieldPayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubTotal {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.SubTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“SubTotal”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.SubTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LunchFee {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.LunchFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“LunchFee”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.LunchFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Insurance {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.InsuranceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“Insurance”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.InsuranceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LoanFee {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.LoanFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“LoanFee”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.LoanFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Tax {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.TaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“Tax”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.TaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalaryTotal {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.SalaryTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“SalaryTotal”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.SalaryTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DutyPay {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.DutyPayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“DutyPay”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.DutyPayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PostPay {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.PostPayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“PostPay”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.PostPayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AllAttendBonus {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.AllAttendBonusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“AllAttendBonus”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.AllAttendBonusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SpecialBonus {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.SpecialBonusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“SpecialBonus”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.SpecialBonusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkBonus {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.WorkBonusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“WorkBonus”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.WorkBonusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EffectBonus {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.EffectBonusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“EffectBonus”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.EffectBonusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TechBonus {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.TechBonusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“TechBonus”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.TechBonusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EffectFactor {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.EffectFactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“EffectFactor”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.EffectFactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GeneralOverTime {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalarys.GeneralOverTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“GeneralOverTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.GeneralOverTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HolidayOverTime {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalarys.HolidayOverTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“HolidayOverTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.HolidayOverTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GeneralOverTimeFee {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.GeneralOverTimeFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“GeneralOverTimeFee”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.GeneralOverTimeFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HolidayOverTimeFee {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.HolidayOverTimeFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“HolidayOverTimeFee”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.HolidayOverTimeFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OverTimeFee {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.OverTimeFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“OverTimeFee”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.OverTimeFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OverTimeBonus {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.OverTimeBonusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“OverTimeBonus”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.OverTimeBonusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AnnualHolidayFee {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.AnnualHolidayFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“AnnualHolidayFee”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.AnnualHolidayFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OtherPay {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.OtherPayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“OtherPay”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.OtherPayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OtherPunish {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.OtherPunishColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“OtherPunish”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.OtherPunishColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BonusTotal {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.BonusTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“BonusTotal”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.BonusTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ShouldPay {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.ShouldPayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“ShouldPay”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.ShouldPayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AnnualPay {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.AnnualPayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“AnnualPay”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.AnnualPayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GivenDays {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.GivenDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“GivenDays”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.GivenDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LatePunish {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.LatePunishColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“LatePunish”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.LatePunishColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LateCount {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.LateCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“LateCount”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.LateCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TotalLateInMinute {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalarys.TotalLateInMinuteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“TotalLateInMinute”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.TotalLateInMinuteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TotalLateInHour {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalarys.TotalLateInHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“TotalLateInHour”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.TotalLateInHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PunishCount {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalarys.PunishCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“PunishCount”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.PunishCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmployeeName {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalarys.EmployeeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“EmployeeName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.EmployeeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BoundTitle {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalarys.BoundTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“BoundTitle”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.BoundTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalaryTitle {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalarys.SalaryTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“SalaryTitle”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.SalaryTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DaysFactor {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalarys.DaysFactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“DaysFactor”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.DaysFactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MonthFactor {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalarys.MonthFactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“MonthFactor”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.MonthFactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessHoursName {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalarys.BusinessHoursNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“BusinessHoursName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.BusinessHoursNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double XiaoJI {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalarys.XiaoJIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“XiaoJI”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.XiaoJIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double JiaBan {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalarys.JiaBanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“JiaBan”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.JiaBanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JiaBanDesc {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalarys.JiaBanDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonthlySalarys”中列“JiaBanDesc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonthlySalarys.JiaBanDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmployeeIdNull() {
                return this.IsNull(this.tableMonthlySalarys.EmployeeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmployeeIdNull() {
                this[this.tableMonthlySalarys.EmployeeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDailyPayNull() {
                return this.IsNull(this.tableMonthlySalarys.DailyPayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDailyPayNull() {
                this[this.tableMonthlySalarys.DailyPayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNoNull() {
                return this.IsNull(this.tableMonthlySalarys.IDNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNoNull() {
                this[this.tableMonthlySalarys.IDNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartmentNameNull() {
                return this.IsNull(this.tableMonthlySalarys.DepartmentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartmentNameNull() {
                this[this.tableMonthlySalarys.DepartmentNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNameNull() {
                return this.IsNull(this.tableMonthlySalarys.CompanyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNameNull() {
                this[this.tableMonthlySalarys.CompanyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthlyPayNull() {
                return this.IsNull(this.tableMonthlySalarys.MonthlyPayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthlyPayNull() {
                this[this.tableMonthlySalarys.MonthlyPayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBasePayNull() {
                return this.IsNull(this.tableMonthlySalarys.BasePayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBasePayNull() {
                this[this.tableMonthlySalarys.BasePayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFieldPayNull() {
                return this.IsNull(this.tableMonthlySalarys.FieldPayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFieldPayNull() {
                this[this.tableMonthlySalarys.FieldPayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubTotalNull() {
                return this.IsNull(this.tableMonthlySalarys.SubTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubTotalNull() {
                this[this.tableMonthlySalarys.SubTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLunchFeeNull() {
                return this.IsNull(this.tableMonthlySalarys.LunchFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLunchFeeNull() {
                this[this.tableMonthlySalarys.LunchFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsuranceNull() {
                return this.IsNull(this.tableMonthlySalarys.InsuranceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsuranceNull() {
                this[this.tableMonthlySalarys.InsuranceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoanFeeNull() {
                return this.IsNull(this.tableMonthlySalarys.LoanFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoanFeeNull() {
                this[this.tableMonthlySalarys.LoanFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxNull() {
                return this.IsNull(this.tableMonthlySalarys.TaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxNull() {
                this[this.tableMonthlySalarys.TaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalaryTotalNull() {
                return this.IsNull(this.tableMonthlySalarys.SalaryTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalaryTotalNull() {
                this[this.tableMonthlySalarys.SalaryTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDutyPayNull() {
                return this.IsNull(this.tableMonthlySalarys.DutyPayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDutyPayNull() {
                this[this.tableMonthlySalarys.DutyPayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPostPayNull() {
                return this.IsNull(this.tableMonthlySalarys.PostPayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPostPayNull() {
                this[this.tableMonthlySalarys.PostPayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAllAttendBonusNull() {
                return this.IsNull(this.tableMonthlySalarys.AllAttendBonusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAllAttendBonusNull() {
                this[this.tableMonthlySalarys.AllAttendBonusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpecialBonusNull() {
                return this.IsNull(this.tableMonthlySalarys.SpecialBonusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpecialBonusNull() {
                this[this.tableMonthlySalarys.SpecialBonusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkBonusNull() {
                return this.IsNull(this.tableMonthlySalarys.WorkBonusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkBonusNull() {
                this[this.tableMonthlySalarys.WorkBonusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEffectBonusNull() {
                return this.IsNull(this.tableMonthlySalarys.EffectBonusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEffectBonusNull() {
                this[this.tableMonthlySalarys.EffectBonusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTechBonusNull() {
                return this.IsNull(this.tableMonthlySalarys.TechBonusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTechBonusNull() {
                this[this.tableMonthlySalarys.TechBonusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEffectFactorNull() {
                return this.IsNull(this.tableMonthlySalarys.EffectFactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEffectFactorNull() {
                this[this.tableMonthlySalarys.EffectFactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGeneralOverTimeNull() {
                return this.IsNull(this.tableMonthlySalarys.GeneralOverTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGeneralOverTimeNull() {
                this[this.tableMonthlySalarys.GeneralOverTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHolidayOverTimeNull() {
                return this.IsNull(this.tableMonthlySalarys.HolidayOverTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHolidayOverTimeNull() {
                this[this.tableMonthlySalarys.HolidayOverTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGeneralOverTimeFeeNull() {
                return this.IsNull(this.tableMonthlySalarys.GeneralOverTimeFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGeneralOverTimeFeeNull() {
                this[this.tableMonthlySalarys.GeneralOverTimeFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHolidayOverTimeFeeNull() {
                return this.IsNull(this.tableMonthlySalarys.HolidayOverTimeFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHolidayOverTimeFeeNull() {
                this[this.tableMonthlySalarys.HolidayOverTimeFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverTimeFeeNull() {
                return this.IsNull(this.tableMonthlySalarys.OverTimeFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverTimeFeeNull() {
                this[this.tableMonthlySalarys.OverTimeFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverTimeBonusNull() {
                return this.IsNull(this.tableMonthlySalarys.OverTimeBonusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverTimeBonusNull() {
                this[this.tableMonthlySalarys.OverTimeBonusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnnualHolidayFeeNull() {
                return this.IsNull(this.tableMonthlySalarys.AnnualHolidayFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnnualHolidayFeeNull() {
                this[this.tableMonthlySalarys.AnnualHolidayFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherPayNull() {
                return this.IsNull(this.tableMonthlySalarys.OtherPayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherPayNull() {
                this[this.tableMonthlySalarys.OtherPayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherPunishNull() {
                return this.IsNull(this.tableMonthlySalarys.OtherPunishColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherPunishNull() {
                this[this.tableMonthlySalarys.OtherPunishColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBonusTotalNull() {
                return this.IsNull(this.tableMonthlySalarys.BonusTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBonusTotalNull() {
                this[this.tableMonthlySalarys.BonusTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShouldPayNull() {
                return this.IsNull(this.tableMonthlySalarys.ShouldPayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShouldPayNull() {
                this[this.tableMonthlySalarys.ShouldPayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnnualPayNull() {
                return this.IsNull(this.tableMonthlySalarys.AnnualPayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnnualPayNull() {
                this[this.tableMonthlySalarys.AnnualPayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGivenDaysNull() {
                return this.IsNull(this.tableMonthlySalarys.GivenDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGivenDaysNull() {
                this[this.tableMonthlySalarys.GivenDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLatePunishNull() {
                return this.IsNull(this.tableMonthlySalarys.LatePunishColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLatePunishNull() {
                this[this.tableMonthlySalarys.LatePunishColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLateCountNull() {
                return this.IsNull(this.tableMonthlySalarys.LateCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLateCountNull() {
                this[this.tableMonthlySalarys.LateCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalLateInMinuteNull() {
                return this.IsNull(this.tableMonthlySalarys.TotalLateInMinuteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalLateInMinuteNull() {
                this[this.tableMonthlySalarys.TotalLateInMinuteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalLateInHourNull() {
                return this.IsNull(this.tableMonthlySalarys.TotalLateInHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalLateInHourNull() {
                this[this.tableMonthlySalarys.TotalLateInHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPunishCountNull() {
                return this.IsNull(this.tableMonthlySalarys.PunishCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPunishCountNull() {
                this[this.tableMonthlySalarys.PunishCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmployeeNameNull() {
                return this.IsNull(this.tableMonthlySalarys.EmployeeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmployeeNameNull() {
                this[this.tableMonthlySalarys.EmployeeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBoundTitleNull() {
                return this.IsNull(this.tableMonthlySalarys.BoundTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBoundTitleNull() {
                this[this.tableMonthlySalarys.BoundTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalaryTitleNull() {
                return this.IsNull(this.tableMonthlySalarys.SalaryTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalaryTitleNull() {
                this[this.tableMonthlySalarys.SalaryTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDaysFactorNull() {
                return this.IsNull(this.tableMonthlySalarys.DaysFactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDaysFactorNull() {
                this[this.tableMonthlySalarys.DaysFactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthFactorNull() {
                return this.IsNull(this.tableMonthlySalarys.MonthFactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthFactorNull() {
                this[this.tableMonthlySalarys.MonthFactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessHoursNameNull() {
                return this.IsNull(this.tableMonthlySalarys.BusinessHoursNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessHoursNameNull() {
                this[this.tableMonthlySalarys.BusinessHoursNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXiaoJINull() {
                return this.IsNull(this.tableMonthlySalarys.XiaoJIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXiaoJINull() {
                this[this.tableMonthlySalarys.XiaoJIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJiaBanNull() {
                return this.IsNull(this.tableMonthlySalarys.JiaBanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJiaBanNull() {
                this[this.tableMonthlySalarys.JiaBanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJiaBanDescNull() {
                return this.IsNull(this.tableMonthlySalarys.JiaBanDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJiaBanDescNull() {
                this[this.tableMonthlySalarys.JiaBanDescColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class employeeRow : global::System.Data.DataRow {
            
            private employeeDataTable tableemployee;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal employeeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableemployee = ((employeeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmployeeId {
                get {
                    try {
                        return ((string)(this[this.tableemployee.EmployeeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“employee”中列“EmployeeId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableemployee.EmployeeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmployeeName {
                get {
                    try {
                        return ((string)(this[this.tableemployee.EmployeeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“employee”中列“EmployeeName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableemployee.EmployeeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmployeeIdNull() {
                return this.IsNull(this.tableemployee.EmployeeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmployeeIdNull() {
                this[this.tableemployee.EmployeeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmployeeNameNull() {
                return this.IsNull(this.tableemployee.EmployeeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmployeeNameNull() {
                this[this.tableemployee.EmployeeNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MonthlySalarysRowChangeEvent : global::System.EventArgs {
            
            private MonthlySalarysRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MonthlySalarysRowChangeEvent(MonthlySalarysRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MonthlySalarysRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class employeeRowChangeEvent : global::System.EventArgs {
            
            private employeeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeeRowChangeEvent(employeeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591