<?xml version="1.0" encoding="utf-8" ?> 
<sqlMap namespace="ProduceInDepotDetail" xmlns="http://ibatis.apache.org/mapping" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="ProduceInDepotDetail" type="Book.Model.ProduceInDepotDetail, Book.Model" />
    </alias>
    <resultMaps>                                    
        <resultMap id="ProduceInDepotDetailResult" class="ProduceInDepotDetail">
			<result property="ProduceInDepotDetailId" column="ProduceInDepotDetailId" />
			<result property="DepotPositionId" column="DepotPositionId" />
			<result property="ProductId" column="ProductId" />
			<result property="ProduceInDepotId" column="ProduceInDepotId" />
			<result property="ProductGuige" column="ProductGuige" />
			<result property="ProduceQuantity" column="ProduceQuantity" />
			<result property="ProducePrice" column="ProducePrice" />
			<result property="ProduceMoney" column="ProduceMoney" />
			<result property="ProduceInDepotPrice" column="ProduceInDepotPrice" />
			<result property="InvoiceXOId" column="InvoiceXOId" />
			<result property="PronoteHeaderId" column="PronoteHeaderId" />
			<result property="InvoiceXODetailId" column="InvoiceXODetailId" />
			<result property="ProductUnit" column="ProductUnit" />
			<result property="ProduceTransferQuantity" column="ProduceTransferQuantity" />
			<result property="IsChecked" column="IsChecked" />
			<result property="ProceduresId" column="ProceduresId" />
			<result property="ProductProceId" column="ProductProceId" />
		<result property="DepotPosition" column="DepotPositionId" lazyLoad="false" select="DepotPosition.select_by_primary_key" />		<result property="Procedures" column="ProceduresId" lazyLoad="false" select="Procedures.select_by_primary_key" />		<result property="ProduceInDepot" column="ProduceInDepotId" lazyLoad="false" select="ProduceInDepot.select_by_primary_key" />		<result property="Product" column="ProductId" lazyLoad="false" select="Product.select_by_primary_key" />		<result property="ProductProce" column="ProductProceId" lazyLoad="false" select="Product.select_by_primary_key" />
        </resultMap>
    </resultMaps>
		
    <statements>
		<select id="has_rows_of" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[ProduceInDepotDetail]
				WHERE
				[ProduceInDepotDetailId] = #ProduceInDepotDetailId#
				) then 1 else 0 end
		</select>
		<select id="has_rows" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[ProduceInDepotDetail]
 								
				) then 1 else 0 end
		</select>
		<!-- select by primary key -->
        <select id="select_by_primary_key" resultMap="ProduceInDepotDetailResult" parameterClass="ProduceInDepotDetail">
			SELECT
				[ProduceInDepotDetailId],
				[DepotPositionId],
				[ProductId],
				[ProduceInDepotId],
				[ProductGuige],
				[ProduceQuantity],
				[ProducePrice],
				[ProduceMoney],
				[ProduceInDepotPrice],
				[InvoiceXOId],
				[PronoteHeaderId],
				[InvoiceXODetailId],
				[ProductUnit],
				[ProduceTransferQuantity],
				[IsChecked],
				[ProceduresId],
				[ProductProceId]
			FROM
				[dbo].[ProduceInDepotDetail]
			WHERE
				[ProduceInDepotDetailId] = #ProduceInDepotDetailId#
        </select>
		
		<!-- delete -->
        <delete id="delete" parameterClass="string">
			DELETE FROM [dbo].[ProduceInDepotDetail]
			WHERE
				[ProduceInDepotDetailId] = #ProduceInDepotDetailId#
        </delete>

		<!-- select all -->
        <select id="select_all" resultMap="ProduceInDepotDetailResult" >
			SELECT *
			FROM 
				[dbo].[ProduceInDepotDetail]
			
			
        </select>
        
		<select id="count_all" resultClass="int">
			select count(*)
			from 
				[dbo].[ProduceInDepotDetail]
		</select>
		
		<select id="select_all_with_paging" resultMap="ProduceInDepotDetailResult">
            SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[ProduceInDepotDetail]
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
		</select>
		
		<!-- insert -->
        <insert id="insert" parameterClass="ProduceInDepotDetail">
			INSERT INTO [dbo].[ProduceInDepotDetail] 
			(
				[ProduceInDepotDetailId],
				[DepotPositionId],
				[ProductId],
				[ProduceInDepotId],
				[ProductGuige],
				[ProduceQuantity],
				[ProducePrice],
				[ProduceMoney],
				[ProduceInDepotPrice],
				[InvoiceXOId],
				[PronoteHeaderId],
				[InvoiceXODetailId],
				[ProductUnit],
				[ProduceTransferQuantity],
				[IsChecked],
				[ProceduresId],
				[ProductProceId]
			) 
			VALUES 
			(
				#ProduceInDepotDetailId#,
				#DepotPositionId#,
				#ProductId#,
				#ProduceInDepotId#,
				#ProductGuige#,
				#ProduceQuantity#,
				#ProducePrice#,
				#ProduceMoney#,
				#ProduceInDepotPrice#,
				#InvoiceXOId#,
				#PronoteHeaderId#,
				#InvoiceXODetailId#,
				#ProductUnit#,
				#ProduceTransferQuantity#,
				#IsChecked#,
				#ProceduresId#,
				#ProductProceId#
			)
        </insert>
		
		<!-- update -->
        <update id="update" parameterClass="ProduceInDepotDetail">
			UPDATE [ProduceInDepotDetail] SET
				[DepotPositionId] = #DepotPositionId#,
				[ProductId] = #ProductId#,
				[ProduceInDepotId] = #ProduceInDepotId#,
				[ProductGuige] = #ProductGuige#,
				[ProduceQuantity] = #ProduceQuantity#,
				[ProducePrice] = #ProducePrice#,
				[ProduceMoney] = #ProduceMoney#,
				[ProduceInDepotPrice] = #ProduceInDepotPrice#,
				[InvoiceXOId] = #InvoiceXOId#,
				[PronoteHeaderId] = #PronoteHeaderId#,
				[InvoiceXODetailId] = #InvoiceXODetailId#,
				[ProductUnit] = #ProductUnit#,
				[ProduceTransferQuantity] = #ProduceTransferQuantity#,
				[IsChecked] = #IsChecked#,
				[ProceduresId] = #ProceduresId#,
				[ProductProceId] = #ProductProceId#
			WHERE
				[ProduceInDepotDetailId] = #ProduceInDepotDetailId#
        </update>
		<select id="existsPrimary" resultClass="bool" parameterClass="string">
			<![CDATA[
			select case when exists(
				select *
				from [dbo].[ProduceInDepotDetail]
				where  ProduceInDepotDetailId = #value# 
				)
				then 1 else 0 end
			]]>
		</select>
		
    </statements>
</sqlMap>

