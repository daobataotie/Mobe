<?xml version="1.0" encoding="utf-8" ?> 
<sqlMap namespace="DepotOutDetail" xmlns="http://ibatis.apache.org/mapping" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="DepotOutDetail" type="Book.Model.DepotOutDetail, Book.Model" />
    </alias>
    <resultMaps>                                    
        <resultMap id="DepotOutDetailResult" class="DepotOutDetail">
			<result property="DepotOutDetailId" column="DepotOutDetailId" />
			<result property="ProductId" column="ProductId" />
			<result property="DepotPositionId" column="DepotPositionId" />
			<result property="DepotOutId" column="DepotOutId" />
			<result property="ProductUnit" column="ProductUnit" />
			<result property="FormerPrice" column="FormerPrice" />
			<result property="CostPrice" column="CostPrice" />
			<result property="Description" column="Description" />
			<result property="TotalMoney" column="TotalMoney" />
			<result property="DepotOutDetailQuantity" column="DepotOutDetailQuantity" />
			<result property="ProduceMaterialdetailsID" column="ProduceMaterialdetailsID" />
			<result property="InvoiceXOId" column="InvoiceXOId" />
			<result property="ProduceOtherMaterialDetailId" column="ProduceOtherMaterialDetailId" />
			<result property="CurrentDepotQuantity" column="CurrentDepotQuantity" />
			<result property="CurrentStockQuantity" column="CurrentStockQuantity" />
			<result property="Inumber" column="Inumber" />
		<result property="DepotPosition" column="DepotPositionId" lazyLoad="false" select="DepotPosition.select_by_primary_key" />		<result property="Product" column="ProductId" lazyLoad="false" select="Product.select_by_primary_key" />		<result property="DepotOut" column="DepotOutId" lazyLoad="false" select="DepotOut.select_by_primary_key" />
        </resultMap>
    </resultMaps>
		
    <statements>
		<select id="has_rows_of" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[DepotOutDetail]
				WHERE
				[DepotOutDetailId] = #DepotOutDetailId#
				) then 1 else 0 end
		</select>
		<select id="has_rows" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[DepotOutDetail]
 								
				) then 1 else 0 end
		</select>
		<!-- select by primary key -->
        <select id="select_by_primary_key" resultMap="DepotOutDetailResult" parameterClass="DepotOutDetail">
			SELECT
				[DepotOutDetailId],
				[ProductId],
				[DepotPositionId],
				[DepotOutId],
				[ProductUnit],
				[FormerPrice],
				[CostPrice],
				[Description],
				[TotalMoney],
				[DepotOutDetailQuantity],
				[ProduceMaterialdetailsID],
				[InvoiceXOId],
				[ProduceOtherMaterialDetailId],
				[CurrentDepotQuantity],
				[CurrentStockQuantity],
				[Inumber]
			FROM
				[dbo].[DepotOutDetail]
			WHERE
				[DepotOutDetailId] = #DepotOutDetailId#
        </select>
		
		<!-- delete -->
        <delete id="delete" parameterClass="string">
			DELETE FROM [dbo].[DepotOutDetail]
			WHERE
				[DepotOutDetailId] = #DepotOutDetailId#
        </delete>

		<!-- select all -->
        <select id="select_all" resultMap="DepotOutDetailResult" >
			SELECT *
			FROM 
				[dbo].[DepotOutDetail]
			

			
        </select>
        
		<select id="count_all" resultClass="int">
			select count(*)
			from 
				[dbo].[DepotOutDetail]
		</select>
		
		<select id="select_all_with_paging" resultMap="DepotOutDetailResult">
            SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[DepotOutDetail]
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
		</select>
		
		<!-- insert -->
        <insert id="insert" parameterClass="DepotOutDetail">
			INSERT INTO [dbo].[DepotOutDetail] 
			(
				[DepotOutDetailId],
				[ProductId],
				[DepotPositionId],
				[DepotOutId],
				[ProductUnit],
				[FormerPrice],
				[CostPrice],
				[Description],
				[TotalMoney],
				[DepotOutDetailQuantity],
				[ProduceMaterialdetailsID],
				[InvoiceXOId],
				[ProduceOtherMaterialDetailId],
				[CurrentDepotQuantity],
				[CurrentStockQuantity],
				[Inumber]
			) 
			VALUES 
			(
				#DepotOutDetailId#,
				#ProductId#,
				#DepotPositionId#,
				#DepotOutId#,
				#ProductUnit#,
				#FormerPrice#,
				#CostPrice#,
				#Description#,
				#TotalMoney#,
				#DepotOutDetailQuantity#,
				#ProduceMaterialdetailsID#,
				#InvoiceXOId#,
				#ProduceOtherMaterialDetailId#,
				#CurrentDepotQuantity#,
				#CurrentStockQuantity#,
				#Inumber#
			)
        </insert>
		
		<!-- update -->
        <update id="update" parameterClass="DepotOutDetail">
			UPDATE [DepotOutDetail] SET
				[ProductId] = #ProductId#,
				[DepotPositionId] = #DepotPositionId#,
				[DepotOutId] = #DepotOutId#,
				[ProductUnit] = #ProductUnit#,
				[FormerPrice] = #FormerPrice#,
				[CostPrice] = #CostPrice#,
				[Description] = #Description#,
				[TotalMoney] = #TotalMoney#,
				[DepotOutDetailQuantity] = #DepotOutDetailQuantity#,
				[ProduceMaterialdetailsID] = #ProduceMaterialdetailsID#,
				[InvoiceXOId] = #InvoiceXOId#,
				[ProduceOtherMaterialDetailId] = #ProduceOtherMaterialDetailId#,
				[CurrentDepotQuantity] = #CurrentDepotQuantity#,
				[CurrentStockQuantity] = #CurrentStockQuantity#,
				[Inumber] = #Inumber#
			WHERE
				[DepotOutDetailId] = #DepotOutDetailId#
        </update>
		<select id="existsPrimary" resultClass="bool" parameterClass="string">
			<![CDATA[
			select case when exists(
				select *
				from [dbo].[DepotOutDetail]
				where  DepotOutDetailId = #value# 
				)
				then 1 else 0 end
			]]>
		</select>
		
    </statements>
</sqlMap>

