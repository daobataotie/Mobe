<?xml version="1.0" encoding="utf-8" ?> 
<sqlMap namespace="ProduceOtherMaterialDetail" xmlns="http://ibatis.apache.org/mapping" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="ProduceOtherMaterialDetail" type="Book.Model.ProduceOtherMaterialDetail, Book.Model" />
    </alias>
    <resultMaps>                                    
        <resultMap id="ProduceOtherMaterialDetailResult" class="ProduceOtherMaterialDetail">
			<result property="DepotPositionId" column="DepotPositionId" />
			<result property="ProductId" column="ProductId" />
			<result property="ProduceOtherMaterialId" column="ProduceOtherMaterialId" />
			<result property="ProduceOtherMaterialDetailId" column="ProduceOtherMaterialDetailId" />
			<result property="OtherMaterialQuantity" column="OtherMaterialQuantity" />
			<result property="OtherMaterialALLUserQuantity" column="OtherMaterialALLUserQuantity" />
			<result property="ProductStock" column="ProductStock" />
			<result property="MPSheaderId" column="MPSheaderId" />
			<result property="InvoiceXOId" column="InvoiceXOId" />
			<result property="InvoiceXODetailId" column="InvoiceXODetailId" />
			<result property="ProductUnit" column="ProductUnit" />
			<result property="PrimaryKeyId" column="PrimaryKeyId" />
			<result property="ProduceOtherCompactMaterialId" column="ProduceOtherCompactMaterialId" />
			<result property="Description" column="Description" />
			<result property="DepotOutStateDetail" column="DepotOutStateDetail" />
			<result property="IsChecked" column="IsChecked" />
			<result property="ParentProductId" column="ParentProductId" />
		<result property="ParentProduct" column="ParentProductId" lazyLoad="false" select="Product.select_by_primary_key" />		<result property="PrimaryKey" column="PrimaryKeyId" lazyLoad="false" select="CustomerProducts.select_by_primary_key" />		<result property="DepotPosition" column="DepotPositionId" lazyLoad="false" select="DepotPosition.select_by_primary_key" />		<result property="Product" column="ProductId" lazyLoad="false" select="Product.select_by_primary_key" />		<result property="ProduceOtherMaterial" column="ProduceOtherMaterialId" lazyLoad="false" select="ProduceOtherMaterial.select_by_primary_key" />
        </resultMap>
    </resultMaps>
		
    <statements>
		<select id="has_rows_of" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[ProduceOtherMaterialDetail]
				WHERE
				[ProduceOtherMaterialDetailId] = #ProduceOtherMaterialDetailId#
				) then 1 else 0 end
		</select>
		<select id="has_rows" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[ProduceOtherMaterialDetail]
 								
				) then 1 else 0 end
		</select>
		<!-- select by primary key -->
        <select id="select_by_primary_key" resultMap="ProduceOtherMaterialDetailResult" parameterClass="ProduceOtherMaterialDetail">
			SELECT
				[DepotPositionId],
				[ProductId],
				[ProduceOtherMaterialId],
				[ProduceOtherMaterialDetailId],
				[OtherMaterialQuantity],
				[OtherMaterialALLUserQuantity],
				[ProductStock],
				[MPSheaderId],
				[InvoiceXOId],
				[InvoiceXODetailId],
				[ProductUnit],
				[PrimaryKeyId],
				[ProduceOtherCompactMaterialId],
				[Description],
				[DepotOutStateDetail],
				[IsChecked],
				[ParentProductId]
			FROM
				[dbo].[ProduceOtherMaterialDetail]
			WHERE
				[ProduceOtherMaterialDetailId] = #ProduceOtherMaterialDetailId#
        </select>
		
		<!-- delete -->
        <delete id="delete" parameterClass="string">
			DELETE FROM [dbo].[ProduceOtherMaterialDetail]
			WHERE
				[ProduceOtherMaterialDetailId] = #ProduceOtherMaterialDetailId#
        </delete>

		<!-- select all -->
        <select id="select_all" resultMap="ProduceOtherMaterialDetailResult" >
			SELECT *
			FROM 
				[dbo].[ProduceOtherMaterialDetail]
			

			
        </select>
        
		<select id="count_all" resultClass="int">
			select count(*)
			from 
				[dbo].[ProduceOtherMaterialDetail]
		</select>
		
		<select id="select_all_with_paging" resultMap="ProduceOtherMaterialDetailResult">
            SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[ProduceOtherMaterialDetail]
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
		</select>
		
		<!-- insert -->
        <insert id="insert" parameterClass="ProduceOtherMaterialDetail">
			INSERT INTO [dbo].[ProduceOtherMaterialDetail] 
			(
				[DepotPositionId],
				[ProductId],
				[ProduceOtherMaterialId],
				[ProduceOtherMaterialDetailId],
				[OtherMaterialQuantity],
				[OtherMaterialALLUserQuantity],
				[ProductStock],
				[MPSheaderId],
				[InvoiceXOId],
				[InvoiceXODetailId],
				[ProductUnit],
				[PrimaryKeyId],
				[ProduceOtherCompactMaterialId],
				[Description],
				[DepotOutStateDetail],
				[IsChecked],
				[ParentProductId]
			) 
			VALUES 
			(
				#DepotPositionId#,
				#ProductId#,
				#ProduceOtherMaterialId#,
				#ProduceOtherMaterialDetailId#,
				#OtherMaterialQuantity#,
				#OtherMaterialALLUserQuantity#,
				#ProductStock#,
				#MPSheaderId#,
				#InvoiceXOId#,
				#InvoiceXODetailId#,
				#ProductUnit#,
				#PrimaryKeyId#,
				#ProduceOtherCompactMaterialId#,
				#Description#,
				#DepotOutStateDetail#,
				#IsChecked#,
				#ParentProductId#
			)
        </insert>
		
		<!-- update -->
        <update id="update" parameterClass="ProduceOtherMaterialDetail">
			UPDATE [ProduceOtherMaterialDetail] SET
				[DepotPositionId] = #DepotPositionId#,
				[ProductId] = #ProductId#,
				[ProduceOtherMaterialId] = #ProduceOtherMaterialId#,
				[OtherMaterialQuantity] = #OtherMaterialQuantity#,
				[OtherMaterialALLUserQuantity] = #OtherMaterialALLUserQuantity#,
				[ProductStock] = #ProductStock#,
				[MPSheaderId] = #MPSheaderId#,
				[InvoiceXOId] = #InvoiceXOId#,
				[InvoiceXODetailId] = #InvoiceXODetailId#,
				[ProductUnit] = #ProductUnit#,
				[PrimaryKeyId] = #PrimaryKeyId#,
				[ProduceOtherCompactMaterialId] = #ProduceOtherCompactMaterialId#,
				[Description] = #Description#,
				[DepotOutStateDetail] = #DepotOutStateDetail#,
				[IsChecked] = #IsChecked#,
				[ParentProductId] = #ParentProductId#
			WHERE
				[ProduceOtherMaterialDetailId] = #ProduceOtherMaterialDetailId#
        </update>
		<select id="existsPrimary" resultClass="bool" parameterClass="string">
			<![CDATA[
			select case when exists(
				select *
				from [dbo].[ProduceOtherMaterialDetail]
				where  ProduceOtherMaterialDetailId = #value# 
				)
				then 1 else 0 end
			]]>
		</select>
		
    </statements>
</sqlMap>

