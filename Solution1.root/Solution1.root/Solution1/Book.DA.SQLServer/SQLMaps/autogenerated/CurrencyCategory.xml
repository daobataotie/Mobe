<?xml version="1.0" encoding="utf-8" ?> 
<sqlMap namespace="CurrencyCategory" xmlns="http://ibatis.apache.org/mapping" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="CurrencyCategory" type="Book.Model.CurrencyCategory, Book.Model" />
    </alias>
    <resultMaps>                                    
        <resultMap id="CurrencyCategoryResult" class="CurrencyCategory">
			<result property="CurrencyCategoryId" column="CurrencyCategoryId" />
			<result property="ExchangeRate" column="ExchangeRate" />
			<result property="EffectDate" column="EffectDate" />
			<result property="ConvertModel" column="ConvertModel" />
			<result property="ExchangeFloat" column="ExchangeFloat" />
			<result property="ExchangeRateModel" column="ExchangeRateModel" />
			<result property="MaxError" column="MaxError" />
			<result property="AdjustExchangeRate" column="AdjustExchangeRate" />
			<result property="AtCurrencyCategoryId" column="AtCurrencyCategoryId" />
		<result property="AtCurrencyCategory" column="AtCurrencyCategoryId" lazyLoad="false" select="AtCurrencyCategory.select_by_primary_key" />
        </resultMap>
    </resultMaps>
		
    <statements>
		<select id="has_rows_of" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[CurrencyCategory]
				WHERE
				[CurrencyCategoryId] = #CurrencyCategoryId#
				) then 1 else 0 end
		</select>
		<select id="has_rows" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[CurrencyCategory]
 				where invoicestatus=1 or invoicestatus is null				
				) then 1 else 0 end
		</select>
		<!-- select by primary key -->
        <select id="select_by_primary_key" resultMap="CurrencyCategoryResult" parameterClass="CurrencyCategory">
			SELECT
				[CurrencyCategoryId],
				[ExchangeRate],
				[EffectDate],
				[ConvertModel],
				[ExchangeFloat],
				[ExchangeRateModel],
				[MaxError],
				[AdjustExchangeRate],
				[AtCurrencyCategoryId]
			FROM
				[dbo].[CurrencyCategory]
			WHERE
				[CurrencyCategoryId] = #CurrencyCategoryId#
        </select>
		
		<!-- delete -->
        <delete id="delete" parameterClass="string">
			DELETE FROM [dbo].[CurrencyCategory]
			WHERE
				[CurrencyCategoryId] = #CurrencyCategoryId#
        </delete>

		<!-- select all -->
        <select id="select_all" resultMap="CurrencyCategoryResult" >
			SELECT *
			FROM 
				[dbo].[CurrencyCategory]
			

			
        </select>
        
		<select id="count_all" resultClass="int">
			select count(*)
			from 
				[dbo].[CurrencyCategory]
		</select>
		
		<select id="select_all_with_paging" resultMap="CurrencyCategoryResult">
            SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[CurrencyCategory]
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
		</select>
		
		<!-- insert -->
        <insert id="insert" parameterClass="CurrencyCategory">
			INSERT INTO [dbo].[CurrencyCategory] 
			(
				[CurrencyCategoryId],
				[ExchangeRate],
				[EffectDate],
				[ConvertModel],
				[ExchangeFloat],
				[ExchangeRateModel],
				[MaxError],
				[AdjustExchangeRate],
				[AtCurrencyCategoryId]
			) 
			VALUES 
			(
				#CurrencyCategoryId#,
				#ExchangeRate#,
				#EffectDate#,
				#ConvertModel#,
				#ExchangeFloat#,
				#ExchangeRateModel#,
				#MaxError#,
				#AdjustExchangeRate#,
				#AtCurrencyCategoryId#
			)
        </insert>
		
		<!-- update -->
        <update id="update" parameterClass="CurrencyCategory">
			UPDATE [CurrencyCategory] SET
				[ExchangeRate] = #ExchangeRate#,
				[EffectDate] = #EffectDate#,
				[ConvertModel] = #ConvertModel#,
				[ExchangeFloat] = #ExchangeFloat#,
				[ExchangeRateModel] = #ExchangeRateModel#,
				[MaxError] = #MaxError#,
				[AdjustExchangeRate] = #AdjustExchangeRate#,
				[AtCurrencyCategoryId] = #AtCurrencyCategoryId#
			WHERE
				[CurrencyCategoryId] = #CurrencyCategoryId#
        </update>
		<select id="existsPrimary" resultClass="bool" parameterClass="string">
			<![CDATA[
			select case when exists(
				select *
				from [dbo].[CurrencyCategory]
				where  CurrencyCategoryId = #value# 
				)
				then 1 else 0 end
			]]>
		</select>
		
    </statements>
</sqlMap>

