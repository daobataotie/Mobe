<?xml version="1.0" encoding="utf-8" ?> 
<sqlMap namespace="DepotLevel" xmlns="http://ibatis.apache.org/mapping" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="DepotLevel" type="Book.Model.DepotLevel, Book.Model" />
    </alias>
    <resultMaps>                                    
        <resultMap id="DepotLevelResult" class="DepotLevel">
			<result property="LevelId" column="LevelId" />
			<result property="RowId" column="RowId" />
			<result property="InsertTime" column="InsertTime" />
			<result property="UpdateTime" column="UpdateTime" />
			<result property="LevelCode" column="LevelCode" />
			<result property="LevelDescription" column="LevelDescription" />
			<result property="Row" column="RowId" lazyLoad="false" select="DepotRow.select_by_primary_key" />
        </resultMap>
    </resultMaps>
		
    <statements>
		<select id="has_rows_of" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[DepotLevel]
				WHERE
				[LevelId] = #LevelId#
				) then 1 else 0 end
		</select>
		<select id="has_rows" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[DepotLevel]
 								
				) then 1 else 0 end
		</select>
		<select id="get_first" resultMap="DepotLevelResult">
			<![CDATA[
			select top 1 *
			from dbo.DepotLevel
			
			order by InvoiceDate,inserttime
			]]>
		</select>
		<select id="get_last" resultMap="DepotLevelResult">
			<![CDATA[
			select top 1 *
			from dbo.DepotLevel
			
			order by InvoiceDate desc,inserttime desc
			]]>
		</select>
		<select id="get_prev" resultMap="DepotLevelResult" parameterClass="DepotLevel">
			<![CDATA[
			select top 1 *
			from dbo.DepotLevel
			where InvoiceDate < #InvoiceDate#
			order by InvoiceDate desc, inserttime desc
			]]>
		</select>
		<select id="get_next" resultMap="DepotLevelResult" parameterClass="DepotLevel">
			<![CDATA[
			select top 1 *
			from dbo.DepotLevel
			where InvoiceDate > #InvoiceDate#
			order by InvoiceDate,inserttime
			]]>
		</select>
		<select id="has_rows_before" resultClass="bool" parameterClass="DepotLevel">
			<![CDATA[
			select case when exists(
				select * 
				from dbo.DepotLevel
				where InvoiceDate < #InvoiceDate#
				) then 1 else 0 end
			]]>
		</select>
		
		<select id="has_rows_after" resultClass="bool" parameterClass="DepotLevel">
			<![CDATA[
			select case when exists(
				select * 
				from dbo.DepotLevel
				where InvoiceDate > #InvoiceDate#
				) then 1 else 0 end
			]]>
		</select>
		
		<!--
		<select id="has_rows_before" resultClass="bool" parameterClass="DepotLevel">
			<![CDATA[
			select case when exists(
				select * 
				from dbo.DepotLevel
				where inserttime < #InsertTime# 
				) then 1 else 0 end
			]]>
		</select>
		
		<select id="has_rows_after" resultClass="bool" parameterClass="DepotLevel">
			<![CDATA[
			select case when exists(
				select * 
				from dbo.DepotLevel
				where inserttime > #InsertTime# 
				) then 1 else 0 end
			]]>
		</select>
		-->
		
		<!-- select by primary key -->
        <select id="select_by_primary_key" resultMap="DepotLevelResult" parameterClass="DepotLevel">
			SELECT
				[LevelId],
				[RowId],
				[InsertTime],
				[UpdateTime],
				[LevelCode],
				[LevelDescription]
			FROM
				[dbo].[DepotLevel]
			WHERE
				[LevelId] = #LevelId#
        </select>
		
		<!-- delete -->
        <delete id="delete" parameterClass="string">
			DELETE FROM [dbo].[DepotLevel]
			WHERE
				[LevelId] = #LevelId#
        </delete>

		<!-- select all -->
        <select id="select_all" resultMap="DepotLevelResult" >
			SELECT *
			FROM 
				[dbo].[DepotLevel]
			ORDER BY LevelId ASC
        </select>
        
		<select id="count_all" resultClass="int">
			select count(*)
			from 
				[dbo].[DepotLevel]
		</select>
		
		<select id="select_all_with_paging" resultMap="DepotLevelResult">
            SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[DepotLevel]
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
		</select>
		
		<!-- insert -->
        <insert id="insert" parameterClass="DepotLevel">
			INSERT INTO [dbo].[DepotLevel] 
			(
				[LevelId],
				[RowId],
				[InsertTime],
				[UpdateTime],
				[LevelCode],
				[LevelDescription]
			) 
			VALUES 
			(
				#LevelId#,
				#RowId#,
				#InsertTime#,
				#UpdateTime#,
				#LevelCode#,
				#LevelDescription#
			)
        </insert>
		
		<!-- update -->
        <update id="update" parameterClass="DepotLevel">
			UPDATE [DepotLevel] SET
				[RowId] = #RowId#,
				[InsertTime] = #InsertTime#,
				[UpdateTime] = #UpdateTime#,
				[LevelCode] = #LevelCode#,
				[LevelDescription] = #LevelDescription#
			WHERE
				[LevelId] = #LevelId#
        </update>

		
    </statements>
</sqlMap>

