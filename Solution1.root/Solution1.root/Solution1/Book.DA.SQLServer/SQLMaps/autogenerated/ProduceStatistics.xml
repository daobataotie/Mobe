<?xml version="1.0" encoding="utf-8" ?> 
<sqlMap namespace="ProduceStatistics" xmlns="http://ibatis.apache.org/mapping" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="ProduceStatistics" type="Book.Model.ProduceStatistics, Book.Model" />
    </alias>
    <resultMaps>                                    
        <resultMap id="ProduceStatisticsResult" class="ProduceStatistics">
			<result property="ProduceStatisticsId" column="ProduceStatisticsId" />
			<result property="PronoteHeaderID" column="PronoteHeaderID" />
			<result property="ProceduresId" column="ProceduresId" />
			<result property="Description" column="Description" />
			<result property="EmployeeId" column="EmployeeId" />
			<result property="InsertTime" column="InsertTime" />
			<result property="UpdateTime" column="UpdateTime" />
			<result property="ProduceStatisticsDate" column="ProduceStatisticsDate" />
			<result property="WorkHouseId" column="WorkHouseId" />
			<result property="ProduceStatisticsType" column="ProduceStatisticsType" />
		<result property="PronoteHeader" column="PronoteHeaderID" lazyLoad="false" select="PronoteHeader.select_by_primary_key" />		<result property="Employee" column="EmployeeId" lazyLoad="false" select="Employee.select_by_primary_key" />		<result property="Procedures" column="ProceduresId" lazyLoad="false" select="Procedures.select_by_primary_key" />		<result property="WorkHouse" column="WorkHouseId" lazyLoad="false" select="WorkHouse.select_by_primary_key" />
        </resultMap>
    </resultMaps>
		
    <statements>
		<select id="has_rows_of" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[ProduceStatistics]
				WHERE
				[ProduceStatisticsId] = #ProduceStatisticsId#
				) then 1 else 0 end
		</select>
		<select id="has_rows" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[ProduceStatistics]
 								
				) then 1 else 0 end
		</select>
		<select id="get_first" resultMap="ProduceStatisticsResult">
			<![CDATA[
			select top 1 *
			from dbo.ProduceStatistics 
			order by InsertTime
			]]>
		</select>
		<select id="get_last" resultMap="ProduceStatisticsResult">
			<![CDATA[
			select top 1 *
			from dbo.ProduceStatistics 			
			order by InsertTime desc
			]]>
		</select>
		<select id="get_prev" resultMap="ProduceStatisticsResult" parameterClass="ProduceStatistics">
			<![CDATA[
			select top 1 *
			from dbo.ProduceStatistics
			where InsertTime < #InsertTime#
			order by InsertTime desc
			]]>
		</select>
		<select id="get_next" resultMap="ProduceStatisticsResult" parameterClass="ProduceStatistics">
			<![CDATA[
			select top 1 *
			from dbo.ProduceStatistics
			where InsertTime > #InsertTime#
			order by InsertTime
			]]>
		</select>
		<select id="has_rows_before" resultClass="bool" parameterClass="ProduceStatistics">
			<![CDATA[
			select case when exists(
				select * 
				from dbo.ProduceStatistics
				where InsertTime < #InsertTime#
				) 
				then 1 else 0 end
			]]>
		</select>
		
		<select id="has_rows_after" resultClass="bool" parameterClass="ProduceStatistics">
			<![CDATA[
			select case when exists(
				select * 
				from dbo.ProduceStatistics
				where InsertTime > #InsertTime#
				) then 1 else 0 end
			]]>
		</select>
		<!-- select by primary key -->
        <select id="select_by_primary_key" resultMap="ProduceStatisticsResult" parameterClass="ProduceStatistics">
			SELECT
				[ProduceStatisticsId],
				[PronoteHeaderID],
				[ProceduresId],
				[Description],
				[EmployeeId],
				[InsertTime],
				[UpdateTime],
				[ProduceStatisticsDate],
				[WorkHouseId],
				[ProduceStatisticsType]
			FROM
				[dbo].[ProduceStatistics]
			WHERE
				[ProduceStatisticsId] = #ProduceStatisticsId#
        </select>
		
		<!-- delete -->
        <delete id="delete" parameterClass="string">
			DELETE FROM [dbo].[ProduceStatistics]
			WHERE
				[ProduceStatisticsId] = #ProduceStatisticsId#
        </delete>

		<!-- select all -->
        <select id="select_all" resultMap="ProduceStatisticsResult" >
			SELECT *
			FROM 
				[dbo].[ProduceStatistics]
			
  ORDER BY InsertTime DESC  
			
        </select>
        
		<select id="count_all" resultClass="int">
			select count(*)
			from 
				[dbo].[ProduceStatistics]
		</select>
		
		<select id="select_all_with_paging" resultMap="ProduceStatisticsResult">
            SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[ProduceStatistics]
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
		</select>
		
		<!-- insert -->
        <insert id="insert" parameterClass="ProduceStatistics">
			INSERT INTO [dbo].[ProduceStatistics] 
			(
				[ProduceStatisticsId],
				[PronoteHeaderID],
				[ProceduresId],
				[Description],
				[EmployeeId],
				[InsertTime],
				[UpdateTime],
				[ProduceStatisticsDate],
				[WorkHouseId],
				[ProduceStatisticsType]
			) 
			VALUES 
			(
				#ProduceStatisticsId#,
				#PronoteHeaderID#,
				#ProceduresId#,
				#Description#,
				#EmployeeId#,
				#InsertTime#,
				#UpdateTime#,
				#ProduceStatisticsDate#,
				#WorkHouseId#,
				#ProduceStatisticsType#
			)
        </insert>
		
		<!-- update -->
        <update id="update" parameterClass="ProduceStatistics">
			UPDATE [ProduceStatistics] SET
				[PronoteHeaderID] = #PronoteHeaderID#,
				[ProceduresId] = #ProceduresId#,
				[Description] = #Description#,
				[EmployeeId] = #EmployeeId#,
				[InsertTime] = #InsertTime#,
				[UpdateTime] = #UpdateTime#,
				[ProduceStatisticsDate] = #ProduceStatisticsDate#,
				[WorkHouseId] = #WorkHouseId#,
				[ProduceStatisticsType] = #ProduceStatisticsType#
			WHERE
				[ProduceStatisticsId] = #ProduceStatisticsId#
        </update>
		<select id="existsPrimary" resultClass="bool" parameterClass="string">
			<![CDATA[
			select case when exists(
				select *
				from [dbo].[ProduceStatistics]
				where  ProduceStatisticsId = #value# 
				)
				then 1 else 0 end
			]]>
		</select>
		
    </statements>
</sqlMap>

