<?xml version="1.0" encoding="utf-8" ?> 
<sqlMap namespace="Bank" xmlns="http://ibatis.apache.org/mapping" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="Bank" type="Book.Model.Bank, Book.Model" />
    </alias>
    <resultMaps>                                    
        <resultMap id="BankResult" class="Bank">
			<result property="BankId" column="BankId" />
			<result property="InsertTime" column="InsertTime" />
			<result property="UpdateTime" column="UpdateTime" />
			<result property="BankName" column="BankName" />
			<result property="BankAddress" column="BankAddress" />
			<result property="BankPhone" column="BankPhone" />
			<result property="Description" column="Description" />
        </resultMap>
    </resultMaps>
		
    <statements>
		<select id="has_rows_of" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[Bank]
				WHERE
				[BankId] = #BankId#
				) then 1 else 0 end
		</select>
		<select id="has_rows" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[Bank]
 								
				) then 1 else 0 end
		</select>
		<select id="get_first" resultMap="BankResult">
			<![CDATA[
			select top 1 *
			from dbo.Bank 
			order by InsertTime
			]]>
		</select>
		<select id="get_last" resultMap="BankResult">
			<![CDATA[
			select top 1 *
			from dbo.Bank 			
			order by InsertTime desc
			]]>
		</select>
		<select id="get_prev" resultMap="BankResult" parameterClass="Bank">
			<![CDATA[
			select top 1 *
			from dbo.Bank
			where InsertTime < #InsertTime#
			order by InsertTime desc
			]]>
		</select>
		<select id="get_next" resultMap="BankResult" parameterClass="Bank">
			<![CDATA[
			select top 1 *
			from dbo.Bank
			where InsertTime > #InsertTime#
			order by InsertTime
			]]>
		</select>
		<select id="has_rows_before" resultClass="bool" parameterClass="Bank">
			<![CDATA[
			select case when exists(
				select * 
				from dbo.Bank
				where InsertTime < #InsertTime#
				) 
				then 1 else 0 end
			]]>
		</select>
		
		<select id="has_rows_after" resultClass="bool" parameterClass="Bank">
			<![CDATA[
			select case when exists(
				select * 
				from dbo.Bank
				where InsertTime > #InsertTime#
				) then 1 else 0 end
			]]>
		</select>
		<!-- select by primary key -->
        <select id="select_by_primary_key" resultMap="BankResult" parameterClass="Bank">
			SELECT
				[BankId],
				[InsertTime],
				[UpdateTime],
				[BankName],
				[BankAddress],
				[BankPhone],
				[Description]
			FROM
				[dbo].[Bank]
			WHERE
				[BankId] = #BankId#
        </select>
		
		<!-- delete -->
        <delete id="delete" parameterClass="string">
			DELETE FROM [dbo].[Bank]
			WHERE
				[BankId] = #BankId#
        </delete>

		<!-- select all -->
        <select id="select_all" resultMap="BankResult" >
			SELECT *
			FROM 
				[dbo].[Bank]
			ORDER BY BankId ASC
        </select>
        
		<select id="count_all" resultClass="int">
			select count(*)
			from 
				[dbo].[Bank]
		</select>
		
		<select id="select_all_with_paging" resultMap="BankResult">
            SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[Bank]
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
		</select>
		
		<!-- insert -->
        <insert id="insert" parameterClass="Bank">
			INSERT INTO [dbo].[Bank] 
			(
				[BankId],
				[InsertTime],
				[UpdateTime],
				[BankName],
				[BankAddress],
				[BankPhone],
				[Description]
			) 
			VALUES 
			(
				#BankId#,
				#InsertTime#,
				#UpdateTime#,
				#BankName#,
				#BankAddress#,
				#BankPhone#,
				#Description#
			)
        </insert>
		
		<!-- update -->
        <update id="update" parameterClass="Bank">
			UPDATE [Bank] SET
				[InsertTime] = #InsertTime#,
				[UpdateTime] = #UpdateTime#,
				[BankName] = #BankName#,
				[BankAddress] = #BankAddress#,
				[BankPhone] = #BankPhone#,
				[Description] = #Description#
			WHERE
				[BankId] = #BankId#
        </update>
    </statements>
</sqlMap>

