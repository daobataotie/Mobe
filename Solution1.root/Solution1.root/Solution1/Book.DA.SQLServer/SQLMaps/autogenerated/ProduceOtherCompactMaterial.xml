<?xml version="1.0" encoding="utf-8" ?> 
<sqlMap namespace="ProduceOtherCompactMaterial" xmlns="http://ibatis.apache.org/mapping" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="ProduceOtherCompactMaterial" type="Book.Model.ProduceOtherCompactMaterial, Book.Model" />
    </alias>
    <resultMaps>                                    
        <resultMap id="ProduceOtherCompactMaterialResult" class="ProduceOtherCompactMaterial">
			<result property="ProduceOtherCompactMaterialId" column="ProduceOtherCompactMaterialId" />
			<result property="ProduceOtherCompactId" column="ProduceOtherCompactId" />
			<result property="ProductId" column="ProductId" />
			<result property="ProductUnit" column="ProductUnit" />
			<result property="ProduceQuantity" column="ProduceQuantity" />
			<result property="AlreadyOutQuantity" column="AlreadyOutQuantity" />
			<result property="ParentProductId" column="ParentProductId" />
			<result property="Description" column="Description" />
			<result property="DetailsFlag" column="DetailsFlag" />
		<result property="ParentProduct" column="ParentProductId" lazyLoad="false" select="Product.select_by_primary_key" />		<result property="Product" column="ProductId" lazyLoad="false" select="Product.select_by_primary_key" />		<result property="ProduceOtherCompact" column="ProduceOtherCompactId" lazyLoad="false" select="ProduceOtherCompact.select_by_primary_key" />
        </resultMap>
    </resultMaps>
		
    <statements>
		<select id="has_rows_of" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[ProduceOtherCompactMaterial]
				WHERE
				[ProduceOtherCompactMaterialId] = #ProduceOtherCompactMaterialId#
				) then 1 else 0 end
		</select>
		<select id="has_rows" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[ProduceOtherCompactMaterial]
 								
				) then 1 else 0 end
		</select>
		<!-- select by primary key -->
        <select id="select_by_primary_key" resultMap="ProduceOtherCompactMaterialResult" parameterClass="ProduceOtherCompactMaterial">
			SELECT
				[ProduceOtherCompactMaterialId],
				[ProduceOtherCompactId],
				[ProductId],
				[ProductUnit],
				[ProduceQuantity],
				[AlreadyOutQuantity],
				[ParentProductId],
				[Description],
				[DetailsFlag]
			FROM
				[dbo].[ProduceOtherCompactMaterial]
			WHERE
				[ProduceOtherCompactMaterialId] = #ProduceOtherCompactMaterialId#
        </select>
		
		<!-- delete -->
        <delete id="delete" parameterClass="string">
			DELETE FROM [dbo].[ProduceOtherCompactMaterial]
			WHERE
				[ProduceOtherCompactMaterialId] = #ProduceOtherCompactMaterialId#
        </delete>

		<!-- select all -->
        <select id="select_all" resultMap="ProduceOtherCompactMaterialResult" >
			SELECT *
			FROM 
				[dbo].[ProduceOtherCompactMaterial]
			

			
        </select>
        
		<select id="count_all" resultClass="int">
			select count(*)
			from 
				[dbo].[ProduceOtherCompactMaterial]
		</select>
		
		<select id="select_all_with_paging" resultMap="ProduceOtherCompactMaterialResult">
            SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[ProduceOtherCompactMaterial]
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
		</select>
		
		<!-- insert -->
        <insert id="insert" parameterClass="ProduceOtherCompactMaterial">
			INSERT INTO [dbo].[ProduceOtherCompactMaterial] 
			(
				[ProduceOtherCompactMaterialId],
				[ProduceOtherCompactId],
				[ProductId],
				[ProductUnit],
				[ProduceQuantity],
				[AlreadyOutQuantity],
				[ParentProductId],
				[Description],
				[DetailsFlag]
			) 
			VALUES 
			(
				#ProduceOtherCompactMaterialId#,
				#ProduceOtherCompactId#,
				#ProductId#,
				#ProductUnit#,
				#ProduceQuantity#,
				#AlreadyOutQuantity#,
				#ParentProductId#,
				#Description#,
				#DetailsFlag#
			)
        </insert>
		
		<!-- update -->
        <update id="update" parameterClass="ProduceOtherCompactMaterial">
			UPDATE [ProduceOtherCompactMaterial] SET
				[ProduceOtherCompactId] = #ProduceOtherCompactId#,
				[ProductId] = #ProductId#,
				[ProductUnit] = #ProductUnit#,
				[ProduceQuantity] = #ProduceQuantity#,
				[AlreadyOutQuantity] = #AlreadyOutQuantity#,
				[ParentProductId] = #ParentProductId#,
				[Description] = #Description#,
				[DetailsFlag] = #DetailsFlag#
			WHERE
				[ProduceOtherCompactMaterialId] = #ProduceOtherCompactMaterialId#
        </update>
		<select id="existsPrimary" resultClass="bool" parameterClass="string">
			<![CDATA[
			select case when exists(
				select *
				from [dbo].[ProduceOtherCompactMaterial]
				where  ProduceOtherCompactMaterialId = #value# 
				)
				then 1 else 0 end
			]]>
		</select>
		
    </statements>
</sqlMap>

