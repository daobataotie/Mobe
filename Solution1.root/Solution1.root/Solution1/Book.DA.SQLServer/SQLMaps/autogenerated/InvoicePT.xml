<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="InvoicePT" xmlns="http://ibatis.apache.org/mapping"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="InvoicePT" type="Book.Model.InvoicePT, Book.Model" />
  </alias>
  <resultMaps>
    <resultMap id="InvoicePTResult" class="InvoicePT">
      <result property="InvoiceId" column="InvoiceId" />
      <result property="Employee0Id" column="Employee0Id" />
      <result property="DepotId" column="DepotId" />
      <result property="DepotInId" column="DepotInId" />
      <result property="Employee1Id" column="Employee1Id" />
      <result property="Employee2Id" column="Employee2Id" />
      <result property="Employee3Id" column="Employee3Id" />
      <result property="InvoiceLRTime" column="InvoiceLRTime" />
      <result property="InvoiceGZTime" column="InvoiceGZTime" />
      <result property="InvoiceZFTime" column="InvoiceZFTime" />
      <result property="InvoiceZFCause" column="InvoiceZFCause" />
      <result property="InvoiceDate" column="InvoiceDate" />
      <result property="InvoiceAbstract" column="InvoiceAbstract" />
      <result property="InvoiceNote" column="InvoiceNote" />
      <result property="InvoiceStatus" column="InvoiceStatus" />
      <result property="InsertTime" column="InsertTime" />
      <result property="UpdateTime" column="UpdateTime" />
      <result property="Depot" column="DepotId" lazyLoad="false" select="Depot.select_by_primary_key" />
      <result property="DepotIn" column="DepotInId" lazyLoad="false" select="Depot.select_by_primary_key" />
      <result property="Employee1" column="Employee1Id" lazyLoad="false" select="Employee.select_by_primary_key" />
      <result property="Employee2" column="Employee2Id" lazyLoad="false" select="Employee.select_by_primary_key" />
      <result property="Employee3" column="Employee3Id" lazyLoad="false" select="Employee.select_by_primary_key" />
      <result property="Employee0" column="Employee0Id" lazyLoad="false" select="Employee.select_by_primary_key" />
    </resultMap>
  </resultMaps>

  <statements>
    <select id="has_rows_of" resultClass="bool">
      select case when exists(
      SELECT
      *
      FROM
      [dbo].[InvoicePT]
      WHERE
      [InvoiceId] = #InvoiceId#
      ) then 1 else 0 end
    </select>
    <select id="has_rows" resultClass="bool">
      select case when exists(
      SELECT
      *
      FROM
      [dbo].[InvoicePT]
      where invoicestatus=1
      ) then 1 else 0 end
    </select>
    <select id="get_first" resultMap="InvoicePTResult">
      <![CDATA[
			select top 1 *
			from dbo.InvoicePT
			where invoicestatus=1
			order by InvoiceDate,inserttime
			]]>
    </select>
    <select id="get_last" resultMap="InvoicePTResult">
      <![CDATA[
			select top 1 *
			from dbo.InvoicePT
			where invoicestatus=1
			order by InvoiceDate desc,inserttime desc
			]]>
    </select>
    <select id="get_prev" resultMap="InvoicePTResult" parameterClass="InvoicePT">
      <![CDATA[
			select top 1 *
			from dbo.InvoicePT
			where InvoiceDate < #InvoiceDate#
			order by InvoiceDate desc, inserttime desc
			]]>
    </select>
    <select id="get_next" resultMap="InvoicePTResult" parameterClass="InvoicePT">
      <![CDATA[
			select top 1 *
			from dbo.InvoicePT
			where InvoiceDate > #InvoiceDate#
			order by InvoiceDate,inserttime
			]]>
    </select>

    <select id="has_rows_before" resultClass="bool" parameterClass="InvoicePT">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.InvoicePT
				where InvoiceDate < #InvoiceDate#
				) then 1 else 0 end
			]]>
    </select>

    <select id="has_rows_after" resultClass="bool" parameterClass="InvoicePT">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.InvoicePT
				where InvoiceDate > #InvoiceDate#
				) then 1 else 0 end
			]]>
    </select>
    <!-- select by primary key -->
    <select id="select_by_primary_key" resultMap="InvoicePTResult" parameterClass="InvoicePT">
      SELECT
      [InvoiceId],
      [Employee0Id],
      [DepotId],
      [DepotInId],
      [Employee1Id],
      [Employee2Id],
      [Employee3Id],
      [InvoiceLRTime],
      [InvoiceGZTime],
      [InvoiceZFTime],
      [InvoiceZFCause],
      [InvoiceDate],
      [InvoiceAbstract],
      [InvoiceNote],
      [InvoiceStatus],
      [InsertTime],
      [UpdateTime]
      FROM
      [dbo].[InvoicePT]
      WHERE
      [InvoiceId] = #InvoiceId#
    </select>

    <!-- delete -->
    <delete id="delete" parameterClass="string">
      DELETE FROM [dbo].[InvoicePT]
      WHERE
      [InvoiceId] = #InvoiceId#
    </delete>

    <!-- select all -->
    <select id="select_all" resultMap="InvoicePTResult" >
      SELECT *
      FROM
      [dbo].[InvoicePT]


    </select>

    <select id="count_all" resultClass="int">
      select count(*)
      from
      [dbo].[InvoicePT]
    </select>

    <select id="select_all_with_paging" resultMap="InvoicePTResult">
      SELECT *
      FROM
      (
      SELECT *, row_number() over(order by $OrderStatement$) rownumber
      FROM
      [dbo].[InvoicePT]
      ) t
      WHERE t.rownumber between #Row1# and #Row2#
    </select>

    <!-- insert -->
    <insert id="insert" parameterClass="InvoicePT">
      INSERT INTO [dbo].[InvoicePT]
      (
      [InvoiceId],
      [Employee0Id],
      [DepotId],
      [DepotInId],
      [Employee1Id],
      [Employee2Id],
      [Employee3Id],
      [InvoiceLRTime],
      [InvoiceGZTime],
      [InvoiceZFTime],
      [InvoiceZFCause],
      [InvoiceDate],
      [InvoiceAbstract],
      [InvoiceNote],
      [InvoiceStatus],
      [InsertTime],
      [UpdateTime]
      )
      VALUES
      (
      #InvoiceId#,
      #Employee0Id#,
      #DepotId#,
      #DepotInId#,
      #Employee1Id#,
      #Employee2Id#,
      #Employee3Id#,
      #InvoiceLRTime#,
      #InvoiceGZTime#,
      #InvoiceZFTime#,
      #InvoiceZFCause#,
      #InvoiceDate#,
      #InvoiceAbstract#,
      #InvoiceNote#,
      #InvoiceStatus#,
      #InsertTime#,
      #UpdateTime#
      )
    </insert>

    <!-- update -->
    <update id="update" parameterClass="InvoicePT">
      UPDATE [InvoicePT] SET
      [Employee0Id] = #Employee0Id#,
      [DepotId] = #DepotId#,
      [DepotInId] = #DepotInId#,
      [Employee1Id] = #Employee1Id#,
      [Employee2Id] = #Employee2Id#,
      [Employee3Id] = #Employee3Id#,
      [InvoiceLRTime] = #InvoiceLRTime#,
      [InvoiceGZTime] = #InvoiceGZTime#,
      [InvoiceZFTime] = #InvoiceZFTime#,
      [InvoiceZFCause] = #InvoiceZFCause#,
      [InvoiceDate] = #InvoiceDate#,
      [InvoiceAbstract] = #InvoiceAbstract#,
      [InvoiceNote] = #InvoiceNote#,
      [InvoiceStatus] = #InvoiceStatus#,
      [InsertTime] = #InsertTime#,
      [UpdateTime] = #UpdateTime#
      WHERE
      [InvoiceId] = #InvoiceId#
    </update>
    <select id="existsPrimary" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select *
				from [dbo].[InvoicePT]
				where  InvoiceId = #value# 
				)
				then 1 else 0 end
			]]>
    </select>

  </statements>
</sqlMap>

