<?xml version="1.0" encoding="utf-8" ?> 
<sqlMap namespace="ProduceOtherExitDetail" xmlns="http://ibatis.apache.org/mapping" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="ProduceOtherExitDetail" type="Book.Model.ProduceOtherExitDetail, Book.Model" />
    </alias>
    <resultMaps>                                    
        <resultMap id="ProduceOtherExitDetailResult" class="ProduceOtherExitDetail">
			<result property="ProduceOtherExitDetailId" column="ProduceOtherExitDetailId" />
			<result property="ProductId" column="ProductId" />
			<result property="DepotPositionId" column="DepotPositionId" />
			<result property="ProduceOtherExitMaterialId" column="ProduceOtherExitMaterialId" />
			<result property="ProduceQuantity" column="ProduceQuantity" />
			<result property="ProductStock" column="ProductStock" />
			<result property="ProduceAllUserQuantity" column="ProduceAllUserQuantity" />
			<result property="MPSheaderId" column="MPSheaderId" />
			<result property="CriterionUserQuantity" column="CriterionUserQuantity" />
			<result property="InvoiceXOId" column="InvoiceXOId" />
			<result property="InvoiceXODetailId" column="InvoiceXODetailId" />
			<result property="ProductUnit" column="ProductUnit" />
			<result property="PrimaryKeyId" column="PrimaryKeyId" />
			<result property="ProduceRepayQuantity" column="ProduceRepayQuantity" />
			<result property="RepayDate" column="RepayDate" />
			<result property="Description" column="Description" />
		<result property="DepotPosition" column="DepotPositionId" lazyLoad="false" select="DepotPosition.select_by_primary_key" />		<result property="PrimaryKey" column="PrimaryKeyId" lazyLoad="false" select="CustomerProducts.select_by_primary_key" />		<result property="ProduceOtherExitMaterial" column="ProduceOtherExitMaterialId" lazyLoad="false" select="ProduceOtherExitMaterial.select_by_primary_key" />		<result property="Product" column="ProductId" lazyLoad="false" select="Product.select_by_primary_key" />
        </resultMap>
    </resultMaps>
		
    <statements>
		<select id="has_rows_of" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[ProduceOtherExitDetail]
				WHERE
				[ProduceOtherExitDetailId] = #ProduceOtherExitDetailId#
				) then 1 else 0 end
		</select>
		<select id="has_rows" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[ProduceOtherExitDetail]
 								
				) then 1 else 0 end
		</select>
		<!-- select by primary key -->
        <select id="select_by_primary_key" resultMap="ProduceOtherExitDetailResult" parameterClass="ProduceOtherExitDetail">
			SELECT
				[ProduceOtherExitDetailId],
				[ProductId],
				[DepotPositionId],
				[ProduceOtherExitMaterialId],
				[ProduceQuantity],
				[ProductStock],
				[ProduceAllUserQuantity],
				[MPSheaderId],
				[CriterionUserQuantity],
				[InvoiceXOId],
				[InvoiceXODetailId],
				[ProductUnit],
				[PrimaryKeyId],
				[ProduceRepayQuantity],
				[RepayDate],
				[Description]
			FROM
				[dbo].[ProduceOtherExitDetail]
			WHERE
				[ProduceOtherExitDetailId] = #ProduceOtherExitDetailId#
        </select>
		
		<!-- delete -->
        <delete id="delete" parameterClass="string">
			DELETE FROM [dbo].[ProduceOtherExitDetail]
			WHERE
				[ProduceOtherExitDetailId] = #ProduceOtherExitDetailId#
        </delete>

		<!-- select all -->
        <select id="select_all" resultMap="ProduceOtherExitDetailResult" >
			SELECT *
			FROM 
				[dbo].[ProduceOtherExitDetail]
			
			
        </select>
        
		<select id="count_all" resultClass="int">
			select count(*)
			from 
				[dbo].[ProduceOtherExitDetail]
		</select>
		
		<select id="select_all_with_paging" resultMap="ProduceOtherExitDetailResult">
            SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[ProduceOtherExitDetail]
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
		</select>
		
		<!-- insert -->
        <insert id="insert" parameterClass="ProduceOtherExitDetail">
			INSERT INTO [dbo].[ProduceOtherExitDetail] 
			(
				[ProduceOtherExitDetailId],
				[ProductId],
				[DepotPositionId],
				[ProduceOtherExitMaterialId],
				[ProduceQuantity],
				[ProductStock],
				[ProduceAllUserQuantity],
				[MPSheaderId],
				[CriterionUserQuantity],
				[InvoiceXOId],
				[InvoiceXODetailId],
				[ProductUnit],
				[PrimaryKeyId],
				[ProduceRepayQuantity],
				[RepayDate],
				[Description]
			) 
			VALUES 
			(
				#ProduceOtherExitDetailId#,
				#ProductId#,
				#DepotPositionId#,
				#ProduceOtherExitMaterialId#,
				#ProduceQuantity#,
				#ProductStock#,
				#ProduceAllUserQuantity#,
				#MPSheaderId#,
				#CriterionUserQuantity#,
				#InvoiceXOId#,
				#InvoiceXODetailId#,
				#ProductUnit#,
				#PrimaryKeyId#,
				#ProduceRepayQuantity#,
				#RepayDate#,
				#Description#
			)
        </insert>
		
		<!-- update -->
        <update id="update" parameterClass="ProduceOtherExitDetail">
			UPDATE [ProduceOtherExitDetail] SET
				[ProductId] = #ProductId#,
				[DepotPositionId] = #DepotPositionId#,
				[ProduceOtherExitMaterialId] = #ProduceOtherExitMaterialId#,
				[ProduceQuantity] = #ProduceQuantity#,
				[ProductStock] = #ProductStock#,
				[ProduceAllUserQuantity] = #ProduceAllUserQuantity#,
				[MPSheaderId] = #MPSheaderId#,
				[CriterionUserQuantity] = #CriterionUserQuantity#,
				[InvoiceXOId] = #InvoiceXOId#,
				[InvoiceXODetailId] = #InvoiceXODetailId#,
				[ProductUnit] = #ProductUnit#,
				[PrimaryKeyId] = #PrimaryKeyId#,
				[ProduceRepayQuantity] = #ProduceRepayQuantity#,
				[RepayDate] = #RepayDate#,
				[Description] = #Description#
			WHERE
				[ProduceOtherExitDetailId] = #ProduceOtherExitDetailId#
        </update>
		<select id="existsPrimary" resultClass="bool" parameterClass="string">
			<![CDATA[
			select case when exists(
				select *
				from [dbo].[ProduceOtherExitDetail]
				where  ProduceOtherExitDetailId = #value# 
				)
				then 1 else 0 end
			]]>
		</select>
		
    </statements>
</sqlMap>

