<?xml version="1.0" encoding="utf-8" ?> 
<sqlMap namespace="Customer" xmlns="http://ibatis.apache.org/mapping" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="Customer" type="Book.Model.Customer, Book.Model" />
    </alias>
    <resultMaps>                                    
        <resultMap id="CustomerResult" class="Customer">
			<result property="Id" column="Id" />
			<result property="EmployeeChangeId" column="EmployeeChangeId" />
			<result property="EmployeeCreatorId" column="EmployeeCreatorId" />
			<result property="EmployeesBusinessId" column="EmployeesBusinessId" />
			<result property="CustomerId" column="CustomerId" />
			<result property="CustomerCategoryId" column="CustomerCategoryId" />
			<result property="AreaCategoryId" column="AreaCategoryId" />
			<result property="TradeCategoryId" column="TradeCategoryId" />
			<result property="CompanyLevelId" column="CompanyLevelId" />
			<result property="InsertTime" column="InsertTime" />
			<result property="UpdateTime" column="UpdateTime" />
			<result property="CustomerFullName" column="CustomerFullName" />
			<result property="CustomerDescription" column="CustomerDescription" />
			<result property="CustomerShortName" column="CustomerShortName" />
			<result property="CustomerReceivable" column="CustomerReceivable" />
			<result property="CustomerPayDate" column="CustomerPayDate" />
			<result property="CustomerAddress" column="CustomerAddress" />
			<result property="CustomerPhone" column="CustomerPhone" />
			<result property="CustomerFax" column="CustomerFax" />
			<result property="CustomerEMail" column="CustomerEMail" />
			<result property="CustomerManager" column="CustomerManager" />
			<result property="CustomerNumber" column="CustomerNumber" />
			<result property="CustomerPhone1" column="CustomerPhone1" />
			<result property="CustomerMobile" column="CustomerMobile" />
			<result property="LastTransactionDate" column="LastTransactionDate" />
			<result property="CustomerJinChuAddress" column="CustomerJinChuAddress" />
			<result property="CustomerWebSiteAddress" column="CustomerWebSiteAddress" />
			<result property="LastTransactionMoney" column="LastTransactionMoney" />
			<result property="LastReceiveDate" column="LastReceiveDate" />
			<result property="LastReceiveMoney" column="LastReceiveMoney" />
			<result property="customerCheck" column="customerCheck" />
			<result property="CheckedStandard" column="CheckedStandard" />
		<result property="AreaCategory" column="AreaCategoryId" lazyLoad="false" select="AreaCategory.select_by_primary_key" />		<result property="CompanyLevel" column="CompanyLevelId" lazyLoad="false" select="CompanyLevel.select_by_primary_key" />		<result property="CustomerCategory" column="CustomerCategoryId" lazyLoad="false" select="CustomerCategory.select_by_primary_key" />		<result property="TradeCategory" column="TradeCategoryId" lazyLoad="false" select="TradeCategory.select_by_primary_key" />
        </resultMap>
    </resultMaps>
		
    <statements>
		<select id="has_rows_of" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[Customer]
				WHERE
				[CustomerId] = #CustomerId#
				) then 1 else 0 end
		</select>
		<select id="has_rows" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[Customer]
 								
				) then 1 else 0 end
		</select>
		<select id="get_first" resultMap="CustomerResult">
			<![CDATA[
			select top 1 *
			from dbo.Customer 
			order by InsertTime
			]]>
		</select>
		<select id="get_last" resultMap="CustomerResult">
			<![CDATA[
			select top 1 *
			from dbo.Customer 			
			order by InsertTime desc
			]]>
		</select>
		<select id="get_prev" resultMap="CustomerResult" parameterClass="Customer">
			<![CDATA[
			select top 1 *
			from dbo.Customer
			where InsertTime < #InsertTime#
			order by InsertTime desc
			]]>
		</select>
		<select id="get_next" resultMap="CustomerResult" parameterClass="Customer">
			<![CDATA[
			select top 1 *
			from dbo.Customer
			where InsertTime > #InsertTime#
			order by InsertTime
			]]>
		</select>
		<select id="has_rows_before" resultClass="bool" parameterClass="Customer">
			<![CDATA[
			select case when exists(
				select * 
				from dbo.Customer
				where InsertTime < #InsertTime#
				) 
				then 1 else 0 end
			]]>
		</select>
		
		<select id="has_rows_after" resultClass="bool" parameterClass="Customer">
			<![CDATA[
			select case when exists(
				select * 
				from dbo.Customer
				where InsertTime > #InsertTime#
				) then 1 else 0 end
			]]>
		</select>
		<!-- select by primary key -->
        <select id="select_by_primary_key" resultMap="CustomerResult" parameterClass="Customer">
			SELECT
				[Id],
				[EmployeeChangeId],
				[EmployeeCreatorId],
				[EmployeesBusinessId],
				[CustomerId],
				[CustomerCategoryId],
				[AreaCategoryId],
				[TradeCategoryId],
				[CompanyLevelId],
				[InsertTime],
				[UpdateTime],
				[CustomerFullName],
				[CustomerDescription],
				[CustomerShortName],
				[CustomerReceivable],
				[CustomerPayDate],
				[CustomerAddress],
				[CustomerPhone],
				[CustomerFax],
				[CustomerEMail],
				[CustomerManager],
				[CustomerNumber],
				[CustomerPhone1],
				[CustomerMobile],
				[LastTransactionDate],
				[CustomerJinChuAddress],
				[CustomerWebSiteAddress],
				[LastTransactionMoney],
				[LastReceiveDate],
				[LastReceiveMoney],
				[customerCheck],
				[CheckedStandard]
			FROM
				[dbo].[Customer]
			WHERE
				[CustomerId] = #CustomerId#
        </select>
		
		<!-- delete -->
        <delete id="delete" parameterClass="string">
			DELETE FROM [dbo].[Customer]
			WHERE
				[CustomerId] = #CustomerId#
        </delete>

		<!-- select all -->
        <select id="select_all" resultMap="CustomerResult" >
			SELECT *
			FROM 
				[dbo].[Customer]
			
				
			ORDER BY Id ASC
			
			
			
        </select>
        
		<select id="count_all" resultClass="int">
			select count(*)
			from 
				[dbo].[Customer]
		</select>
		
		<select id="select_all_with_paging" resultMap="CustomerResult">
            SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[Customer]
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
		</select>
		
		<!-- insert -->
        <insert id="insert" parameterClass="Customer">
			INSERT INTO [dbo].[Customer] 
			(
				[Id],
				[EmployeeChangeId],
				[EmployeeCreatorId],
				[EmployeesBusinessId],
				[CustomerId],
				[CustomerCategoryId],
				[AreaCategoryId],
				[TradeCategoryId],
				[CompanyLevelId],
				[InsertTime],
				[UpdateTime],
				[CustomerFullName],
				[CustomerDescription],
				[CustomerShortName],
				[CustomerReceivable],
				[CustomerPayDate],
				[CustomerAddress],
				[CustomerPhone],
				[CustomerFax],
				[CustomerEMail],
				[CustomerManager],
				[CustomerNumber],
				[CustomerPhone1],
				[CustomerMobile],
				[LastTransactionDate],
				[CustomerJinChuAddress],
				[CustomerWebSiteAddress],
				[LastTransactionMoney],
				[LastReceiveDate],
				[LastReceiveMoney],
				[customerCheck],
				[CheckedStandard]
			) 
			VALUES 
			(
				#Id#,
				#EmployeeChangeId#,
				#EmployeeCreatorId#,
				#EmployeesBusinessId#,
				#CustomerId#,
				#CustomerCategoryId#,
				#AreaCategoryId#,
				#TradeCategoryId#,
				#CompanyLevelId#,
				#InsertTime#,
				#UpdateTime#,
				#CustomerFullName#,
				#CustomerDescription#,
				#CustomerShortName#,
				#CustomerReceivable#,
				#CustomerPayDate#,
				#CustomerAddress#,
				#CustomerPhone#,
				#CustomerFax#,
				#CustomerEMail#,
				#CustomerManager#,
				#CustomerNumber#,
				#CustomerPhone1#,
				#CustomerMobile#,
				#LastTransactionDate#,
				#CustomerJinChuAddress#,
				#CustomerWebSiteAddress#,
				#LastTransactionMoney#,
				#LastReceiveDate#,
				#LastReceiveMoney#,
				#customerCheck#,
				#CheckedStandard#
			)
        </insert>
		
		<!-- update -->
        <update id="update" parameterClass="Customer">
			UPDATE [Customer] SET
				[Id] = #Id#,
				[EmployeeChangeId] = #EmployeeChangeId#,
				[EmployeeCreatorId] = #EmployeeCreatorId#,
				[EmployeesBusinessId] = #EmployeesBusinessId#,
				[CustomerCategoryId] = #CustomerCategoryId#,
				[AreaCategoryId] = #AreaCategoryId#,
				[TradeCategoryId] = #TradeCategoryId#,
				[CompanyLevelId] = #CompanyLevelId#,
				[InsertTime] = #InsertTime#,
				[UpdateTime] = #UpdateTime#,
				[CustomerFullName] = #CustomerFullName#,
				[CustomerDescription] = #CustomerDescription#,
				[CustomerShortName] = #CustomerShortName#,
				[CustomerReceivable] = #CustomerReceivable#,
				[CustomerPayDate] = #CustomerPayDate#,
				[CustomerAddress] = #CustomerAddress#,
				[CustomerPhone] = #CustomerPhone#,
				[CustomerFax] = #CustomerFax#,
				[CustomerEMail] = #CustomerEMail#,
				[CustomerManager] = #CustomerManager#,
				[CustomerNumber] = #CustomerNumber#,
				[CustomerPhone1] = #CustomerPhone1#,
				[CustomerMobile] = #CustomerMobile#,
				[LastTransactionDate] = #LastTransactionDate#,
				[CustomerJinChuAddress] = #CustomerJinChuAddress#,
				[CustomerWebSiteAddress] = #CustomerWebSiteAddress#,
				[LastTransactionMoney] = #LastTransactionMoney#,
				[LastReceiveDate] = #LastReceiveDate#,
				[LastReceiveMoney] = #LastReceiveMoney#,
				[customerCheck] = #customerCheck#,
				[CheckedStandard] = #CheckedStandard#
			WHERE
				[CustomerId] = #CustomerId#
        </update>
		<select id="existsPrimary" resultClass="bool" parameterClass="string">
			<![CDATA[
			select case when exists(
				select *
				from [dbo].[Customer]
				where  CustomerId = #value# 
				)
				then 1 else 0 end
			]]>
		</select>
		<select id="exists" resultClass="bool" parameterClass="string">
			<![CDATA[
			select case when exists(
				select * 
				from dbo.Customer
				where Id = #value#
				) then 1 else 0 end
			]]>
		</select>
		
		<select id="get_by_id" resultMap="CustomerResult" parameterClass="string">
			<![CDATA[
			SELECT top 1
				*
			FROM
				[dbo].[Customer]
			WHERE
				Id = #value#
			]]>	
        </select>
		
		<select id="existsexcept" resultClass="bool" parameterClass="string">
			<![CDATA[
			select case when exists(
				select *
				from dbo.Customer
				where Id = #newId# and Id <> #oldId#
				)
				then 1 else 0 end
			]]>
		</select>		
		
		
    </statements>
</sqlMap>

