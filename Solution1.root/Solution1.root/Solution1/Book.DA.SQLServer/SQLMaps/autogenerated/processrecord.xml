<?xml version="1.0" encoding="utf-8" ?> 
<sqlMap namespace="processrecord" xmlns="http://ibatis.apache.org/mapping" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="processrecord" type="Book.Model.processrecord, Book.Model" />
    </alias>
    <resultMaps>                                    
        <resultMap id="processrecordResult" class="processrecord">
			<result property="processrecordID" column="processrecordID" />
			<result property="processId" column="processId" />
			<result property="InsertTime" column="InsertTime" />
			<result property="UpdateTime" column="UpdateTime" />
			<result property="endtime" column="endtime" />
			<result property="dealstate" column="dealstate" />
			<result property="clewinfo" column="clewinfo" />
		<result property="process" column="processId" lazyLoad="false" select="process.select_by_primary_key" />
        </resultMap>
    </resultMaps>
		
    <statements>
		<select id="has_rows_of" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[processrecord]
				WHERE
				[processrecordID] = #processrecordID#
				) then 1 else 0 end
		</select>
		<select id="has_rows" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[processrecord]
 								
				) then 1 else 0 end
		</select>
		<select id="get_first" resultMap="processrecordResult">
			<![CDATA[
			select top 1 *
			from dbo.processrecord 
			order by InsertTime
			]]>
		</select>
		<select id="get_last" resultMap="processrecordResult">
			<![CDATA[
			select top 1 *
			from dbo.processrecord 			
			order by InsertTime desc
			]]>
		</select>
		<select id="get_prev" resultMap="processrecordResult" parameterClass="processrecord">
			<![CDATA[
			select top 1 *
			from dbo.processrecord
			where InsertTime < #InsertTime#
			order by InsertTime desc
			]]>
		</select>
		<select id="get_next" resultMap="processrecordResult" parameterClass="processrecord">
			<![CDATA[
			select top 1 *
			from dbo.processrecord
			where InsertTime > #InsertTime#
			order by InsertTime
			]]>
		</select>
		<select id="has_rows_before" resultClass="bool" parameterClass="processrecord">
			<![CDATA[
			select case when exists(
				select * 
				from dbo.processrecord
				where InsertTime < #InsertTime#
				) 
				then 1 else 0 end
			]]>
		</select>
		
		<select id="has_rows_after" resultClass="bool" parameterClass="processrecord">
			<![CDATA[
			select case when exists(
				select * 
				from dbo.processrecord
				where InsertTime > #InsertTime#
				) then 1 else 0 end
			]]>
		</select>
		<!-- select by primary key -->
        <select id="select_by_primary_key" resultMap="processrecordResult" parameterClass="processrecord">
			SELECT
				[processrecordID],
				[processId],
				[InsertTime],
				[UpdateTime],
				[endtime],
				[dealstate],
				[clewinfo]
			FROM
				[dbo].[processrecord]
			WHERE
				[processrecordID] = #processrecordID#
        </select>
		
		<!-- delete -->
        <delete id="delete" parameterClass="string">
			DELETE FROM [dbo].[processrecord]
			WHERE
				[processrecordID] = #processrecordID#
        </delete>

		<!-- select all -->
        <select id="select_all" resultMap="processrecordResult" >
			SELECT *
			FROM 
				[dbo].[processrecord]
			ORDER BY processrecordID ASC
        </select>
        
		<select id="count_all" resultClass="int">
			select count(*)
			from 
				[dbo].[processrecord]
		</select>
		
		<select id="select_all_with_paging" resultMap="processrecordResult">
            SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[processrecord]
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
		</select>
		
		<!-- insert -->
        <insert id="insert" parameterClass="processrecord">
			INSERT INTO [dbo].[processrecord] 
			(
				[processrecordID],
				[processId],
				[InsertTime],
				[UpdateTime],
				[endtime],
				[dealstate],
				[clewinfo]
			) 
			VALUES 
			(
				#processrecordID#,
				#processId#,
				#InsertTime#,
				#UpdateTime#,
				#endtime#,
				#dealstate#,
				#clewinfo#
			)
        </insert>
		
		<!-- update -->
        <update id="update" parameterClass="processrecord">
			UPDATE [processrecord] SET
				[processId] = #processId#,
				[InsertTime] = #InsertTime#,
				[UpdateTime] = #UpdateTime#,
				[endtime] = #endtime#,
				[dealstate] = #dealstate#,
				[clewinfo] = #clewinfo#
			WHERE
				[processrecordID] = #processrecordID#
        </update>
		
		
    </statements>
</sqlMap>

