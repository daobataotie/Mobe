<?xml version="1.0" encoding="utf-8" ?> 
<sqlMap namespace="MRSdetails" xmlns="http://ibatis.apache.org/mapping" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="MRSdetails" type="Book.Model.MRSdetails, Book.Model" />
    </alias>
    <resultMaps>                                    
        <resultMap id="MRSdetailsResult" class="MRSdetails">
			<result property="MRSdetailsId" column="MRSdetailsId" />
			<result property="CustomerId" column="CustomerId" />
			<result property="ProductId" column="ProductId" />
			<result property="MRSHeaderId" column="MRSHeaderId" />
			<result property="MRSdetailssum" column="MRSdetailssum" />
			<result property="MRSdetailsdes" column="MRSdetailsdes" />
			<result property="ProductUnit" column="ProductUnit" />
			<result property="MPSheaderId" column="MPSheaderId" />
			<result property="MRSdetailsQuantity" column="MRSdetailsQuantity" />
			<result property="MPSDate" column="MPSDate" />
			<result property="MRSHasSingleSum" column="MRSHasSingleSum" />
			<result property="MPSdetailsId" column="MPSdetailsId" />
			<result property="MadeProductId" column="MadeProductId" />
			<result property="DetailsFlag" column="DetailsFlag" />
			<result property="Inumber" column="Inumber" />
			<result property="JiaoHuoDate" column="JiaoHuoDate" />
			<result property="IsArrange" column="IsArrange" />
			<result property="ArrangeDesc" column="ArrangeDesc" />
		<result property="MadeProduct" column="MadeProductId" lazyLoad="false" select="Product.select_by_primary_key" />		<result property="MRSHeader" column="MRSHeaderId" lazyLoad="false" select="MRSHeader.select_by_primary_key" />		<result property="Product" column="ProductId" lazyLoad="false" select="Product.select_by_primary_key" />		<result property="Customer" column="CustomerId" lazyLoad="false" select="Customer.select_by_primary_key" />
        </resultMap>
    </resultMaps>
		
    <statements>
		<select id="has_rows_of" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[MRSdetails]
				WHERE
				[MRSdetailsId] = #MRSdetailsId#
				) then 1 else 0 end
		</select>
		<select id="has_rows" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[MRSdetails]
 								
				) then 1 else 0 end
		</select>
		<!-- select by primary key -->
        <select id="select_by_primary_key" resultMap="MRSdetailsResult" parameterClass="MRSdetails">
			SELECT
				[MRSdetailsId],
				[CustomerId],
				[ProductId],
				[MRSHeaderId],
				[MRSdetailssum],
				[MRSdetailsdes],
				[ProductUnit],
				[MPSheaderId],
				[MRSdetailsQuantity],
				[MPSDate],
				[MRSHasSingleSum],
				[MPSdetailsId],
				[MadeProductId],
				[DetailsFlag],
				[Inumber],
				[JiaoHuoDate],
				[IsArrange],
				[ArrangeDesc]
			FROM
				[dbo].[MRSdetails]
			WHERE
				[MRSdetailsId] = #MRSdetailsId#
        </select>
		
		<!-- delete -->
        <delete id="delete" parameterClass="string">
			DELETE FROM [dbo].[MRSdetails]
			WHERE
				[MRSdetailsId] = #MRSdetailsId#
        </delete>

		<!-- select all -->
        <select id="select_all" resultMap="MRSdetailsResult" >
			SELECT *
			FROM 
				[dbo].[MRSdetails]
			

			
        </select>
        
		<select id="count_all" resultClass="int">
			select count(*)
			from 
				[dbo].[MRSdetails]
		</select>
		
		<select id="select_all_with_paging" resultMap="MRSdetailsResult">
            SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[MRSdetails]
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
		</select>
		
		<!-- insert -->
        <insert id="insert" parameterClass="MRSdetails">
			INSERT INTO [dbo].[MRSdetails] 
			(
				[MRSdetailsId],
				[CustomerId],
				[ProductId],
				[MRSHeaderId],
				[MRSdetailssum],
				[MRSdetailsdes],
				[ProductUnit],
				[MPSheaderId],
				[MRSdetailsQuantity],
				[MPSDate],
				[MRSHasSingleSum],
				[MPSdetailsId],
				[MadeProductId],
				[DetailsFlag],
				[Inumber],
				[JiaoHuoDate],
				[IsArrange],
				[ArrangeDesc]
			) 
			VALUES 
			(
				#MRSdetailsId#,
				#CustomerId#,
				#ProductId#,
				#MRSHeaderId#,
				#MRSdetailssum#,
				#MRSdetailsdes#,
				#ProductUnit#,
				#MPSheaderId#,
				#MRSdetailsQuantity#,
				#MPSDate#,
				#MRSHasSingleSum#,
				#MPSdetailsId#,
				#MadeProductId#,
				#DetailsFlag#,
				#Inumber#,
				#JiaoHuoDate#,
				#IsArrange#,
				#ArrangeDesc#
			)
        </insert>
		
		<!-- update -->
        <update id="update" parameterClass="MRSdetails">
			UPDATE [MRSdetails] SET
				[CustomerId] = #CustomerId#,
				[ProductId] = #ProductId#,
				[MRSHeaderId] = #MRSHeaderId#,
				[MRSdetailssum] = #MRSdetailssum#,
				[MRSdetailsdes] = #MRSdetailsdes#,
				[ProductUnit] = #ProductUnit#,
				[MPSheaderId] = #MPSheaderId#,
				[MRSdetailsQuantity] = #MRSdetailsQuantity#,
				[MPSDate] = #MPSDate#,
				[MRSHasSingleSum] = #MRSHasSingleSum#,
				[MPSdetailsId] = #MPSdetailsId#,
				[MadeProductId] = #MadeProductId#,
				[DetailsFlag] = #DetailsFlag#,
				[Inumber] = #Inumber#,
				[JiaoHuoDate] = #JiaoHuoDate#,
				[IsArrange] = #IsArrange#,
				[ArrangeDesc] = #ArrangeDesc#
			WHERE
				[MRSdetailsId] = #MRSdetailsId#
        </update>
		<select id="existsPrimary" resultClass="bool" parameterClass="string">
			<![CDATA[
			select case when exists(
				select *
				from [dbo].[MRSdetails]
				where  MRSdetailsId = #value# 
				)
				then 1 else 0 end
			]]>
		</select>
		
    </statements>
</sqlMap>

