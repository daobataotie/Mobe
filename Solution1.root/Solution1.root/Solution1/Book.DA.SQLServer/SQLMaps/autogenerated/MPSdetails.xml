<?xml version="1.0" encoding="utf-8" ?> 
<sqlMap namespace="MPSdetails" xmlns="http://ibatis.apache.org/mapping" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="MPSdetails" type="Book.Model.MPSdetails, Book.Model" />
    </alias>
    <resultMaps>                                    
        <resultMap id="MPSdetailsResult" class="MPSdetails">
			<result property="MPSdetailsId" column="MPSdetailsId" />
			<result property="ProductId" column="ProductId" />
			<result property="MPSheaderId" column="MPSheaderId" />
			<result property="MPSdetailssum" column="MPSdetailssum" />
			<result property="MPSdetailsdes" column="MPSdetailsdes" />
			<result property="ProductUnit" column="ProductUnit" />
			<result property="InvoiceXOId" column="InvoiceXOId" />
			<result property="ProductStock" column="ProductStock" />
			<result property="CustomerId" column="CustomerId" />
			<result property="InvoiceXODetailId" column="InvoiceXODetailId" />
			<result property="PrimaryKeyId" column="PrimaryKeyId" />
			<result property="InvoiceXODetailSum" column="InvoiceXODetailSum" />
			<result property="Checkeds" column="Checkeds" />
			<result property="MPSEndState" column="MPSEndState" />
			<result property="MPSHasSingleSum" column="MPSHasSingleSum" />
			<result property="IsPronoteHeader" column="IsPronoteHeader" />
			<result property="Inumber" column="Inumber" />
		<result property="PrimaryKey" column="PrimaryKeyId" lazyLoad="false" select="CustomerProducts.select_by_primary_key" />		<result property="MPSheader" column="MPSheaderId" lazyLoad="false" select="MPSheader.select_by_primary_key" />		<result property="Product" column="ProductId" lazyLoad="false" select="Product.select_by_primary_key" />		<result property="Customer" column="CustomerId" lazyLoad="false" select="Customer.select_by_primary_key" />
        </resultMap>
    </resultMaps>
		
    <statements>
		<select id="has_rows_of" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[MPSdetails]
				WHERE
				[MPSdetailsId] = #MPSdetailsId#
				) then 1 else 0 end
		</select>
		<select id="has_rows" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[MPSdetails]
 					
				) then 1 else 0 end
		</select>
		<!-- select by primary key -->
        <select id="select_by_primary_key" resultMap="MPSdetailsResult" parameterClass="MPSdetails">
			SELECT
				[MPSdetailsId],
				[ProductId],
				[MPSheaderId],
				[MPSdetailssum],
				[MPSdetailsdes],
				[ProductUnit],
				[InvoiceXOId],
				[ProductStock],
				[CustomerId],
				[InvoiceXODetailId],
				[PrimaryKeyId],
				[InvoiceXODetailSum],
				[Checkeds],
				[MPSEndState],
				[MPSHasSingleSum],
				[IsPronoteHeader],
				[Inumber]
			FROM
				[dbo].[MPSdetails]
			WHERE
				[MPSdetailsId] = #MPSdetailsId#
        </select>
		
		<!-- delete -->
        <delete id="delete" parameterClass="string">
			DELETE FROM [dbo].[MPSdetails]
			WHERE
				[MPSdetailsId] = #MPSdetailsId#
        </delete>

		<!-- select all -->
        <select id="select_all" resultMap="MPSdetailsResult" >
			SELECT *
			FROM 
				[dbo].[MPSdetails]
			

			
        </select>
        
		<select id="count_all" resultClass="int">
			select count(*)
			from 
				[dbo].[MPSdetails]
		</select>
		
		<select id="select_all_with_paging" resultMap="MPSdetailsResult">
            SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[MPSdetails]
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
		</select>
		
		<!-- insert -->
        <insert id="insert" parameterClass="MPSdetails">
			INSERT INTO [dbo].[MPSdetails] 
			(
				[MPSdetailsId],
				[ProductId],
				[MPSheaderId],
				[MPSdetailssum],
				[MPSdetailsdes],
				[ProductUnit],
				[InvoiceXOId],
				[ProductStock],
				[CustomerId],
				[InvoiceXODetailId],
				[PrimaryKeyId],
				[InvoiceXODetailSum],
				[Checkeds],
				[MPSEndState],
				[MPSHasSingleSum],
				[IsPronoteHeader],
				[Inumber]
			) 
			VALUES 
			(
				#MPSdetailsId#,
				#ProductId#,
				#MPSheaderId#,
				#MPSdetailssum#,
				#MPSdetailsdes#,
				#ProductUnit#,
				#InvoiceXOId#,
				#ProductStock#,
				#CustomerId#,
				#InvoiceXODetailId#,
				#PrimaryKeyId#,
				#InvoiceXODetailSum#,
				#Checkeds#,
				#MPSEndState#,
				#MPSHasSingleSum#,
				#IsPronoteHeader#,
				#Inumber#
			)
        </insert>
		
		<!-- update -->
        <update id="update" parameterClass="MPSdetails">
			UPDATE [MPSdetails] SET
				[ProductId] = #ProductId#,
				[MPSheaderId] = #MPSheaderId#,
				[MPSdetailssum] = #MPSdetailssum#,
				[MPSdetailsdes] = #MPSdetailsdes#,
				[ProductUnit] = #ProductUnit#,
				[InvoiceXOId] = #InvoiceXOId#,
				[ProductStock] = #ProductStock#,
				[CustomerId] = #CustomerId#,
				[InvoiceXODetailId] = #InvoiceXODetailId#,
				[PrimaryKeyId] = #PrimaryKeyId#,
				[InvoiceXODetailSum] = #InvoiceXODetailSum#,
				[Checkeds] = #Checkeds#,
				[MPSEndState] = #MPSEndState#,
				[MPSHasSingleSum] = #MPSHasSingleSum#,
				[IsPronoteHeader] = #IsPronoteHeader#,
				[Inumber] = #Inumber#
			WHERE
				[MPSdetailsId] = #MPSdetailsId#
        </update>
		<select id="existsPrimary" resultClass="bool" parameterClass="string">
			<![CDATA[
			select case when exists(
				select *
				from [dbo].[MPSdetails]
				where  MPSdetailsId = #value# 
				)
				then 1 else 0 end
			]]>
		</select>
		
    </statements>
</sqlMap>

