<?xml version="1.0" encoding="utf-8" ?> 
<sqlMap namespace="AcbeginAccountPayableDetail" xmlns="http://ibatis.apache.org/mapping" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="AcbeginAccountPayableDetail" type="Book.Model.AcbeginAccountPayableDetail, Book.Model" />
    </alias>
    <resultMaps>                                    
        <resultMap id="AcbeginAccountPayableDetailResult" class="AcbeginAccountPayableDetail">
			<result property="AcbeginAccountPayableDetailId" column="AcbeginAccountPayableDetailId" />
			<result property="AcbeginAccountPayableId" column="AcbeginAccountPayableId" />
			<result property="SupplierId" column="SupplierId" />
			<result property="AdvancePayment" column="AdvancePayment" />
			<result property="DomesticAdvancePayment" column="DomesticAdvancePayment" />
			<result property="ShouldPayment" column="ShouldPayment" />
			<result property="DomesticAccountPayable" column="DomesticAccountPayable" />
			<result property="AlreadyPayment" column="AlreadyPayment" />
			<result property="DomesticAlreadyPayment" column="DomesticAlreadyPayment" />
			<result property="BeginningBalance" column="BeginningBalance" />
			<result property="DomesticBeginningBalance" column="DomesticBeginningBalance" />
		<result property="AcbeginAccountPayable" column="AcbeginAccountPayableId" lazyLoad="false" select="AcbeginAccountPayable.select_by_primary_key" />		<result property="Supplier" column="SupplierId" lazyLoad="false" select="Supplier.select_by_primary_key" />
        </resultMap>
    </resultMaps>
		
    <statements>
		<select id="has_rows_of" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[AcbeginAccountPayableDetail]
				WHERE
				[AcbeginAccountPayableDetailId] = #AcbeginAccountPayableDetailId#
				) then 1 else 0 end
		</select>
		<select id="has_rows" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[AcbeginAccountPayableDetail]
 				where invoicestatus=1 or invoicestatus is null				
				) then 1 else 0 end
		</select>
		<!-- select by primary key -->
        <select id="select_by_primary_key" resultMap="AcbeginAccountPayableDetailResult" parameterClass="AcbeginAccountPayableDetail">
			SELECT
				[AcbeginAccountPayableDetailId],
				[AcbeginAccountPayableId],
				[SupplierId],
				[AdvancePayment],
				[DomesticAdvancePayment],
				[ShouldPayment],
				[DomesticAccountPayable],
				[AlreadyPayment],
				[DomesticAlreadyPayment],
				[BeginningBalance],
				[DomesticBeginningBalance]
			FROM
				[dbo].[AcbeginAccountPayableDetail]
			WHERE
				[AcbeginAccountPayableDetailId] = #AcbeginAccountPayableDetailId#
        </select>
		
		<!-- delete -->
        <delete id="delete" parameterClass="string">
			DELETE FROM [dbo].[AcbeginAccountPayableDetail]
			WHERE
				[AcbeginAccountPayableDetailId] = #AcbeginAccountPayableDetailId#
        </delete>

		<!-- select all -->
        <select id="select_all" resultMap="AcbeginAccountPayableDetailResult" >
			SELECT *
			FROM 
				[dbo].[AcbeginAccountPayableDetail]
			

			
        </select>
        
		<select id="count_all" resultClass="int">
			select count(*)
			from 
				[dbo].[AcbeginAccountPayableDetail]
		</select>
		
		<select id="select_all_with_paging" resultMap="AcbeginAccountPayableDetailResult">
            SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[AcbeginAccountPayableDetail]
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
		</select>
		
		<!-- insert -->
        <insert id="insert" parameterClass="AcbeginAccountPayableDetail">
			INSERT INTO [dbo].[AcbeginAccountPayableDetail] 
			(
				[AcbeginAccountPayableDetailId],
				[AcbeginAccountPayableId],
				[SupplierId],
				[AdvancePayment],
				[DomesticAdvancePayment],
				[ShouldPayment],
				[DomesticAccountPayable],
				[AlreadyPayment],
				[DomesticAlreadyPayment],
				[BeginningBalance],
				[DomesticBeginningBalance]
			) 
			VALUES 
			(
				#AcbeginAccountPayableDetailId#,
				#AcbeginAccountPayableId#,
				#SupplierId#,
				#AdvancePayment#,
				#DomesticAdvancePayment#,
				#ShouldPayment#,
				#DomesticAccountPayable#,
				#AlreadyPayment#,
				#DomesticAlreadyPayment#,
				#BeginningBalance#,
				#DomesticBeginningBalance#
			)
        </insert>
		
		<!-- update -->
        <update id="update" parameterClass="AcbeginAccountPayableDetail">
			UPDATE [AcbeginAccountPayableDetail] SET
				[AcbeginAccountPayableId] = #AcbeginAccountPayableId#,
				[SupplierId] = #SupplierId#,
				[AdvancePayment] = #AdvancePayment#,
				[DomesticAdvancePayment] = #DomesticAdvancePayment#,
				[ShouldPayment] = #ShouldPayment#,
				[DomesticAccountPayable] = #DomesticAccountPayable#,
				[AlreadyPayment] = #AlreadyPayment#,
				[DomesticAlreadyPayment] = #DomesticAlreadyPayment#,
				[BeginningBalance] = #BeginningBalance#,
				[DomesticBeginningBalance] = #DomesticBeginningBalance#
			WHERE
				[AcbeginAccountPayableDetailId] = #AcbeginAccountPayableDetailId#
        </update>
		<select id="existsPrimary" resultClass="bool" parameterClass="string">
			<![CDATA[
			select case when exists(
				select *
				from [dbo].[AcbeginAccountPayableDetail]
				where  AcbeginAccountPayableDetailId = #value# 
				)
				then 1 else 0 end
			]]>
		</select>
		
    </statements>
</sqlMap>

