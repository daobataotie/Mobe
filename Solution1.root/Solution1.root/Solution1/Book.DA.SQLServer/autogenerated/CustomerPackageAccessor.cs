//------------------------------------------------------------------------------
//
// 说明： 该文件中的内容是由代码生成器自动生成的，请勿手工修改！
//
// file name：CustomerPackageAccessor.autogenerated.cs
// author: peidun
// create date：2010-2-4 11:15:12
//
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Text;

namespace Book.DA.SQLServer
{
    public partial class CustomerPackageAccessor
    {
		public Model.CustomerPackage Get(string id)
		{
			return this.Get<Model.CustomerPackage>(id);
		}
		
		public void Insert(Model.CustomerPackage e)
		{
			this.Insert<Model.CustomerPackage>(e);
		}
		
		public void Update(Model.CustomerPackage e)
		{
			this.Update<Model.CustomerPackage>(e);
		}
		
		public IList<Model.CustomerPackage> Select()
		{
			return this.Select<Model.CustomerPackage>();
		}
		
		public IList<Model.CustomerPackage> Select(Helper.OrderDescription orderDescription, Helper.PagingDescription pagingDescription)
		{
			return this.Select<Model.CustomerPackage>(orderDescription,pagingDescription);
		}
		public void Delete(string id)
		{
			this.Delete<Model.CustomerPackage>(id);
		}
		public bool HasRows(string id)
		{
			return this.HasRows<Model.CustomerPackage>(id);
		}
		public bool HasRows()
		{
			return this.HasRows<Model.CustomerPackage>();
		}
		public int Count()
		{
			return this.Count<Model.CustomerPackage>();
		}
		public bool HasRowsBefore(Model.CustomerPackage e)
		{
			return sqlmapper.QueryForObject<bool>("CustomerPackage.has_rows_before", e);
		}
		public bool HasRowsAfter(Model.CustomerPackage e)
		{
			return sqlmapper.QueryForObject<bool>("CustomerPackage.has_rows_after", e);
		}
		public Model.CustomerPackage GetFirst()
		{
			return sqlmapper.QueryForObject<Model.CustomerPackage>("CustomerPackage.get_first", null);
		}
		public Model.CustomerPackage GetLast()
		{
			return sqlmapper.QueryForObject<Model.CustomerPackage>("CustomerPackage.get_last", null);
		}
		public Model.CustomerPackage GetNext(Model.CustomerPackage e)
		{
			return sqlmapper.QueryForObject<Model.CustomerPackage>("CustomerPackage.get_next", e);
		}
		public Model.CustomerPackage GetPrev(Model.CustomerPackage e)
		{
			return sqlmapper.QueryForObject<Model.CustomerPackage>("CustomerPackage.get_prev", e);
		}
		

		public bool Exists(string id)
		{
			return sqlmapper.QueryForObject<bool>("CustomerPackage.exists", id);
		}
		
		public Model.CustomerPackage GetById(string id)
		{
			return sqlmapper.QueryForObject<Model.CustomerPackage>("CustomerPackage.get_by_id", id);
		}
		
		public bool ExistsExcept(Model.CustomerPackage e)
		{
			Hashtable paras = new Hashtable();
			paras.Add("newId", e.Id);
            paras.Add("oldId", Get(e.CustomerPackageId).Id);
			return sqlmapper.QueryForObject<bool>("CustomerPackage.existsexcept", paras);
		}
    }
}
