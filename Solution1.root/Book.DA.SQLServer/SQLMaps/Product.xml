<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Product" xmlns="http://ibatis.apache.org/mapping"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <resultMaps>
    <resultMap id="ProductResult1" class="Product">
      <result property="ProductId" column="ProductId" />
      <result property="Id" column="Id" />
      <result property="ProductName" column="ProductName" />
      <result property="MainUnitId" column="MainUnitId" />
      <result property="BasedUnitGroupId" column="BasedUnitGroupId" />
      <result property="DepotPositionId" column="DepotPositionId" />
      <result property="DepotUnitId" column="DepotUnitId" />
      <result property="StocksQuantity" column="StocksQuantity" />
      <result property="CustomerProductName" column="CustomerProductName" />
      <result property="ProductDescription" column="ProductDescription" />
      <result property="ProductCategoryId" column="ProductCategoryId" />
      <result property="ProductCategoryName" column="ProductCategoryName" />
      <result property="ProduceUnitId" column="ProduceUnitId" />
      <result property="CustomerId" column="CustomerId" />
      <result property="ProductVersion" column="ProductVersion" />
      <result property="ProductCategoryId2" column="ProductCategoryId2"/>
      <result property="ProductCategoryId3" column="ProductCategoryId3"/>
      <result property="DepotUnit" column="DepotUnitId" lazyLoad="false" select="ProductUnit.select_by_primary_key" />
      <result property="MainUnit" column="MainUnitId" lazyLoad="false" select="ProductUnit.select_by_primary_key" />
      <result property="BasedUnitGroup" column="BasedUnitGroupId" lazyLoad="false" select="UnitGroup.select_by_primary_key" />
      <result property="ProductCategory" column="ProductCategoryId" lazyLoad="false" select="ProductCategory.select_by_primary_key" />
      <result property="ProduceUnit" column="ProduceUnitId" lazyLoad="false" select="ProductUnit.select_by_primary_key" />
      <result property="Customer" column="CustomerId" lazyLoad="false" select="Customer.select_SimpleCustomer" />
      <result property="SupplierId" column="SupplierId" />
      <result property="Supplier" column="SupplierId" lazyLoad="false" select="Supplier.select_by_primary_key" />
      <result property="ProductCategory2" column="ProductCategoryId2" lazyLoad="false" select="ProductCategory.select_by_primary_key"/>
      <result property="ProductCategory3" column="ProductCategoryId3" lazyLoad="false" select="ProductCategory.select_by_primary_key"/>
    </resultMap>
    <resultMap id="ProductResult2" class="Product">
      <result property="ProductId" column="ProductId" />
      <result property="Id" column="Id" />
      <result property="ProductName" column="ProductName" />
      <result property="ProductCategoryId" column="ProductCategoryId" />
      <result property="CustomerProductName" column="CustomerProductName" />
      <result property="IsCustomerProduct" column="IsCustomerProduct" />
      <result property="ProductDescription" column="ProductDescription" />
      <result property="StocksQuantity" column="StocksQuantity" />
      <result property="ProductCategoryId2" column="ProductCategoryId2"/>
      <result property="ProductCategoryId3" column="ProductCategoryId3"/>
    </resultMap>
    <resultMap id="ProductResult3" class="Product">
      <result property="ProductId" column="ProductId" />
      <result property="Id" column="Id" />
      <result property="ProductName" column="ProductName" />
    </resultMap>
    <resultMap id="ProductResult4" class="Product">
      <result property="ProductId" column="ProductId" />
      <result property="Id" column="Id" />
      <result property="DepotUnitId" column="DepotUnitId" />
      <result property="ProductName" column="ProductName" />
      <result property="StocksQuantity" column="StocksQuantity" />
      <result property="CustomerProductName" column="CustomerProductName" />
      <result property="ProductDescription" column="ProductDescription" />
      <result property="ProductCategoryId" column="ProductCategoryId" />
      <result property="ProductCategoryName" column="ProductCategoryName" />
      <result property="ProductCategory" column="ProductCategoryId" lazyLoad="false" select="ProductCategory.select_by_primary_key" />
      <result property="DepotUnit" column="DepotUnitId" lazyLoad="false" select="ProductUnit.select_by_primary_key" />
    </resultMap>

    <resultMap id="ProductResultBomPar" class="Product">
      <result property="ProductId" column="ProductId" />
      <result property="Id" column="Id" />
      <result property="ProductName" column="ProductName" />
      <result property="ProductCategoryId" column="ProductCategoryId" />
      <result property="CustomerProductName" column="CustomerProductName" />
      <result property="IsCustomerProduct" column="IsCustomerProduct" />
      <result property="ProductDescription" column="ProductDescription" />
      <result property="StocksQuantity" column="StocksQuantity" />
      <result property="OutSourcing" column="OutSourcing" />
      <result property="TrustOut" column="TrustOut" />
      <result property="HomeMade" column="HomeMade" />
    </resultMap>
    <resultMap id="ProductResultNotZCMai" class="Product">
      <result property="Id" column="Id" />
      <result property="ProductId" column="ProductId" />
      <result property="BasedUnitGroupId" column="BasedUnitGroupId" />
      <result property="MainUnitId" column="MainUnitId" />
      <result property="BuyUnitId" column="BuyUnitId" />
      <result property="VolumeUnitId" column="VolumeUnitId" />
      <result property="CustomInspectionRuleId" column="CustomInspectionRuleId" />
      <result property="EmployeeChangeId" column="EmployeeChangeId" />
      <result property="InsteadOfProductId" column="InsteadOfProductId" />
      <result property="EmployeeCreatorId" column="EmployeeCreatorId" />
      <result property="ProduceUnitId" column="ProduceUnitId" />
      <result property="VolumeUnitGroupId" column="VolumeUnitGroupId" />
      <result property="BuyEmployeeId" column="BuyEmployeeId" />
      <result property="WeightUnitGroupId" column="WeightUnitGroupId" />
      <result property="QualityTestUnitId" column="QualityTestUnitId" />
      <result property="PackageTypeId" column="PackageTypeId" />
      <result property="SellUnitId" column="SellUnitId" />
      <result property="DepotUnitId" column="DepotUnitId" />
      <result property="WeightUnitId" column="WeightUnitId" />
      <result property="QualityTestPlanId" column="QualityTestPlanId" />
      <result property="DepotPositionId" column="DepotPositionId" />
      <result property="DepotId" column="DepotId" />
      <result property="SupplierId" column="SupplierId" />
      <result property="ProductCategoryId" column="ProductCategoryId" />
      <result property="InsertTime" column="InsertTime" />
      <result property="UpdateTime" column="UpdateTime" />
      <result property="ProductName" column="ProductName" />
      <result property="ProductBarCode" column="ProductBarCode" />
      <result property="ProductSpecification" column="ProductSpecification" />
      <result property="ProductDescription" column="ProductDescription" />
      <result property="ProductPlace" column="ProductPlace" />
      <result property="ProductBatch" column="ProductBatch" />
      <result property="ProductDeadDate" column="ProductDeadDate" />
      <result property="ProductNearCGDate" column="ProductNearCGDate" />
      <result property="ProductNearXSDate" column="ProductNearXSDate" />
      <result property="ProduceCounty" column="ProduceCounty" />
      <result property="ValuationWay" column="ValuationWay" />
      <result property="PlanSellPrice" column="PlanSellPrice" />
      <result property="ReferenceCost" column="ReferenceCost" />
      <result property="LowestSellPrice" column="LowestSellPrice" />
      <result property="HighestPurchasingPrice" column="HighestPurchasingPrice" />
      <result property="NewestCost" column="NewestCost" />
      <result property="ReferenceSellPrice" column="ReferenceSellPrice" />
      <result property="HighestStock" column="HighestStock" />
      <result property="LowestStock" column="LowestStock" />
      <result property="SafeStock" column="SafeStock" />
      <result property="DamageRate" column="DamageRate" />
      <result property="AbcCategory" column="AbcCategory" />
      <result property="StockCheckTimeParts" column="StockCheckTimeParts" />
      <result property="StockTakeCycle" column="StockTakeCycle" />
      <result property="LastStockTakeTime" column="LastStockTakeTime" />
      <result property="Digital" column="Digital" />
      <result property="Length" column="Length" />
      <result property="Width" column="Width" />
      <result property="Height" column="Height" />
      <result property="Volume" column="Volume" />
      <result property="NetWeight" column="NetWeight" />
      <result property="GrossWeight" column="GrossWeight" />
      <result property="CheckCategory" column="CheckCategory" />
      <result property="CheckRule" column="CheckRule" />
      <result property="CheckRate" column="CheckRate" />
      <result property="CheckCount" column="CheckCount" />
      <result property="QualityRequire" column="QualityRequire" />
      <result property="PowerGroup" column="PowerGroup" />
      <result property="OutSourcing" column="OutSourcing" />
      <result property="Consume" column="Consume" />
      <result property="TrustOut" column="TrustOut" />
      <result property="HomeMade" column="HomeMade" />
      <result property="OnMadingQuantity" column="OnMadingQuantity" />
      <result property="BeenAssigned" column="BeenAssigned" />
      <result property="StocksQuantity" column="StocksQuantity" />
      <result property="OrderOnWayQuantity" column="OrderOnWayQuantity" />
      <result property="LendQuantity" column="LendQuantity" />
      <result property="BorrowQuantity" column="BorrowQuantity" />
      <result property="IsRequiredCheck" column="IsRequiredCheck" />
      <result property="IsRequiredCheckCycle" column="IsRequiredCheckCycle" />
      <result property="CheckCycle" column="CheckCycle" />
      <result property="ProceebeforeProductId" column="ProceebeforeProductId" />
      <result property="IsProcee" column="IsProcee" />
      <result property="IsCustomerProduct" column="IsCustomerProduct" />
      <result property="CustomerBeforeProductId" column="CustomerBeforeProductId" />
      <result property="CustomerProductName" column="CustomerProductName" />
      <result property="CustomerBeforeProductName" column="CustomerBeforeProductName" />
      <result property="CustomerId" column="CustomerId" />
      <result property="ProductBarCodeIsAuto" column="ProductBarCodeIsAuto" />
      <result property="TechonlogyHeaderid" column="TechonlogyHeaderid" />
      <result property="ProceduresId" column="ProceduresId" />
      <result property="MpsStockQuantity" column="MpsStockQuantity" />
      <result property="MRSStockQuantity" column="MRSStockQuantity" />
      <result property="ProduceMaterialDistributioned" column="ProduceMaterialDistributioned" />
      <result property="OtherMaterialDistributioned" column="OtherMaterialDistributioned" />
      <result property="PriceAndRange" column="PriceAndRange"/>
      <result property="XOPriceAndRange" column="XOPriceAndRange"/>
      <result property="ProductType" column="ProductType"/>
      <result property="ProductVersion" column="ProductVersion"/>
      <result property="ProductState" column="ProductState"/>
      <result property="ProductCategoryId2" column="ProductCategoryId2"/>
      <result property="ProductCategoryId3" column="ProductCategoryId3"/>
      <result property="Customer" column="CustomerId" lazyLoad="false" select="Customer.select_SimpleCustomer" />
      <result property="CustomInspectionRule" column="CustomInspectionRuleId" lazyLoad="false" select="CustomInspectionRule.select_by_primary_key" />
      <result property="Depot" column="DepotId" lazyLoad="false" select="Depot.select_by_primary_key" />
      <result property="DepotPosition" column="DepotPositionId" lazyLoad="false" select="DepotPosition.select_by_primary_key" />
      <result property="BuyEmployee" column="BuyEmployeeId" lazyLoad="false" select="Employee.select_SimpleEmployee" />

      <result property="ProductCategory" column="ProductCategoryId" lazyLoad="false" select="ProductCategory.select_by_primary_key" />
      <result property="BuyUnit" column="BuyUnitId" lazyLoad="false" select="ProductUnit.select_by_primary_key" />
      <result property="SellUnit" column="SellUnitId" lazyLoad="false" select="ProductUnit.select_by_primary_key" />
      <result property="DepotUnit" column="DepotUnitId" lazyLoad="false" select="ProductUnit.select_by_primary_key" />
      <result property="ProduceUnit" column="ProduceUnitId" lazyLoad="false" select="ProductUnit.select_by_primary_key" />
      <result property="MainUnit" column="MainUnitId" lazyLoad="false" select="ProductUnit.select_by_primary_key" />
      <result property="WeightUnit" column="WeightUnitId" lazyLoad="false" select="ProductUnit.select_by_primary_key" />
      <result property="VolumeUnit" column="VolumeUnitId" lazyLoad="false" select="ProductUnit.select_by_primary_key" />
      <result property="QualityTestUnit" column="QualityTestUnitId" lazyLoad="false" select="ProductUnit.select_by_primary_key" />
      <result property="QualityTestPlan" column="QualityTestPlanId" lazyLoad="false" select="QualityTestPlan.select_by_primary_key" />
      <result property="Supplier" column="SupplierId" lazyLoad="false" select="Supplier.select_by_primary_key" />
      <result property="BasedUnitGroup" column="BasedUnitGroupId" lazyLoad="false" select="UnitGroup.select_by_primary_key" />
      <result property="VolumeUnitGroup" column="VolumeUnitGroupId" lazyLoad="false" select="UnitGroup.select_by_primary_key" />
      <result property="WeightUnitGroup" column="WeightUnitGroupId" lazyLoad="false" select="UnitGroup.select_by_primary_key" />
      <result property="EmployeeCreator" column="EmployeeCreatorId" lazyLoad="false" select="Employee.select_SimpleEmployee" />
      <result property="EmployeeChange" column="EmployeeChangeId" lazyLoad="false" select="Employee.select_SimpleEmployee" />
      <result property="ProductCategory2" column="ProductCategoryId2" lazyLoad="false" select="ProductCategory.select_by_primary_key"/>
      <result property="ProductCategory3" column="ProductCategoryId3" lazyLoad="false" select="ProductCategory.select_by_primary_key"/>
    </resultMap>
    <resultMap id="ProductResult5" class="Product">
      <result property="Id" column="Id" />
      <result property="ProductId" column="ProductId" />
      <result property="ProductName" column="ProductName" />
      <result property="StocksQuantity" column="StocksQuantity" />
      <result property="NetWeight" column="NetWeight" />
      <result property="MaterialIds" column="MaterialIds"/>
      <result property="MaterialNum" column="MaterialNum"/>
    </resultMap>
    <resultMap id="ProductResultSimple" class="Product">
      <result property="Id" column="Id" />
      <result property="ProductId" column="ProductId" />
      <result property="BasedUnitGroupId" column="BasedUnitGroupId"/>
      <result property="SupplierId" column="SupplierId" />
      <result property="ProductCategoryId" column="ProductCategoryId"/>
      <result property="ProductName" column="ProductName" />
      <result property="ReferenceCost" column="ReferenceCost" />
      <result property="ReferenceSellPrice" column="ReferenceSellPrice" />
      <result property="ProductDescription" column="ProductDescription" />
      <result property="ProductNearCGDate" column="ProductNearCGDate"/>
      <result property="ProductNearXSDate" column="ProductNearXSDate"/>
      <result property="SafeStock" column="SafeStock"/>
      <result property="LastStockTakeTime" column="LastStockTakeTime"/>
      <result property="OnMadingQuantity" column="OnMadingQuantity"/>
      <result property="BeenAssigned" column="BeenAssigned"/>
      <result property="OutSourcing" column="OutSourcing" />
      <result property="Consume" column="Consume" />
      <result property="TrustOut" column="TrustOut" />
      <result property="HomeMade" column="HomeMade" />
      <result property="NewestCost" column="NewestCost"/>
      <result property="StocksQuantity" column="StocksQuantity" />
      <result property="OrderOnWayQuantity" column="OrderOnWayQuantity"/>
      <result property="IsProcee" column="IsProcee"/>
      <result property="IsCustomerProduct" column="IsCustomerProduct" />
      <result property="CustomerProductName" column="CustomerProductName" />
      <result property="CustomerBeforeProductName" column="CustomerBeforeProductName"/>
      <result property="MRSStockQuantity" column="MRSStockQuantity"/>
      <result property="ProduceMaterialDistributioned" column="ProduceMaterialDistributioned"/>
      <result property="OtherMaterialDistributioned" column="OtherMaterialDistributioned"/>
      <result property="ProductVersion" column="ProductVersion"/>
      <result property="IsQiangHua" column="IsQiangHua"/>
      <result property="IsFangWu" column="IsFangWu"/>
      <result property="IsNoQiangFang" column="IsNoQiangFang"/>
      <result property="ProductCategoryId2" column="ProductCategoryId2"/>
      <result property="ProductCategoryId3" column="ProductCategoryId3"/>
      <result property="ProductCategory" column="ProductCategoryId" lazyLoad="false" select="ProductCategory.select_by_primary_key" />
      <result property="ProductCategory2" column="ProductCategoryId2" lazyLoad="false" select="ProductCategory.select_by_primary_key"/>
      <result property="ProductCategory3" column="ProductCategoryId3" lazyLoad="false" select="ProductCategory.select_by_primary_key"/>
    </resultMap>
    <resultMap id="ProductResultZCMai" class="Product">
      <result property="Id" column="Id" />
      <result property="ProductId" column="ProductId" />
      <result property="SupplierId" column="SupplierId" />
      <result property="ProductName" column="ProductName" />
      <result property="ProductDescription" column="ProductDescription" />
      <result property="SafeStock" column="SafeStock"/>
      <result property="StocksQuantity" column="StocksQuantity" />
      <result property="IsCustomerProduct" column="IsCustomerProduct" />
      <result property="CustomerProductName" column="CustomerProductName" />
      <result property="CustomerBeforeProductName" column="CustomerBeforeProductName"/>
      <result property="MRSStockQuantity" column="MRSStockQuantity"/>
      <result property="ProduceMaterialDistributioned" column="ProduceMaterialDistributioned"/>
      <result property="OtherMaterialDistributioned" column="OtherMaterialDistributioned"/>
      <result property="ProductVersion" column="ProductVersion"/>
      <result property="AttrZhengMai" column="AttrZhengMai"/>
      <result property="AttrCeMai" column="AttrCeMai"/>
    </resultMap>
  </resultMaps>
  <statements>
    <select id="select_SimpleProduct" resultMap="ProductResultSimple" parameterClass="Product">
      <![CDATA[
      select 
      Id,
      ProductId,
      BasedUnitGroupId,
      SupplierId,
      ProductCategoryId,
      ProductName,
      ReferenceCost,
      ReferenceSellPrice,      
      ProductDescription,
      ProductNearCGDate,
      ProductNearXSDate,
      SafeStock,
      LastStockTakeTime,
      OnMadingQuantity,
      BeenAssigned,
      OutSourcing,
      Consume,
      TrustOut,
      HomeMade,
      NewestCost,
      StocksQuantity,
      OrderOnWayQuantity,
      IsProcee,
      IsCustomerProduct,
      CustomerProductName,
      CustomerBeforeProductName,
      MRSStockQuantity,
      ProduceMaterialDistributioned,
      OtherMaterialDistributioned,
      ProductVersion,
      IsQiangHua,
      IsFangWu,
      IsNoQiangFang,
      ProductCategoryId2,
      ProductCategoryId3
      from product
      WHERE
				[ProductId] = #ProductId#
      ]]>
    </select>

    <select id="select_SimpleProduct_ZCMai" resultMap="ProductResultZCMai" parameterClass="Product">
      <![CDATA[
      select 
      Id,
      ProductId,
      SupplierId,
      ProductName,
      ProductDescription,
      SafeStock,
      StocksQuantity,
      IsCustomerProduct,
      CustomerProductName,
      CustomerBeforeProductName,
      MRSStockQuantity,
      ProduceMaterialDistributioned,
      OtherMaterialDistributioned,
      ProductVersion,
      AttrZhengMai,
      AttrCeMai
      from product
      WHERE
				[ProductId] = #ProductId#
      ]]>
    </select>

    <update id="Update_SimpleProduct" parameterClass="Product">
      <![CDATA[
      UPDATE [Product] SET
      UpdateTime=#UpdateTime#,
      ProductNearCGDate=#ProductNearCGDate#,
      ProductNearXSDate=#ProductNearXSDate#,
      LastStockTakeTime=#LastStockTakeTime#,
      OnMadingQuantity=#OnMadingQuantity#,
      StocksQuantity=#StocksQuantity#,
      OrderOnWayQuantity=#OrderOnWayQuantity#,
      MRSStockQuantity=#MRSStockQuantity#,
      ProduceMaterialDistributioned=#ProduceMaterialDistributioned#,
      OtherMaterialDistributioned=#OtherMaterialDistributioned#
      WHERE
				[ProductId] = #ProductId#
      ]]>
    </update>

    <select id="select_product" resultMap="ProductResult">
      select * from product where productid in (select distinct productid from SpecialProfitMargin)
    </select>

    <select id="select_datatable">
      select * from product
    </select>
    <select id="Select_ProductResult5" resultMap="ProductResult5" parameterClass="Product">
      select
      Id,
      ProductId,
      ProductName,
      StocksQuantity,
      NetWeight,
      MaterialIds,
      MaterialNum
      from product
      WHERE [ProductId] = #ProductId#
    </select>
    <update id="update_cost1" parameterClass="Map">
      <![CDATA[
			update product set  ProductStandardCost = 
case ((select sum(stockquantity1) from stock where productid=#productid#) + #quantity#)
when 0 then 
(select product.ProductStandardCost from product where productid = #productid#)
else
(
					select ((select product.ProductStandardCost from product where productid = #productid#) * 
					(select sum(stockquantity1) from stock where productid=#productid#)
					+ 
					#quantity# * #unitprice#)
					/ 
					((select sum(stockquantity1) from stock where productid=#productid#) + #quantity#)
					)
			end
where ProductId = #productid#
			]]>
    </update>
    <select id="select_byCategory" resultMap="ProductResultNotZCMai" parameterClass="Map">
      SELECT
      [Id],
      [ProductId],
      [BasedUnitGroupId],
      [MainUnitId],
      [BuyUnitId],
      [VolumeUnitId],
      [CustomInspectionRuleId],
      [EmployeeChangeId],
      [InsteadOfProductId],
      [EmployeeCreatorId],
      [ProduceUnitId],
      [VolumeUnitGroupId],
      [BuyEmployeeId],
      [WeightUnitGroupId],
      [QualityTestUnitId],
      [PackageTypeId],
      [SellUnitId],
      [DepotUnitId],
      [WeightUnitId],
      [QualityTestPlanId],
      [DepotPositionId],
      [DepotId],
      [SupplierId],
      [ProductCategoryId],
      [InsertTime],
      [UpdateTime],
      [ProductName],
      [ProductBarCode],
      [ProductSpecification],
      [ProductDescription],
      [ProductPlace],
      [ProductBatch],
      [ProductDeadDate],
      [ProductNearCGDate],
      [ProductNearXSDate],
      [ProduceCounty],
      [ValuationWay],
      [PlanSellPrice],
      [ReferenceCost],
      [LowestSellPrice],
      [HighestPurchasingPrice],
      [NewestCost],
      [ReferenceSellPrice],
      [HighestStock],
      [LowestStock],
      [SafeStock],
      [DamageRate],
      [AbcCategory],
      [StockCheckTimeParts],
      [StockTakeCycle],
      [LastStockTakeTime],
      [Digital],
      [Length],
      [Width],
      [Height],
      [Volume],
      [NetWeight],
      [GrossWeight],
      [CheckCategory],
      [CheckRule],
      [CheckRate],
      [CheckCount],
      [QualityRequire],
      [PowerGroup],
      [OutSourcing],
      [Consume],
      [TrustOut],
      [HomeMade],
      [OnMadingQuantity],
      [BeenAssigned],
      [StocksQuantity],
      [OrderOnWayQuantity],
      [LendQuantity],
      [BorrowQuantity],
      [IsRequiredCheck],
      [IsRequiredCheckCycle],
      [CheckCycle],
      [ProceebeforeProductId],
      [IsProcee],
      [IsCustomerProduct],
      [CustomerBeforeProductId],
      [CustomerProductName],
      [CustomerBeforeProductName],
      [CustomerId],
      [ProductBarCodeIsAuto],
      [TechonlogyHeaderid],
      [ProceduresId],
      [MpsStockQuantity],
      [MRSStockQuantity],
      [ProduceMaterialDistributioned],
      [OtherMaterialDistributioned],
      [PriceAndRange],
      [ProductType],
      [XOPriceAndRange],
      [ProductVersion],
      [ProductState],
      [ProductCategoryId2],
      [ProductCategoryId3]
      from product
      WHERE 1=1 and $sql$
    </select>
    <select id="select_byDepot" resultMap="ProductResult" parameterClass="string">
      select *   from product
      where product.productID in(select productID from stock where DepotPositionId
      in(select DepotPositionId from DepotPosition where depotID=#value#) group by productID )
    </select>

    <select id="ExistsNameInsert" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.Product
				where productName = #value#
				) then 1 else 0 end
			]]>
    </select>

    <select id="ExistsNameUpdate" resultClass="bool" parameterClass="Map">
      <![CDATA[
				select case when exists(
				select *
				from dbo.Product
				where productName = #newName# and productName <> #oldName# $sql$
				)
				then 1 else 0 end
			]]>
    </select>
    <!--查询指定客户的货品和公司货品-->
    <select id="SelectByCustomer" resultMap="ProductResult1" parameterClass="string">
      <![CDATA[
      select ProductId,ProductName,product.ProductCategoryId,ProductVersion,ProduceUnitId,SupplierId,StocksQuantity,ProductCategoryName,DepotPositionId,DepotUnitId,ProductDescription, product.Id,MainUnitId,BasedUnitGroupId,CustomerProductName,CustomerId,ProductCategoryId2,ProductCategoryId3 from product left join ProductCategory
      on ProductCategory.ProductCategoryId=Product.ProductCategoryId order by Id    
      ]]>
      <!--CustomerProductName desc-->
    </select>
    <!--查询指定客户的货品-->
    <select id="SelectProductByCustomer" resultMap="ProductResult1" parameterClass="Map">
      <![CDATA[
      select ProductId,ProductName,product.ProductCategoryId,ProductVersion,ProduceUnitId,SupplierId,StocksQuantity,ProductCategoryName,DepotPositionId,DepotUnitId,ProductDescription, product.Id,MainUnitId,BasedUnitGroupId,CustomerProductName,CustomerId,ProductCategoryId2,ProductCategoryId3 from product left join ProductCategory
      on ProductCategory.ProductCategoryId=Product.ProductCategoryId
      where customerid=#CustomerId# 
      AND (ProductDeadDate IS NULL 
      OR (year(ProductDeadDate) = '1900' AND month(ProductDeadDate) = '01' AND day(ProductDeadDate) = '01') 
      OR ProductDeadDate > #DeadDate#)
      order by id
      ]]>
      <!--CustomerProductName desc-->
    </select>
    <!--查询指定类型和客户的货品和公司货品-->

    <select id="SelectByCategoryAndCustomer" resultMap="ProductResult" parameterClass="string">
      <![CDATA[   select * from product where  (ProductCategoryId=#productcategoryid# and customerid=#customerid#) or       (ProductCategoryId=#productcategoryid# and (IsCustomerProduct=0 or IsCustomerProduct is null)  )   order by Id 	]]>
    </select>
    <delete id="deleteByCustomPro"  parameterClass="Map">
      delete * from product where productid=#productid# and customerid=#customerid#
    </delete>
    <select id="selectByProductAndCustomer" resultMap="ProductResult" parameterClass="string">
      <![CDATA[
      select * from product where customerid=#customerid# and productid=#productid# order by  id  
      ]]>
      <!--CustomerProductName desc-->
    </select>

    <select id="GetProduct" resultMap="ProductResult1">
      SELECT product.Id,ProductId,ProductName,ProductVersion,product.ProductCategoryId,SupplierId,ProduceUnitId,StocksQuantity,ProductCategoryName,DepotPositionId,DepotUnitId,CustomerProductName,BasedUnitGroupId,MainUnitId,ProductDescription,CustomerId,ProductCategoryId2,ProductCategoryId3 FROM Product left join ProductCategory
      on ProductCategory.ProductCategoryId=Product.ProductCategoryId order by  ProductName
    </select>

    <select id="GetProductByCondition" resultMap="ProductResult4" parameterClass="Map">
      <![CDATA[
			SELECT p.Id,ProductId,p.ProductName,p.StocksQuantity,p.DepotUnitId,c.ProductCategoryId,c.ProductCategoryName,p.CustomerProductName,p.ProductDescription
			FROM Product p left join ProductCategory c on c.ProductCategoryId=p.ProductCategoryId where (c.ProductCategoryId = #ProductCategoryName# or #ProductCategoryName# ='' or #ProductCategoryName# is null) and ( p.ProductName like '%$pt$%' or p.Id like '%$pt$%' or p.CustomerProductName like '%$pt$%' or #pt#='' or #pt# is null)
      and p.DepotId=#DepotId#     order by ProductName
			]]>
    </select>

    <select id="select_byCategoryTo" resultMap="ProductResult2">
      SELECT Id,ProductId,ProductName,ProductCategoryId,CustomerProductName,StocksQuantity,ProductDescription,IsCustomerProduct,ProductCategoryId2,ProductCategoryId3 FROM Product  where    ProductCategoryId = #value# order by ProductName
    </select>
    <select id="select_notcustomer" resultMap="ProductResult1">
      select  product.Id,ProductId,ProductName,ProductVersion,product.ProductCategoryId,SupplierId,ProduceUnitId,StocksQuantity,ProductCategoryName,DepotPositionId,DepotUnitId,CustomerProductName,BasedUnitGroupId,MainUnitId,ProductDescription,CustomerId,ProductCategoryId2,ProductCategoryId3 FROM Product left join ProductCategory
      on ProductCategory.ProductCategoryId=Product.ProductCategoryId  where IsCustomerProduct=0 or IsCustomerProduct is null order by ProductName
    </select>
    <select id="select_notcustomer1" resultMap="ProductResult3">
      select  Id,ProductId,ProductName from Product  where IsCustomerProduct=0 or IsCustomerProduct is null order by ProductName
    </select>
    <select id="select_notcustomerByCate" resultMap="ProductResult1" parameterClass="string">
      select  product.Id,ProductId,ProductName,ProductVersion,product.ProductCategoryId,SupplierId,ProduceUnitId,StocksQuantity,ProductCategoryName,DepotPositionId,DepotUnitId,CustomerProductName,BasedUnitGroupId,MainUnitId,ProductDescription,CustomerId,ProductCategoryId2,ProductCategoryId3 FROM Product left join ProductCategory
      on ProductCategory.ProductCategoryId=Product.ProductCategoryId  where (IsCustomerProduct=0 or IsCustomerProduct is null) and product.ProductCategoryId=#value#  order by ProductName
    </select>
    <select id="select_byIdOrNameKey" resultMap="ProductResult1" parameterClass="string">
      SELECT product.Id,ProductId,ProductName,ProductVersion,product.ProductCategoryId,ProduceUnitId,SupplierId,StocksQuantity,ProductCategoryName,DepotPositionId,DepotUnitId,CustomerProductName,BasedUnitGroupId,MainUnitId,ProductDescription,CustomerId,ProductCategoryId2,ProductCategoryId3 FROM Product left join ProductCategory
      on ProductCategory.ProductCategoryId=Product.ProductCategoryId where ( product.id like '%$id$%' or #id# is null) and (ProductName like '%$name$%' or #name# is null) and (CustomerProductName like '%$customerProductName$%' or #customerProductName# is null)
    </select>
    <select id="select_ProceProduct" resultMap="ProductResult"  parameterClass="Map">
      <![CDATA[
			SELECT * FROM Product  where  (ProceebeforeProductId=#ProceebeforeProductId# OR productid=#ProceebeforeProductId#) and productid<>#productId#
			   ]]>
    </select>
    <select id="select_WhereSQL" resultMap="ProductResult" parameterClass="string">
      <![CDATA[ 	SELECT * FROM Product where $value$   ]]>
    </select>
    <select id="select_ALLIdOrNameKey" resultMap="ProductResultNotZCMai" parameterClass="string">
      SELECT
      [Id],
      [ProductId],
      [BasedUnitGroupId],
      [MainUnitId],
      [BuyUnitId],
      [VolumeUnitId],
      [CustomInspectionRuleId],
      [EmployeeChangeId],
      [InsteadOfProductId],
      [EmployeeCreatorId],
      [ProduceUnitId],
      [VolumeUnitGroupId],
      [BuyEmployeeId],
      [WeightUnitGroupId],
      [QualityTestUnitId],
      [PackageTypeId],
      [SellUnitId],
      [DepotUnitId],
      [WeightUnitId],
      [QualityTestPlanId],
      [DepotPositionId],
      [DepotId],
      [SupplierId],
      [ProductCategoryId],
      [InsertTime],
      [UpdateTime],
      [ProductName],
      [ProductBarCode],
      [ProductSpecification],
      [ProductDescription],
      [ProductPlace],
      [ProductBatch],
      [ProductDeadDate],
      [ProductNearCGDate],
      [ProductNearXSDate],
      [ProduceCounty],
      [ValuationWay],
      [PlanSellPrice],
      [ReferenceCost],
      [LowestSellPrice],
      [HighestPurchasingPrice],
      [NewestCost],
      [ReferenceSellPrice],
      [HighestStock],
      [LowestStock],
      [SafeStock],
      [DamageRate],
      [AbcCategory],
      [StockCheckTimeParts],
      [StockTakeCycle],
      [LastStockTakeTime],
      [Digital],
      [Length],
      [Width],
      [Height],
      [Volume],
      [NetWeight],
      [GrossWeight],
      [CheckCategory],
      [CheckRule],
      [CheckRate],
      [CheckCount],
      [QualityRequire],
      [PowerGroup],
      [OutSourcing],
      [Consume],
      [TrustOut],
      [HomeMade],
      [OnMadingQuantity],
      [BeenAssigned],
      [StocksQuantity],
      [OrderOnWayQuantity],
      [LendQuantity],
      [BorrowQuantity],
      [IsRequiredCheck],
      [IsRequiredCheckCycle],
      [CheckCycle],
      [ProceebeforeProductId],
      [IsProcee],
      [IsCustomerProduct],
      [CustomerBeforeProductId],
      [CustomerProductName],
      [CustomerBeforeProductName],
      [CustomerId],
      [ProductBarCodeIsAuto],
      [TechonlogyHeaderid],
      [ProceduresId],
      [MpsStockQuantity],
      [MRSStockQuantity],
      [ProduceMaterialDistributioned],
      [OtherMaterialDistributioned],
      [PriceAndRange],
      [ProductType],
      [XOPriceAndRange],
      [ProductVersion],
      [ProductState],
      [ProductCategoryId2],
      [ProductCategoryId3]
      from product where (id like '%$id$%' or #id# is null) and (ProductName like '%$name$%' or #name# is null) and (CustomerProductName like '%$customerProductName$%' or #customerProductName# is null)
    </select>
    <update id="update_stock" parameterClass="string">
      <![CDATA[
			UPDATE Product
      SET
        product.StocksQuantity = (SELECT isnull(SUM(StockQuantity1),0) FROM Stock  WHERE ProductId = #value#)
      WHERE 
        Product.ProductId = #value#
			]]>
    </update>
    <select id="select_by_primary_key2" resultMap="ProductResult2">
      SELECT Id,ProductId,ProductName,ProductCategoryId,CustomerProductName,ProductDescription,StocksQuantity,IsCustomerProduct,ProductCategoryId2,ProductCategoryId3 FROM Product  where    ProductCategoryId = #value# order by ProductName
    </select>
    <select id="select_by_primary_key3" resultMap="ProductResultBomPar">
      SELECT Id,ProductId,CustomerId,ProductName,ProductCategoryId,CustomerProductName,ProductDescription,StocksQuantity,IsCustomerProduct,OutSourcing,TrustOut,HomeMade FROM Product  where    ProductId = #value#
    </select>
    <select id="select_by_primary_key4" resultMap="ProductResultNotZCMai">
      SELECT
      [Id],
      [ProductId],
      [BasedUnitGroupId],
      [MainUnitId],
      [BuyUnitId],
      [VolumeUnitId],
      [CustomInspectionRuleId],
      [EmployeeChangeId],
      [InsteadOfProductId],
      [EmployeeCreatorId],
      [ProduceUnitId],
      [VolumeUnitGroupId],
      [BuyEmployeeId],
      [WeightUnitGroupId],
      [QualityTestUnitId],
      [PackageTypeId],
      [SellUnitId],
      [DepotUnitId],
      [WeightUnitId],
      [QualityTestPlanId],
      [DepotPositionId],
      [DepotId],
      [SupplierId],
      [ProductCategoryId],
      [InsertTime],
      [UpdateTime],
      [ProductName],
      [ProductBarCode],
      [ProductSpecification],
      [ProductDescription],
      [ProductPlace],
      [ProductBatch],
      [ProductDeadDate],
      [ProductNearCGDate],
      [ProductNearXSDate],
      [ProduceCounty],
      [ValuationWay],
      [PlanSellPrice],
      [ReferenceCost],
      [LowestSellPrice],
      [HighestPurchasingPrice],
      [NewestCost],
      [ReferenceSellPrice],
      [HighestStock],
      [LowestStock],
      [SafeStock],
      [DamageRate],
      [AbcCategory],
      [StockCheckTimeParts],
      [StockTakeCycle],
      [LastStockTakeTime],
      [Digital],
      [Length],
      [Width],
      [Height],
      [Volume],
      [NetWeight],
      [GrossWeight],
      [CheckCategory],
      [CheckRule],
      [CheckRate],
      [CheckCount],
      [QualityRequire],
      [PowerGroup],
      [OutSourcing],
      [Consume],
      [TrustOut],
      [HomeMade],
      [OnMadingQuantity],
      [BeenAssigned],
      [StocksQuantity],
      [OrderOnWayQuantity],
      [LendQuantity],
      [BorrowQuantity],
      [IsRequiredCheck],
      [IsRequiredCheckCycle],
      [CheckCycle],
      [ProceebeforeProductId],
      [IsProcee],
      [IsCustomerProduct],
      [CustomerBeforeProductId],
      [CustomerProductName],
      [CustomerBeforeProductName],
      [CustomerId],
      [ProductBarCodeIsAuto],
      [TechonlogyHeaderid],
      [ProceduresId],
      [MpsStockQuantity],
      [MRSStockQuantity],
      [ProduceMaterialDistributioned],
      [OtherMaterialDistributioned],
      [PriceAndRange],
      [ProductType],
      [XOPriceAndRange],
      [ProductVersion],
      [ProductState],
      [ProductCategoryId2],
      [ProductCategoryId3]
      FROM
      [dbo].[Product]
      WHERE
      [ProductId] = #ProductId#
    </select>
    <select id="select_StockByProduct" resultClass="double" parameterClass="string">
      select StocksQuantity from product where productid=#value#
    </select>
    <select id="select_by_primary_key5" resultMap="ProductResult3">
      SELECT ProductId,ProductName,Id FROM Product  where  ProductId = #value#
    </select>
    <select id="StockPrompt" resultClass="Product">
      <![CDATA[
      SELECT Id,ProductName,StocksQuantity,SafeStock,CustomerProductName FROM product WHERE StocksQuantity<SafeStock
      ]]>
    </select>

    <select id="SelectProductByCondition" resultMap="ProductResult5" parameterClass="Map">
      <![CDATA[
      SELECT Id,ProductId,ProductName,StocksQuantity,NetWeight,MaterialIds,MaterialNum FROM Product WHERE 1=1 $sql$
      ]]>
    </select>
    <select id="SelectProductsByProductIds" resultMap="ProductResult5" parameterClass="Map">
      <![CDATA[
      SELECT Id,ProductId,ProductName,StocksQuantity,NetWeight,MaterialIds,MaterialNum FROM Product WHERE 1=1 $sql$
      ]]>
    </select>
  </statements>
</sqlMap>
