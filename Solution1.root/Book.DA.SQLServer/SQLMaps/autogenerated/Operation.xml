<?xml version="1.0" encoding="utf-8" ?> 
<sqlMap namespace="Operation" xmlns="http://ibatis.apache.org/mapping" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="Operation" type="Book.Model.Operation, Book.Model" />
    </alias>
    <resultMaps>                                    
        <resultMap id="OperationResult" class="Operation">
			<result property="OperationId" column="OperationId" />
			<result property="InsertTime" column="InsertTime" />
			<result property="UpdateTime" column="UpdateTime" />
			<result property="OperationName" column="OperationName" />
			<result property="OperationDescription" column="OperationDescription" />
			<result property="ParentOperationId" column="ParentOperationId" />
			<result property="KeyTag" column="KeyTag" />
			<result property="KeyUrl" column="KeyUrl" />
          <result property="TableName" column="TableName" />
        </resultMap>
    </resultMaps>
		
    <statements>
		<select id="has_rows_of" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[Operation]
				WHERE
				[OperationId] = #OperationId#
				) then 1 else 0 end
		</select>
		<select id="has_rows" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[Operation]
 				where invoicestatus=1 or invoicestatus is null				
				) then 1 else 0 end
		</select>
		<select id="get_first" resultMap="OperationResult">
			<![CDATA[
			select top 1 *
			from dbo.Operation 
			order by InsertTime
			]]>
		</select>
		<select id="get_last" resultMap="OperationResult">
			<![CDATA[
			select top 1 *
			from dbo.Operation 			
			order by InsertTime desc
			]]>
		</select>
		<select id="get_prev" resultMap="OperationResult" parameterClass="Operation">
			<![CDATA[
			select top 1 *
			from dbo.Operation
			where InsertTime < #InsertTime#
			order by InsertTime desc
			]]>
		</select>
		<select id="get_next" resultMap="OperationResult" parameterClass="Operation">
			<![CDATA[
			select top 1 *
			from dbo.Operation
			where InsertTime > #InsertTime#
			order by InsertTime
			]]>
		</select>
		<select id="has_rows_before" resultClass="bool" parameterClass="Operation">
			<![CDATA[
			select case when exists(
				select * 
				from dbo.Operation
				where InsertTime < #InsertTime#
				) 
				then 1 else 0 end
			]]>
		</select>
		
		<select id="has_rows_after" resultClass="bool" parameterClass="Operation">
			<![CDATA[
			select case when exists(
				select * 
				from dbo.Operation
				where InsertTime > #InsertTime#
				) then 1 else 0 end
			]]>
		</select>
		<!-- select by primary key -->
        <select id="select_by_primary_key" resultMap="OperationResult" parameterClass="Operation">
          SELECT
          [OperationId],
          [InsertTime],
          [UpdateTime],
          [OperationName],
          [OperationDescription],
          [ParentOperationId],
          [KeyTag],
          [KeyUrl],
          [TableName]
          FROM
          [dbo].[Operation]
          WHERE
          [OperationId] = #OperationId#
        </select>
		
		<!-- delete -->
        <delete id="delete" parameterClass="string">
			DELETE FROM [dbo].[Operation]
			WHERE
				[OperationId] = #OperationId#
        </delete>

		<!-- select all -->
        <select id="select_all" resultMap="OperationResult" >
			SELECT *
			FROM 
				[dbo].[Operation]
			
  ORDER BY InsertTime DESC  
			
        </select>
        
		<select id="count_all" resultClass="int">
			select count(*)
			from 
				[dbo].[Operation]
		</select>
		
		<select id="select_all_with_paging" resultMap="OperationResult">
            SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[Operation]
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
		</select>
		
		<!-- insert -->
        <insert id="insert" parameterClass="Operation">
          INSERT INTO [dbo].[Operation]
          (
          [OperationId],
          [InsertTime],
          [UpdateTime],
          [OperationName],
          [OperationDescription],
          [ParentOperationId],
          [KeyTag],
          [KeyUrl],
          [TableName]
          )
          VALUES
          (
          #OperationId#,
          #InsertTime#,
          #UpdateTime#,
          #OperationName#,
          #OperationDescription#,
          #ParentOperationId#,
          #KeyTag#,
          #KeyUrl#,
          #TableName#
          )
        </insert>
		
		<!-- update -->
        <update id="update" parameterClass="Operation">
          UPDATE [Operation] SET
          [InsertTime] = #InsertTime#,
          [UpdateTime] = #UpdateTime#,
          [OperationName] = #OperationName#,
          [OperationDescription] = #OperationDescription#,
          [ParentOperationId] = #ParentOperationId#,
          [KeyTag] = #KeyTag#,
          [KeyUrl] = #KeyUrl#,
          [TableName]=#TableName#
          WHERE
          [OperationId] = #OperationId#
        </update>
		<select id="existsPrimary" resultClass="bool" parameterClass="string">
			<![CDATA[
			select case when exists(
				select *
				from [dbo].[Operation]
				where  OperationId = #value# 
				)
				then 1 else 0 end
			]]>
		</select>
		
    </statements>
</sqlMap>

