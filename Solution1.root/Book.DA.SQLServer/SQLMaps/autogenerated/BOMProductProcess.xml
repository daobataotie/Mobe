<?xml version="1.0" encoding="utf-8" ?> 
<sqlMap namespace="BOMProductProcess" xmlns="http://ibatis.apache.org/mapping" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="BOMProductProcess" type="Book.Model.BOMProductProcess, Book.Model" />
    </alias>
    <resultMaps>                                    
        <resultMap id="BOMProductProcessResult" class="BOMProductProcess">
			<result property="BOMProductProcessId" column="BOMProductProcessId" />
			<result property="BomId" column="BomId" />
			<result property="ProcessCategoryId" column="ProcessCategoryId" />
			<result property="ProcessId" column="ProcessId" />
			<result property="IsCheck" column="IsCheck" />
			<result property="ProcessCategory" column="ProcessCategoryId" lazyLoad="false" select="ProcessCategory.select_by_primary_key" />
		
			<result property="Bom" column="BomId" lazyLoad="false" select="BomParentPartInfo.select_by_primary_key" />
        </resultMap>
    </resultMaps>
		
    <statements>
		<select id="has_rows_of" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[BOMProductProcess]
				WHERE
				[BOMProductProcessId] = #BOMProductProcessId#
				) then 1 else 0 end
		</select>
		<select id="has_rows" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[BOMProductProcess]
 								
				) then 1 else 0 end
		</select>
		<!-- select by primary key -->
        <select id="select_by_primary_key" resultMap="BOMProductProcessResult" parameterClass="BOMProductProcess">
			SELECT
				[BOMProductProcessId],
				[BomId],
				[ProcessCategoryId],
				[ProcessId],
				[IsCheck]
			FROM
				[dbo].[BOMProductProcess]
			WHERE
				[BOMProductProcessId] = #BOMProductProcessId#
        </select>
		
		<!-- delete -->
        <delete id="delete" parameterClass="string">
			DELETE FROM [dbo].[BOMProductProcess]
			WHERE
				[BOMProductProcessId] = #BOMProductProcessId#
        </delete>

		<!-- select all -->
        <select id="select_all" resultMap="BOMProductProcessResult" >
			SELECT *
			FROM 
				[dbo].[BOMProductProcess]
			ORDER BY BOMProductProcessId ASC
        </select>
        
		<select id="count_all" resultClass="int">
			select count(*)
			from 
				[dbo].[BOMProductProcess]
		</select>
		
		<select id="select_all_with_paging" resultMap="BOMProductProcessResult">
            SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[BOMProductProcess]
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
		</select>
		
		<!-- insert -->
        <insert id="insert" parameterClass="BOMProductProcess">
			INSERT INTO [dbo].[BOMProductProcess] 
			(
				[BOMProductProcessId],
				[BomId],
				[ProcessCategoryId],
				[ProcessId],
				[IsCheck]
			) 
			VALUES 
			(
				#BOMProductProcessId#,
				#BomId#,
				#ProcessCategoryId#,
				#ProcessId#,
				#IsCheck#
			)
        </insert>
		
		<!-- update -->
        <update id="update" parameterClass="BOMProductProcess">
			UPDATE [BOMProductProcess] SET
				[BomId] = #BomId#,
				[ProcessCategoryId] = #ProcessCategoryId#,
				[ProcessId] = #ProcessId#,
				[IsCheck] = #IsCheck#
			WHERE
				[BOMProductProcessId] = #BOMProductProcessId#
        </update>
		
		
    </statements>
</sqlMap>

