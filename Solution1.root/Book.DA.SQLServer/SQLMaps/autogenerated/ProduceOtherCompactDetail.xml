<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="ProduceOtherCompactDetail" xmlns="http://ibatis.apache.org/mapping"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="ProduceOtherCompactDetail" type="Book.Model.ProduceOtherCompactDetail, Book.Model" />
  </alias>
  <resultMaps>
    <resultMap id="ProduceOtherCompactDetailResult" class="ProduceOtherCompactDetail">
      <result property="OtherCompactDetailId" column="OtherCompactDetailId" />
      <result property="ProductId" column="ProductId" />
      <result property="ProduceOtherCompactId" column="ProduceOtherCompactId" />
      <result property="OtherCompactCount" column="OtherCompactCount" />
      <result property="OtherCompactPrice" column="OtherCompactPrice" />
      <result property="OtherCompactMoney" column="OtherCompactMoney" />
      <result property="MPSheaderId" column="MPSheaderId" />
      <result property="InDepotCount" column="InDepotCount" />
      <result property="Checkeds" column="Checkeds" />
      <result property="InvoiceXOId" column="InvoiceXOId" />
      <result property="InvoiceXODetailId" column="InvoiceXODetailId" />
      <result property="ProductUnit" column="ProductUnit" />
      <result property="PrimaryKeyId" column="PrimaryKeyId" />
      <result property="MPSDetailId" column="MPSDetailId" />
      <result property="Description" column="Description" />
      <result property="PriceUnit" column="PriceUnit" />
      <result property="ProceduresId" column="ProceduresId" />
      <result property="CustomInvoiceXOId" column="CustomInvoiceXOId" />
      <result property="DetailsFlag" column="DetailsFlag" />
      <result property="JiaoQi" column="JiaoQi" />
      <result property="CancelQuantity" column="CancelQuantity" />
      <result property="MRSdetailsId" column="MRSdetailsId" />
      <result property="WorkHouseNextId" column="WorkHouseNextId" />
      <result property="Inumber" column="Inumber" />
      <result property="HandbookId" column="HandbookId"/>
      <result property="HandbookProductId" column="HandbookProductId"/>
      <result property="Procedures" column="ProceduresId" lazyLoad="false" select="Procedures.select_by_primary_key" />
      <result property="Product" column="ProductId" lazyLoad="false" select="Product.select_SimpleProduct" />
      <result property="ProduceOtherCompact" column="ProduceOtherCompactId" lazyLoad="false" select="ProduceOtherCompact.select_by_primary_key" />
      <result property="WorkHouseNext" column="WorkHouseNextId" lazyLoad="false" select="WorkHouse.select_by_primary_key" />
    </resultMap>
  </resultMaps>

  <statements>
    <select id="has_rows_of" resultClass="bool">
      <![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[ProduceOtherCompactDetail]
				WHERE
				[OtherCompactDetailId] = #OtherCompactDetailId#
                        			                   
				) then 1 else 0 end
                ]]>
    </select>
    <select id="has_rows" resultClass="bool">
      <![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[ProduceOtherCompactDetail]
 								
				) then 1 else 0 end
                ]]>
    </select>
    <!-- select by primary key -->
    <select id="select_by_primary_key" resultMap="ProduceOtherCompactDetailResult" parameterClass="ProduceOtherCompactDetail">
      <![CDATA[SELECT
				[OtherCompactDetailId],
				[ProductId],
				[ProduceOtherCompactId],
				[OtherCompactCount],
				[OtherCompactPrice],
				[OtherCompactMoney],
				[MPSheaderId],
				[InDepotCount],
				[Checkeds],
				[InvoiceXOId],
				[InvoiceXODetailId],
				[ProductUnit],
				[PrimaryKeyId],
				[MPSDetailId],
				[Description],
				[PriceUnit],
				[ProceduresId],
				[CustomInvoiceXOId],
				[DetailsFlag],
				[JiaoQi],
				[CancelQuantity],
				[MRSdetailsId],
				[WorkHouseNextId],
				[Inumber],
        [HandbookId],
        [HandbookProductId]
			FROM
				[dbo].[ProduceOtherCompactDetail]
			WHERE
				[OtherCompactDetailId] = #OtherCompactDetailId#
                			          
         		]]>
    </select>

    <!-- delete -->
    <delete id="delete" parameterClass="string">
      <![CDATA[                
                DELETE FROM [dbo].[ProduceOtherCompactDetail]
			WHERE            
				[OtherCompactDetailId] = #OtherCompactDetailId#
                    		]]>
    </delete>

    <!-- select all -->
    <select id="select_all" resultMap="ProduceOtherCompactDetailResult" >
      <![CDATA[SELECT *
			FROM 
				[dbo].[ProduceOtherCompactDetail]
                			                   

			]]>
    </select>

    <select id="count_all" resultClass="int">
      <![CDATA[	select count(*)
			from 
				[dbo].[ProduceOtherCompactDetail]
                			          
         ]]>
    </select>

    <select id="select_all_with_paging" resultMap="ProduceOtherCompactDetailResult">
      <![CDATA[    SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[ProduceOtherCompactDetail]
                    			          
         
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
             ]]>
    </select>

    <!-- insert -->
    <insert id="insert" parameterClass="ProduceOtherCompactDetail">
      <![CDATA[ INSERT INTO [dbo].[ProduceOtherCompactDetail] 
			(
				[OtherCompactDetailId],
				[ProductId],
				[ProduceOtherCompactId],
				[OtherCompactCount],
				[OtherCompactPrice],
				[OtherCompactMoney],
				[MPSheaderId],
				[InDepotCount],
				[Checkeds],
				[InvoiceXOId],
				[InvoiceXODetailId],
				[ProductUnit],
				[PrimaryKeyId],
				[MPSDetailId],
				[Description],
				[PriceUnit],
				[ProceduresId],
				[CustomInvoiceXOId],
				[DetailsFlag],
				[JiaoQi],
				[CancelQuantity],
				[MRSdetailsId],
				[WorkHouseNextId],
				[Inumber],
        [HandbookId],
        [HandbookProductId]
			) 
			VALUES 
			(
				#OtherCompactDetailId#,
				#ProductId#,
				#ProduceOtherCompactId#,
				#OtherCompactCount#,
				#OtherCompactPrice#,
				#OtherCompactMoney#,
				#MPSheaderId#,
				#InDepotCount#,
				#Checkeds#,
				#InvoiceXOId#,
				#InvoiceXODetailId#,
				#ProductUnit#,
				#PrimaryKeyId#,
				#MPSDetailId#,
				#Description#,
				#PriceUnit#,
				#ProceduresId#,
				#CustomInvoiceXOId#,
				#DetailsFlag#,
				#JiaoQi#,
				#CancelQuantity#,
				#MRSdetailsId#,
				#WorkHouseNextId#,
				#Inumber#,
        #HandbookId#,
        #HandbookProductId#
			)
             ]]>
    </insert>

    <!-- update -->
    <update id="update" parameterClass="ProduceOtherCompactDetail">
      <![CDATA[ 	UPDATE [ProduceOtherCompactDetail] SET
				[ProductId] = #ProductId#,
				[ProduceOtherCompactId] = #ProduceOtherCompactId#,
				[OtherCompactCount] = #OtherCompactCount#,
				[OtherCompactPrice] = #OtherCompactPrice#,
				[OtherCompactMoney] = #OtherCompactMoney#,
				[MPSheaderId] = #MPSheaderId#,
				[InDepotCount] = #InDepotCount#,
				[Checkeds] = #Checkeds#,
				[InvoiceXOId] = #InvoiceXOId#,
				[InvoiceXODetailId] = #InvoiceXODetailId#,
				[ProductUnit] = #ProductUnit#,
				[PrimaryKeyId] = #PrimaryKeyId#,
				[MPSDetailId] = #MPSDetailId#,
				[Description] = #Description#,
				[PriceUnit] = #PriceUnit#,
				[ProceduresId] = #ProceduresId#,
				[CustomInvoiceXOId] = #CustomInvoiceXOId#,
				[DetailsFlag] = #DetailsFlag#,
				[JiaoQi] = #JiaoQi#,
				[CancelQuantity] = #CancelQuantity#,
				[MRSdetailsId] = #MRSdetailsId#,
				[WorkHouseNextId] = #WorkHouseNextId#,
				[Inumber] = #Inumber#,
        [HandbookId]=#HandbookId#,
        [HandbookProductId]=#HandbookProductId#
			WHERE
				[OtherCompactDetailId] = #OtherCompactDetailId#
                    ]]>
    </update>
    <select id="existsPrimary" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select *
				from [dbo].[ProduceOtherCompactDetail]
				where  OtherCompactDetailId = #value#                 			                   
				)
				then 1 else 0 end
			]]>
    </select>

  </statements>
</sqlMap>

