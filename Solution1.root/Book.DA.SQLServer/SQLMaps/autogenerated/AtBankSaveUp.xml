<?xml version="1.0" encoding="utf-8" ?> 
<sqlMap namespace="AtBankSaveUp" xmlns="http://ibatis.apache.org/mapping" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="AtBankSaveUp" type="Book.Model.AtBankSaveUp, Book.Model" />
    </alias>
    <resultMaps>                                    
        <resultMap id="AtBankSaveUpResult" class="AtBankSaveUp">
			<result property="SaveUpId" column="SaveUpId" />
			<result property="SaveUpCategory" column="SaveUpCategory" />
			<result property="SaveUpdate" column="SaveUpdate" />
			<result property="CheckNumber" column="CheckNumber" />
			<result property="BankId" column="BankId" />
			<result property="Rate" column="Rate" />
			<result property="CurrencyCategoryId" column="CurrencyCategoryId" />
			<result property="SaveUpMoney" column="SaveUpMoney" />
			<result property="StrengtheningMoney" column="StrengtheningMoney" />
			<result property="DepartmentId" column="DepartmentId" />
			<result property="OtherSubject" column="OtherSubject" />
			<result property="SummonId" column="SummonId" />
			<result property="Summary" column="Summary" />
			<result property="ProjectId" column="ProjectId" />
			<result property="Mark" column="Mark" />
			<result property="InsertTime" column="InsertTime" />
			<result property="UpdateTime" column="UpdateTime" />
			<result property="Id" column="Id" />
		<result property="Summon" column="SummonId" lazyLoad="false" select="AtSummon.select_by_primary_key" />		<result property="Bank" column="BankId" lazyLoad="false" select="AtBankAccount.select_by_primary_key" />		<result property="CurrencyCategory" column="CurrencyCategoryId" lazyLoad="false" select="CurrencyCategory.select_by_primary_key" />		<result property="Department" column="DepartmentId" lazyLoad="false" select="Department.select_by_primary_key" />
        </resultMap>
    </resultMaps>
		
    <statements>
		<select id="has_rows_of" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[AtBankSaveUp]
				WHERE
				[SaveUpId] = #SaveUpId#
				) then 1 else 0 end
		</select>
		<select id="has_rows" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[AtBankSaveUp]
 								
				) then 1 else 0 end
		</select>
		<select id="get_first" resultMap="AtBankSaveUpResult">
			<![CDATA[
			select top 1 *
			from dbo.AtBankSaveUp 
			order by InsertTime
			]]>
		</select>
		<select id="get_last" resultMap="AtBankSaveUpResult">
			<![CDATA[
			select top 1 *
			from dbo.AtBankSaveUp 			
			order by InsertTime desc
			]]>
		</select>
		<select id="get_prev" resultMap="AtBankSaveUpResult" parameterClass="AtBankSaveUp">
			<![CDATA[
			select top 1 *
			from dbo.AtBankSaveUp
			where InsertTime < #InsertTime#
			order by InsertTime desc
			]]>
		</select>
		<select id="get_next" resultMap="AtBankSaveUpResult" parameterClass="AtBankSaveUp">
			<![CDATA[
			select top 1 *
			from dbo.AtBankSaveUp
			where InsertTime > #InsertTime#
			order by InsertTime
			]]>
		</select>
		<select id="has_rows_before" resultClass="bool" parameterClass="AtBankSaveUp">
			<![CDATA[
			select case when exists(
				select * 
				from dbo.AtBankSaveUp
				where InsertTime < #InsertTime#
				) 
				then 1 else 0 end
			]]>
		</select>
		
		<select id="has_rows_after" resultClass="bool" parameterClass="AtBankSaveUp">
			<![CDATA[
			select case when exists(
				select * 
				from dbo.AtBankSaveUp
				where InsertTime > #InsertTime#
				) then 1 else 0 end
			]]>
		</select>
		<!-- select by primary key -->
        <select id="select_by_primary_key" resultMap="AtBankSaveUpResult" parameterClass="AtBankSaveUp">
			SELECT
				[SaveUpId],
				[SaveUpCategory],
				[SaveUpdate],
				[CheckNumber],
				[BankId],
				[Rate],
				[CurrencyCategoryId],
				[SaveUpMoney],
				[StrengtheningMoney],
				[DepartmentId],
				[OtherSubject],
				[SummonId],
				[Summary],
				[ProjectId],
				[Mark],
				[InsertTime],
				[UpdateTime],
				[Id]
			FROM
				[dbo].[AtBankSaveUp]
			WHERE
				[SaveUpId] = #SaveUpId#
        </select>
		
		<!-- delete -->
        <delete id="delete" parameterClass="string">
			DELETE FROM [dbo].[AtBankSaveUp]
			WHERE
				[SaveUpId] = #SaveUpId#
        </delete>

		<!-- select all -->
        <select id="select_all" resultMap="AtBankSaveUpResult" >
			SELECT *
			FROM 
				[dbo].[AtBankSaveUp]
			
				
			ORDER BY Id ASC
			
			
        </select>
        
		<select id="count_all" resultClass="int">
			select count(*)
			from 
				[dbo].[AtBankSaveUp]
		</select>
		
		<select id="select_all_with_paging" resultMap="AtBankSaveUpResult">
            SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[AtBankSaveUp]
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
		</select>
		
		<!-- insert -->
        <insert id="insert" parameterClass="AtBankSaveUp">
			INSERT INTO [dbo].[AtBankSaveUp] 
			(
				[SaveUpId],
				[SaveUpCategory],
				[SaveUpdate],
				[CheckNumber],
				[BankId],
				[Rate],
				[CurrencyCategoryId],
				[SaveUpMoney],
				[StrengtheningMoney],
				[DepartmentId],
				[OtherSubject],
				[SummonId],
				[Summary],
				[ProjectId],
				[Mark],
				[InsertTime],
				[UpdateTime],
				[Id]
			) 
			VALUES 
			(
				#SaveUpId#,
				#SaveUpCategory#,
				#SaveUpdate#,
				#CheckNumber#,
				#BankId#,
				#Rate#,
				#CurrencyCategoryId#,
				#SaveUpMoney#,
				#StrengtheningMoney#,
				#DepartmentId#,
				#OtherSubject#,
				#SummonId#,
				#Summary#,
				#ProjectId#,
				#Mark#,
				#InsertTime#,
				#UpdateTime#,
				#Id#
			)
        </insert>
		
		<!-- update -->
        <update id="update" parameterClass="AtBankSaveUp">
			UPDATE [AtBankSaveUp] SET
				[SaveUpCategory] = #SaveUpCategory#,
				[SaveUpdate] = #SaveUpdate#,
				[CheckNumber] = #CheckNumber#,
				[BankId] = #BankId#,
				[Rate] = #Rate#,
				[CurrencyCategoryId] = #CurrencyCategoryId#,
				[SaveUpMoney] = #SaveUpMoney#,
				[StrengtheningMoney] = #StrengtheningMoney#,
				[DepartmentId] = #DepartmentId#,
				[OtherSubject] = #OtherSubject#,
				[SummonId] = #SummonId#,
				[Summary] = #Summary#,
				[ProjectId] = #ProjectId#,
				[Mark] = #Mark#,
				[InsertTime] = #InsertTime#,
				[UpdateTime] = #UpdateTime#,
				[Id] = #Id#
			WHERE
				[SaveUpId] = #SaveUpId#
        </update>
		<select id="existsPrimary" resultClass="bool" parameterClass="string">
			<![CDATA[
			select case when exists(
				select *
				from [dbo].[AtBankSaveUp]
				where  SaveUpId = #value# 
				)
				then 1 else 0 end
			]]>
		</select>
		<select id="exists" resultClass="bool" parameterClass="string">
			<![CDATA[
			select case when exists(
				select * 
				from dbo.AtBankSaveUp
				where Id = #value#
				) then 1 else 0 end
			]]>
		</select>
		
		<select id="get_by_id" resultMap="AtBankSaveUpResult" parameterClass="string">
			<![CDATA[
			SELECT top 1
				*
			FROM
				[dbo].[AtBankSaveUp]
			WHERE
				Id = #value#
			]]>	
        </select>
		
		<select id="existsexcept" resultClass="bool" parameterClass="string">
			<![CDATA[
			select case when exists(
				select *
				from dbo.AtBankSaveUp
				where Id = #newId# and Id <> #oldId#
				)
				then 1 else 0 end
			]]>
		</select>		
		
		
    </statements>
</sqlMap>

