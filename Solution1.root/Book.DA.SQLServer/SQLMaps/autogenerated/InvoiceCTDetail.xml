<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="InvoiceCTDetail" xmlns="http://ibatis.apache.org/mapping"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="InvoiceCTDetail" type="Book.Model.InvoiceCTDetail, Book.Model" />
  </alias>
  <resultMaps>
    <resultMap id="InvoiceCTDetailResult" class="InvoiceCTDetail">
      <result property="InvoiceCTDetailId" column="InvoiceCTDetailId" />
      <result property="DepotPositionId" column="DepotPositionId" />
      <result property="ProductId" column="ProductId" />
      <result property="InvoiceId" column="InvoiceId" />
      <result property="InvoiceCTDetailQuantity" column="InvoiceCTDetailQuantity" />
      <result property="InvoiceCTDetailPrice" column="InvoiceCTDetailPrice" />
      <result property="InvoiceCTDetailDiscountRate" column="InvoiceCTDetailDiscountRate" />
      <result property="InvoiceCTDetailZS" column="InvoiceCTDetailZS" />
      <result property="InvoiceCTDetailTaxRate" column="InvoiceCTDetailTaxRate" />
      <result property="InvoiceCTDetailDisount" column="InvoiceCTDetailDisount" />
      <result property="InvoiceCTDetailMoney0" column="InvoiceCTDetailMoney0" />
      <result property="InvoiceCTDetailTax" column="InvoiceCTDetailTax" />
      <result property="InvoiceCTDetailNote" column="InvoiceCTDetailNote" />
      <result property="InvoiceCTDetailMoney1" column="InvoiceCTDetailMoney1" />
      <result property="InvoiceProductUnit" column="InvoiceProductUnit" />
      <result property="Inumber" column="Inumber" />
      <result property="InvoiceCOId" column="InvoiceCOId" />
      <result property="InvoiceCODetailId" column="InvoiceCODetailId" />
      <result property="HandbookId" column="HandbookId"/>
      <result property="HandbookProductId" column="HandbookProductId"/>
      <result property="DepotPosition" column="DepotPositionId" lazyLoad="false" select="DepotPosition.select_by_primary_key" />
      <result property="Invoice" column="InvoiceId" lazyLoad="false" select="InvoiceCT.select_by_primary_key" />
      <result property="Product" column="ProductId" lazyLoad="false" select="Product.select_SimpleProduct" />
      <result property="InvoiceCODetail" column="InvoiceCODetailId"  select="InvoiceCODetail.select_by_primary_key" />
    </resultMap>
  </resultMaps>

  <statements>
    <select id="has_rows_of" resultClass="bool">
      <![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[InvoiceCTDetail]
				WHERE
				[InvoiceCTDetailId] = #InvoiceCTDetailId#
                        			                   
				) then 1 else 0 end
                ]]>
    </select>
    <select id="has_rows" resultClass="bool">
      <![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[InvoiceCTDetail]
 								
				) then 1 else 0 end
                ]]>
    </select>
    <!-- select by primary key -->
    <select id="select_by_primary_key" resultMap="InvoiceCTDetailResult" parameterClass="InvoiceCTDetail">
      <![CDATA[SELECT
				[InvoiceCTDetailId],
				[DepotPositionId],
				[ProductId],
				[InvoiceId],
				[InvoiceCTDetailQuantity],
				[InvoiceCTDetailPrice],
				[InvoiceCTDetailDiscountRate],
				[InvoiceCTDetailZS],
				[InvoiceCTDetailTaxRate],
				[InvoiceCTDetailDisount],
				[InvoiceCTDetailMoney0],
				[InvoiceCTDetailTax],
				[InvoiceCTDetailNote],
				[InvoiceCTDetailMoney1],
				[InvoiceProductUnit],
				[Inumber],
				[InvoiceCOId],
				[InvoiceCODetailId],
        [HandbookId],
        [HandbookProductId]
			FROM
				[dbo].[InvoiceCTDetail]
			WHERE
				[InvoiceCTDetailId] = #InvoiceCTDetailId#
                			          
         		]]>
    </select>

    <!-- delete -->
    <delete id="delete" parameterClass="string">
      <![CDATA[                
                DELETE FROM [dbo].[InvoiceCTDetail]
			WHERE            
				[InvoiceCTDetailId] = #InvoiceCTDetailId#
                    		]]>
    </delete>

    <!-- select all -->
    <select id="select_all" resultMap="InvoiceCTDetailResult" >
      <![CDATA[SELECT *
			FROM 
				[dbo].[InvoiceCTDetail]
                			                   

			]]>
    </select>

    <select id="count_all" resultClass="int">
      <![CDATA[	select count(*)
			from 
				[dbo].[InvoiceCTDetail]
                			          
         ]]>
    </select>

    <select id="select_all_with_paging" resultMap="InvoiceCTDetailResult">
      <![CDATA[    SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[InvoiceCTDetail]
                    			          
         
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
             ]]>
    </select>

    <!-- insert -->
    <insert id="insert" parameterClass="InvoiceCTDetail">
      <![CDATA[ INSERT INTO [dbo].[InvoiceCTDetail] 
			(
				[InvoiceCTDetailId],
				[DepotPositionId],
				[ProductId],
				[InvoiceId],
				[InvoiceCTDetailQuantity],
				[InvoiceCTDetailPrice],
				[InvoiceCTDetailDiscountRate],
				[InvoiceCTDetailZS],
				[InvoiceCTDetailTaxRate],
				[InvoiceCTDetailDisount],
				[InvoiceCTDetailMoney0],
				[InvoiceCTDetailTax],
				[InvoiceCTDetailNote],
				[InvoiceCTDetailMoney1],
				[InvoiceProductUnit],
				[Inumber],
				[InvoiceCOId],
				[InvoiceCODetailId],
        [HandbookId],
        [HandbookProductId]
			) 
			VALUES 
			(
				#InvoiceCTDetailId#,
				#DepotPositionId#,
				#ProductId#,
				#InvoiceId#,
				#InvoiceCTDetailQuantity#,
				#InvoiceCTDetailPrice#,
				#InvoiceCTDetailDiscountRate#,
				#InvoiceCTDetailZS#,
				#InvoiceCTDetailTaxRate#,
				#InvoiceCTDetailDisount#,
				#InvoiceCTDetailMoney0#,
				#InvoiceCTDetailTax#,
				#InvoiceCTDetailNote#,
				#InvoiceCTDetailMoney1#,
				#InvoiceProductUnit#,
				#Inumber#,
				#InvoiceCOId#,
				#InvoiceCODetailId#,
        #HandbookId#,
        #HandbookProductId#
			)
             ]]>
    </insert>

    <!-- update -->
    <update id="update" parameterClass="InvoiceCTDetail">
      <![CDATA[ 	UPDATE [InvoiceCTDetail] SET
				[DepotPositionId] = #DepotPositionId#,
				[ProductId] = #ProductId#,
				[InvoiceId] = #InvoiceId#,
				[InvoiceCTDetailQuantity] = #InvoiceCTDetailQuantity#,
				[InvoiceCTDetailPrice] = #InvoiceCTDetailPrice#,
				[InvoiceCTDetailDiscountRate] = #InvoiceCTDetailDiscountRate#,
				[InvoiceCTDetailZS] = #InvoiceCTDetailZS#,
				[InvoiceCTDetailTaxRate] = #InvoiceCTDetailTaxRate#,
				[InvoiceCTDetailDisount] = #InvoiceCTDetailDisount#,
				[InvoiceCTDetailMoney0] = #InvoiceCTDetailMoney0#,
				[InvoiceCTDetailTax] = #InvoiceCTDetailTax#,
				[InvoiceCTDetailNote] = #InvoiceCTDetailNote#,
				[InvoiceCTDetailMoney1] = #InvoiceCTDetailMoney1#,
				[InvoiceProductUnit] = #InvoiceProductUnit#,
				[Inumber] = #Inumber#,
				[InvoiceCOId] = #InvoiceCOId#,
				[InvoiceCODetailId] = #InvoiceCODetailId#,
        [HandbookId]=#HandbookId#,
        [HandbookProductId]=#HandbookProductId#
			WHERE
				[InvoiceCTDetailId] = #InvoiceCTDetailId#
                    ]]>
    </update>
    <select id="existsPrimary" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select *
				from [dbo].[InvoiceCTDetail]
				where  InvoiceCTDetailId = #value#                 			                   
				)
				then 1 else 0 end
			]]>
    </select>

  </statements>
</sqlMap>

