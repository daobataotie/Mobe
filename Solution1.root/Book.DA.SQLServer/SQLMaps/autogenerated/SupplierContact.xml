<?xml version="1.0" encoding="utf-8" ?> 
<sqlMap namespace="SupplierContact" xmlns="http://ibatis.apache.org/mapping" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="SupplierContact" type="Book.Model.SupplierContact, Book.Model" />
    </alias>
    <resultMaps>                                    
        <resultMap id="SupplierContactResult" class="SupplierContact">
			<result property="SupplierContactId" column="SupplierContactId" />
			<result property="SupplierId" column="SupplierId" />
			<result property="SupplierContactName" column="SupplierContactName" />
			<result property="SupplierContactPhone" column="SupplierContactPhone" />
			<result property="SupplierContactMobile" column="SupplierContactMobile" />
			<result property="SupplierContactEmail" column="SupplierContactEmail" />
			<result property="SupplierContactRemark" column="SupplierContactRemark" />
			<result property="Supplier" column="SupplierId" lazyLoad="false" select="Supplier.select_by_primary_key" />
        </resultMap>
    </resultMaps>
		
    <statements>
		<select id="has_rows_of" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[SupplierContact]
				WHERE
				[SupplierContactId] = #SupplierContactId#
				) then 1 else 0 end
		</select>
		<select id="has_rows" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[SupplierContact]
 								
				) then 1 else 0 end
		</select>
		<!-- select by primary key -->
        <select id="select_by_primary_key" resultMap="SupplierContactResult" parameterClass="SupplierContact">
			SELECT
				[SupplierContactId],
				[SupplierId],
				[SupplierContactName],
				[SupplierContactPhone],
				[SupplierContactMobile],
				[SupplierContactEmail],
				[SupplierContactRemark]
			FROM
				[dbo].[SupplierContact]
			WHERE
				[SupplierContactId] = #SupplierContactId#
        </select>
		
		<!-- delete -->
        <delete id="delete" parameterClass="string">
			DELETE FROM [dbo].[SupplierContact]
			WHERE
				[SupplierContactId] = #SupplierContactId#
        </delete>

		<!-- select all -->
        <select id="select_all" resultMap="SupplierContactResult" >
			SELECT *
			FROM 
				[dbo].[SupplierContact]
			ORDER BY SupplierContactId ASC
        </select>
        
		<select id="count_all" resultClass="int">
			select count(*)
			from 
				[dbo].[SupplierContact]
		</select>
		
		<select id="select_all_with_paging" resultMap="SupplierContactResult">
            SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[SupplierContact]
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
		</select>
		
		<!-- insert -->
        <insert id="insert" parameterClass="SupplierContact">
			INSERT INTO [dbo].[SupplierContact] 
			(
				[SupplierContactId],
				[SupplierId],
				[SupplierContactName],
				[SupplierContactPhone],
				[SupplierContactMobile],
				[SupplierContactEmail],
				[SupplierContactRemark]
			) 
			VALUES 
			(
				#SupplierContactId#,
				#SupplierId#,
				#SupplierContactName#,
				#SupplierContactPhone#,
				#SupplierContactMobile#,
				#SupplierContactEmail#,
				#SupplierContactRemark#
			)
        </insert>
		
		<!-- update -->
        <update id="update" parameterClass="SupplierContact">
			UPDATE [SupplierContact] SET
				[SupplierId] = #SupplierId#,
				[SupplierContactName] = #SupplierContactName#,
				[SupplierContactPhone] = #SupplierContactPhone#,
				[SupplierContactMobile] = #SupplierContactMobile#,
				[SupplierContactEmail] = #SupplierContactEmail#,
				[SupplierContactRemark] = #SupplierContactRemark#
			WHERE
				[SupplierContactId] = #SupplierContactId#
        </update>
		
		
    </statements>
</sqlMap>

