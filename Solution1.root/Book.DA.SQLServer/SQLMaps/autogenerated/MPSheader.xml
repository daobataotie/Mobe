<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="MPSheader" xmlns="http://ibatis.apache.org/mapping"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="MPSheader" type="Book.Model.MPSheader, Book.Model" />
  </alias>
  <resultMaps>
    <resultMap id="MPSheaderResult" class="MPSheader">
      <result property="MPSheaderId" column="MPSheaderId" />
      <result property="Employee1Id" column="Employee1Id" />
      <result property="Employee0Id" column="Employee0Id" />
      <result property="UpdateTime" column="UpdateTime" />
      <result property="InsertTime" column="InsertTime" />
      <result property="Id" column="Id" />
      <result property="MPSheaderName" column="MPSheaderName" />
      <result property="MPSStartDate" column="MPSStartDate" />
      <result property="MPSheaderState" column="MPSheaderState" />
      <result property="MPSEndDate" column="MPSEndDate" />
      <result property="MPSheaderDesc" column="MPSheaderDesc" />
      <result property="Checkeds" column="Checkeds" />
      <result property="WorkHouseId" column="WorkHouseId" />
      <result property="IsBuildMRP" column="IsBuildMRP" />
      <result property="IsAdvisementOnWay" column="IsAdvisementOnWay" />
      <result property="IsAdvisementSafetyStock" column="IsAdvisementSafetyStock" />
      <result property="InvoiceXOId" column="InvoiceXOId" />
      <result property="AuditState" column="AuditState" />
      <result property="AuditEmpId" column="AuditEmpId" />
      <result property="Employee0" column="Employee0Id" lazyLoad="false" select="Employee.select_SimpleEmployee" />
      <result property="Employee1" column="Employee1Id" lazyLoad="false" select="Employee.select_SimpleEmployee" />
      <result property="AuditEmp" column="AuditEmpId" lazyLoad="false" select="Employee.select_SimpleEmployee" />
      <result property="InvoiceXO" column="InvoiceXOId" lazyLoad="false" select="InvoiceXO.select_SimpleInvoicexo" />
      <result property="WorkHouse" column="WorkHouseId" lazyLoad="false" select="WorkHouse.select_by_primary_key" />
    </resultMap>
  </resultMaps>

  <statements>
    <select id="has_rows_of" resultClass="bool">
      <![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[MPSheader]
				WHERE
				[MPSheaderId] = #MPSheaderId#
                        			                   
				) then 1 else 0 end
                ]]>
    </select>
    <select id="has_rows" resultClass="bool">
      <![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[MPSheader]
 								
				) then 1 else 0 end
                ]]>
    </select>
    <select id="get_first" resultMap="MPSheaderResult">
      <![CDATA[
			select top 1 *
			from dbo.MPSheader
			 
			order by InsertTime 
			]]>
    </select>
    <select id="get_last" resultMap="MPSheaderResult">
      <![CDATA[
			select top 1 *
			from dbo.MPSheader
						
            order by InsertTime desc
			]]>

    </select>
    <select id="get_prev" resultMap="MPSheaderResult" parameterClass="MPSheader">
      <![CDATA[
			select top 1 *
			from dbo.MPSheader
			where InsertTime < #InsertTime#	
            			          
            order by InsertTime desc
			]]>
    </select>
    <select id="get_next" resultMap="MPSheaderResult" parameterClass="MPSheader">
      <![CDATA[
			select top 1 *
			from dbo.MPSheader
			where InsertTime > #InsertTime#	
                			                   
            order by InsertTime
			]]>
    </select>

    <select id="has_rows_before" resultClass="bool" parameterClass="MPSheader">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.MPSheader
				where InsertTime < #InsertTime#
                			                   
				) then 1 else 0 end
			]]>
    </select>

    <select id="has_rows_after" resultClass="bool" parameterClass="MPSheader">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.MPSheader
				where InsertTime > #InsertTime#
                			          
         
				) then 1 else 0 end
			]]>
    </select>
    <!-- select by primary key -->
    <select id="select_by_primary_key" resultMap="MPSheaderResult" parameterClass="MPSheader">
      <![CDATA[SELECT
				[MPSheaderId],
				[Employee1Id],
				[Employee0Id],
				[UpdateTime],
				[InsertTime],
				[Id],
				[MPSheaderName],
				[MPSStartDate],
				[MPSheaderState],
				[MPSEndDate],
				[MPSheaderDesc],
				[Checkeds],
				[WorkHouseId],
				[IsBuildMRP],
				[IsAdvisementOnWay],
				[IsAdvisementSafetyStock],
				[InvoiceXOId],
				[AuditState],
				[AuditEmpId]
			FROM
				[dbo].[MPSheader]
			WHERE
				[MPSheaderId] = #MPSheaderId#
                			          
         		]]>
    </select>

    <!-- delete -->
    <delete id="delete" parameterClass="string">
      <![CDATA[                
                DELETE FROM [dbo].[MPSheader]
			WHERE            
				[MPSheaderId] = #MPSheaderId#
                    		]]>
    </delete>

    <!-- select all -->
    <select id="select_all" resultMap="MPSheaderResult" >
      <![CDATA[SELECT *
			FROM 
				[dbo].[MPSheader]
                			                   
			ORDER BY Id ASC			
			
			]]>
    </select>

    <select id="count_all" resultClass="int">
      <![CDATA[	select count(*)
			from 
				[dbo].[MPSheader]
                			          
         ]]>
    </select>

    <select id="select_all_with_paging" resultMap="MPSheaderResult">
      <![CDATA[    SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[MPSheader]
                    			          
         
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
             ]]>
    </select>

    <!-- insert -->
    <insert id="insert" parameterClass="MPSheader">
      <![CDATA[ INSERT INTO [dbo].[MPSheader] 
			(
				[MPSheaderId],
				[Employee1Id],
				[Employee0Id],
				[UpdateTime],
				[InsertTime],
				[Id],
				[MPSheaderName],
				[MPSStartDate],
				[MPSheaderState],
				[MPSEndDate],
				[MPSheaderDesc],
				[Checkeds],
				[WorkHouseId],
				[IsBuildMRP],
				[IsAdvisementOnWay],
				[IsAdvisementSafetyStock],
				[InvoiceXOId],
				[AuditState],
				[AuditEmpId]
			) 
			VALUES 
			(
				#MPSheaderId#,
				#Employee1Id#,
				#Employee0Id#,
				#UpdateTime#,
				#InsertTime#,
				#Id#,
				#MPSheaderName#,
				#MPSStartDate#,
				#MPSheaderState#,
				#MPSEndDate#,
				#MPSheaderDesc#,
				#Checkeds#,
				#WorkHouseId#,
				#IsBuildMRP#,
				#IsAdvisementOnWay#,
				#IsAdvisementSafetyStock#,
				#InvoiceXOId#,
				#AuditState#,
				#AuditEmpId#
			)
             ]]>
    </insert>

    <!-- update -->
    <update id="update" parameterClass="MPSheader">
      <![CDATA[ 	UPDATE [MPSheader] SET
				[Employee1Id] = #Employee1Id#,
				[Employee0Id] = #Employee0Id#,
				[UpdateTime] = #UpdateTime#,
				[InsertTime] = #InsertTime#,
				[Id] = #Id#,
				[MPSheaderName] = #MPSheaderName#,
				[MPSStartDate] = #MPSStartDate#,
				[MPSheaderState] = #MPSheaderState#,
				[MPSEndDate] = #MPSEndDate#,
				[MPSheaderDesc] = #MPSheaderDesc#,
				[Checkeds] = #Checkeds#,
				[WorkHouseId] = #WorkHouseId#,
				[IsBuildMRP] = #IsBuildMRP#,
				[IsAdvisementOnWay] = #IsAdvisementOnWay#,
				[IsAdvisementSafetyStock] = #IsAdvisementSafetyStock#,
				[InvoiceXOId] = #InvoiceXOId#,
				[AuditState] = #AuditState#,
				[AuditEmpId] = #AuditEmpId#
			WHERE
				[MPSheaderId] = #MPSheaderId#
                    ]]>
    </update>
    <select id="existsPrimary" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select *
				from [dbo].[MPSheader]
				where  MPSheaderId = #value#                 			                   
				)
				then 1 else 0 end
			]]>
    </select>
    <select id="exists" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.MPSheader
				where Id = #value#
               			          
         
				) then 1 else 0 end
			]]>
    </select>

    <select id="get_by_id" resultMap="MPSheaderResult" parameterClass="string">
      <![CDATA[
			SELECT top 1
				*
			FROM
				[dbo].[MPSheader]
                    			          
         
			WHERE
				Id = #value#
			]]>
    </select>

    <select id="existsexcept" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select *
				from dbo.MPSheader
				where Id = #newId# and Id <> #oldId#
                    			          
         
				)
				then 1 else 0 end
			]]>
    </select>


  </statements>
</sqlMap>

