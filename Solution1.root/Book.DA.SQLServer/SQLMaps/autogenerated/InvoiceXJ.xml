<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="InvoiceXJ" xmlns="http://ibatis.apache.org/mapping"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="InvoiceXJ" type="Book.Model.InvoiceXJ, Book.Model" />
  </alias>
  <resultMaps>
    <resultMap id="InvoiceXJResult" class="InvoiceXJ">
      <result property="InvoiceId" column="InvoiceId" />
      <result property="Employee0Id" column="Employee0Id" />
      <result property="CustomerId" column="CustomerId" />
      <result property="Employee1Id" column="Employee1Id" />
      <result property="Employee2Id" column="Employee2Id" />
      <result property="Employee3Id" column="Employee3Id" />
      <result property="InvoiceLRTime" column="InvoiceLRTime" />
      <result property="InvoiceGZTime" column="InvoiceGZTime" />
      <result property="InvoiceZFTime" column="InvoiceZFTime" />
      <result property="InvoiceZFCause" column="InvoiceZFCause" />
      <result property="InvoiceDate" column="InvoiceDate" />
      <result property="InvoiceAbstract" column="InvoiceAbstract" />
      <result property="InvoiceNote" column="InvoiceNote" />
      <result property="InvoiceStatus" column="InvoiceStatus" />
      <result property="InsertTime" column="InsertTime" />
      <result property="UpdateTime" column="UpdateTime" />
      <result property="InvoiceTotal" column="InvoiceTotal" />
      <result property="InvoiceYxrq" column="InvoiceYxrq" />
      <result property="InvoiceTaxrate" column="InvoiceTaxrate" />
      <result property="InvoiceTax" column="InvoiceTax" />
      <result property="ProductType" column="ProductType" />
      <result property="Package" column="Package" />
      <result property="PackagePrice" column="PackagePrice" />
      <result property="PackageUnit" column="PackageUnit" />
      <result property="CompanyId" column="CompanyId" />
      <result property="AuditState" column="AuditState" />
      <result property="AuditEmpId" column="AuditEmpId" />
      <result property="ProductId" column="ProductId"/>
      <result property="InvoiceBJTotal" column="InvoiceBJTotal"/>
      <result property="InvoiceProcessTotal" column="InvoiceProcessTotal"/>
      <result property="InvoiceBJProcessTotal" column="InvoiceBJProcessTotal"/>
      <result property="InvoicePackTotal" column="InvoicePackTotal"/>
      <result property="InvoiceBJPackTotal" column="InvoiceBJPackTotal"/>
      <result property="InvoiceProductTotal" column="InvoiceProductTotal"/>
      <result property="InvoiceBJProductTotal" column="InvoiceBJProductTotal"/>
      <result property="ProductIdPackage" column="ProductIdPackage"/>
      <result property="GuanXiaoPro" column="GuanXiaoPro"/>
      <result property="GuanXiaoPack" column="GuanXiaoPack"/>
      <result property="GuanXiaoProc" column="GuanXiaoProc"/>
      <result property ="ProductModel" column="ProductModel"/>
      <result property="IsBaoJiaOver" column="IsBaoJiaOver"/>
      <result property="HandbookId" column="HandbookId"/>
      <result property="HandbookProductId" column="HandbookProductId"/>
      <result property="Company" column="CompanyId" lazyLoad="false" select="Company.select_by_primary_key" />
      <result property="Customer" column="CustomerId" lazyLoad="false" select="Customer.select_SimpleCustomer" />
      <result property="Employee0" column="Employee0Id" lazyLoad="false" select="Employee.select_SimpleEmployee" />
      <result property="Employee3" column="Employee3Id" lazyLoad="false" select="Employee.select_SimpleEmployee" />
      <result property="Employee2" column="Employee2Id" lazyLoad="false" select="Employee.select_SimpleEmployee" />
      <result property="Employee1" column="Employee1Id" lazyLoad="false" select="Employee.select_SimpleEmployee" />
      <result property="Product" column="ProductId" lazyLoad="false" select="Product.select_SimpleProduct" />
      <result property="ProductPackage" column="ProductIdPackage" lazyLoad="false" select="Product.select_SimpleProduct" />
    </resultMap>
  </resultMaps>

  <statements>
    <select id="has_rows_of" resultClass="bool">
      <![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[InvoiceXJ]
				WHERE
				[InvoiceId] = #InvoiceId#
                         and invoicestatus<>2 			                   
				) then 1 else 0 end
                ]]>
    </select>
    <select id="has_rows" resultClass="bool">
      <![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[InvoiceXJ]
 				where invoicestatus<>2 				
				) then 1 else 0 end
                ]]>
    </select>
    <select id="get_first" resultMap="InvoiceXJResult">
      <![CDATA[
			select top 1 *
			from dbo.InvoiceXJ
			where invoicestatus<>2 
			order by InvoiceDate 
			]]>
    </select>
    <select id="get_last" resultMap="InvoiceXJResult">
      <![CDATA[
			select top 1 *
			from dbo.InvoiceXJ
			where invoicestatus<>2			
            order by InvoiceDate desc
			]]>

    </select>
    <select id="get_prev" resultMap="InvoiceXJResult" parameterClass="InvoiceXJ">
      <![CDATA[
			select top 1 *
			from dbo.InvoiceXJ
			where InvoiceDate < #InvoiceDate#	
             and invoicestatus<>2 			          
            order by InvoiceDate desc
			]]>
    </select>
    <select id="get_next" resultMap="InvoiceXJResult" parameterClass="InvoiceXJ">
      <![CDATA[
			select top 1 *
			from dbo.InvoiceXJ
			where InvoiceDate > #InvoiceDate#	
                 and invoicestatus<>2			                   
            order by InvoiceDate
			]]>
    </select>

    <select id="has_rows_before" resultClass="bool" parameterClass="InvoiceXJ">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.InvoiceXJ
				where InvoiceDate < #InvoiceDate#
                 and invoicestatus<>2			                   
				) then 1 else 0 end
			]]>
    </select>

    <select id="has_rows_after" resultClass="bool" parameterClass="InvoiceXJ">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.InvoiceXJ
				where InvoiceDate > #InvoiceDate#
                 and invoicestatus<>2 			          
         
				) then 1 else 0 end
			]]>
    </select>
    <!-- select by primary key -->
    <select id="select_by_primary_key" resultMap="InvoiceXJResult" parameterClass="InvoiceXJ">
      <![CDATA[SELECT
				[InvoiceId],
				[Employee0Id],
				[CustomerId],
				[Employee1Id],
				[Employee2Id],
				[Employee3Id],
				[InvoiceLRTime],
				[InvoiceGZTime],
				[InvoiceZFTime],
				[InvoiceZFCause],
				[InvoiceDate],
				[InvoiceAbstract],
				[InvoiceNote],
				[InvoiceStatus],
				[InsertTime],
				[UpdateTime],
				[InvoiceTotal],
				[InvoiceYxrq],
				[InvoiceTaxrate],
				[InvoiceTax],
				[ProductType],
				[Package],
				[PackagePrice],
				[PackageUnit],
				[CompanyId],
				[AuditState],
				[AuditEmpId],
        [ProductId],
        [InvoiceBJTotal],
        [InvoiceProcessTotal],
        [InvoiceBJProcessTotal],
        [InvoicePackTotal],
        [InvoiceBJPackTotal],
        [InvoiceProductTotal],
        [InvoiceBJProductTotal],
        [ProductIdPackage],
        [GuanXiaoPro],
        [GuanXiaoPack],
        [GuanXiaoProc],
        [ProductModel],
        [IsBaoJiaOver],
        [HandbookId],
        [HandbookProductId]
			FROM
				[dbo].[InvoiceXJ]
			WHERE
				[InvoiceId] = #InvoiceId#
                 and invoicestatus<>2 			          
         		]]>
    </select>

    <!-- delete -->
    <delete id="delete" parameterClass="string">
      <![CDATA[                
                DELETE FROM [dbo].[InvoiceXJ]
			WHERE            
				[InvoiceId] = #InvoiceId#
                    		]]>
    </delete>

    <!-- select all -->
    <select id="select_all" resultMap="InvoiceXJResult" >
      <![CDATA[SELECT *
			FROM 
				[dbo].[InvoiceXJ]
                 where  invoicestatus<>2 			                   
  ORDER BY InsertTime DESC  
			]]>
    </select>

    <select id="count_all" resultClass="int">
      <![CDATA[	select count(*)
			from 
				[dbo].[InvoiceXJ]
                 where invoicestatus<>2 			          
         ]]>
    </select>

    <select id="select_all_with_paging" resultMap="InvoiceXJResult">
      <![CDATA[    SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[InvoiceXJ]
                     where  invoicestatus<>2 			          
         
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
             ]]>
    </select>

    <!-- insert -->
    <insert id="insert" parameterClass="InvoiceXJ">
      <![CDATA[ INSERT INTO [dbo].[InvoiceXJ] 
			(
				[InvoiceId],
				[Employee0Id],
				[CustomerId],
				[Employee1Id],
				[Employee2Id],
				[Employee3Id],
				[InvoiceLRTime],
				[InvoiceGZTime],
				[InvoiceZFTime],
				[InvoiceZFCause],
				[InvoiceDate],
				[InvoiceAbstract],
				[InvoiceNote],
				[InvoiceStatus],
				[InsertTime],
				[UpdateTime],
				[InvoiceTotal],
				[InvoiceYxrq],
				[InvoiceTaxrate],
				[InvoiceTax],
				[ProductType],
				[Package],
				[PackagePrice],
				[PackageUnit],
				[CompanyId],
				[AuditState],
				[AuditEmpId],
        [ProductId],
        [InvoiceBJTotal],
        [InvoiceProcessTotal],
        [InvoiceBJProcessTotal],
        [InvoicePackTotal],
        [InvoiceBJPackTotal],
        [InvoiceProductTotal],
        [InvoiceBJProductTotal],
        [ProductIdPackage],
        [GuanXiaoPro],
        [GuanXiaoPack],
        [GuanXiaoProc],
        [ProductModel],
        [IsBaoJiaOver],
        [HandbookId],
        [HandbookProductId]
			) 
			VALUES 
			(
				#InvoiceId#,
				#Employee0Id#,
				#CustomerId#,
				#Employee1Id#,
				#Employee2Id#,
				#Employee3Id#,
				#InvoiceLRTime#,
				#InvoiceGZTime#,
				#InvoiceZFTime#,
				#InvoiceZFCause#,
				#InvoiceDate#,
				#InvoiceAbstract#,
				#InvoiceNote#,
				#InvoiceStatus#,
				#InsertTime#,
				#UpdateTime#,
				#InvoiceTotal#,
				#InvoiceYxrq#,
				#InvoiceTaxrate#,
				#InvoiceTax#,
				#ProductType#,
				#Package#,
				#PackagePrice#,
				#PackageUnit#,
				#CompanyId#,
				#AuditState#,
				#AuditEmpId#,
        #ProductId#,
        #InvoiceBJTotal#,
        #InvoiceProcessTotal#,
        #InvoiceBJProcessTotal#,
        #InvoicePackTotal#,
        #InvoiceBJPackTotal#,
        #InvoiceProductTotal#,
        #InvoiceBJProductTotal#,
        #ProductIdPackage#,
        #GuanXiaoPro#,
        #GuanXiaoPack#,
        #GuanXiaoProc#,
        #ProductModel#,
        #IsBaoJiaOver#,
        #HandbookId#,
        #HandbookProductId#
			)
             ]]>
    </insert>

    <!-- update -->
    <update id="update" parameterClass="InvoiceXJ">
      <![CDATA[ 	UPDATE [InvoiceXJ] SET
				[Employee0Id] = #Employee0Id#,
				[CustomerId] = #CustomerId#,
				[Employee1Id] = #Employee1Id#,
				[Employee2Id] = #Employee2Id#,
				[Employee3Id] = #Employee3Id#,
				[InvoiceLRTime] = #InvoiceLRTime#,
				[InvoiceGZTime] = #InvoiceGZTime#,
				[InvoiceZFTime] = #InvoiceZFTime#,
				[InvoiceZFCause] = #InvoiceZFCause#,
				[InvoiceDate] = #InvoiceDate#,
				[InvoiceAbstract] = #InvoiceAbstract#,
				[InvoiceNote] = #InvoiceNote#,
				[InvoiceStatus] = #InvoiceStatus#,
				[InsertTime] = #InsertTime#,
				[UpdateTime] = #UpdateTime#,
				[InvoiceTotal] = #InvoiceTotal#,
				[InvoiceYxrq] = #InvoiceYxrq#,
				[InvoiceTaxrate] = #InvoiceTaxrate#,
				[InvoiceTax] = #InvoiceTax#,
				[ProductType] = #ProductType#,
				[Package] = #Package#,
				[PackagePrice] = #PackagePrice#,
				[PackageUnit] = #PackageUnit#,
				[CompanyId] = #CompanyId#,
				[AuditState] = #AuditState#,
				[AuditEmpId] = #AuditEmpId#,
        [ProductId] = #ProductId#,
        [InvoiceBJTotal] = #InvoiceBJTotal#,
        [InvoiceProcessTotal] = #InvoiceProcessTotal#,
        [InvoiceBJProcessTotal] = #InvoiceBJProcessTotal#,
        [InvoicePackTotal] = #InvoicePackTotal#,
        [InvoiceBJPackTotal] = #InvoiceBJPackTotal#,
        [InvoiceProductTotal] = #InvoiceProductTotal#,
        [InvoiceBJProductTotal] = #InvoiceBJProductTotal#,
        [ProductIdPackage] = #ProductIdPackage#,
        [GuanXiaoPro] = #GuanXiaoPro#,
        [GuanXiaoPack] = #GuanXiaoPack#,
        [GuanXiaoProc] = #GuanXiaoProc#,
        [ProductModel]=#ProductModel#,
        [IsBaoJiaOver] = #IsBaoJiaOver#,
        [HandbookId]=#HandbookId#,
        [HandbookProductId]=#HandbookProductId#
			WHERE
				[InvoiceId] = #InvoiceId#
                    ]]>
    </update>
    <select id="existsPrimary" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select *
				from [dbo].[InvoiceXJ]
				where  InvoiceId = #value#                 			                   
				)
				then 1 else 0 end
			]]>
    </select>

  </statements>
</sqlMap>

