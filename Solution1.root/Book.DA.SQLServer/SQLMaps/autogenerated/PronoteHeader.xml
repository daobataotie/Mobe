<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="PronoteHeader" xmlns="http://ibatis.apache.org/mapping"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="PronoteHeader" type="Book.Model.PronoteHeader, Book.Model" />
  </alias>
  <resultMaps>
    <resultMap id="PronoteHeaderResult" class="PronoteHeader">
      <result property="PronoteHeaderID" column="PronoteHeaderID" />
      <result property="Employee0Id" column="Employee0Id" />
      <result property="InsertTime" column="InsertTime" />
      <result property="UpdateTime" column="UpdateTime" />
      <result property="PronoteDate" column="PronoteDate" />
      <result property="Pronotedesc" column="Pronotedesc" />
      <result property="Checkeds" column="Checkeds" />
      <result property="WorkHouseId" column="WorkHouseId" />
      <result property="MRSHeaderId" column="MRSHeaderId" />
      <result property="DetailsSum" column="DetailsSum" />
      <result property="InDepotQuantity" column="InDepotQuantity" />
      <result property="ProductId" column="ProductId" />
      <result property="ProductUnit" column="ProductUnit" />
      <result property="Employee1Id" column="Employee1Id" />
      <result property="Employee2Id" column="Employee2Id" />
      <result property="IsBuildMaterial" column="IsBuildMaterial" />
      <result property="InvoiceXOId" column="InvoiceXOId" />
      <result property="InvoiceStatus" column="InvoiceStatus" />
      <result property="MRSdetailsId" column="MRSdetailsId" />
      <result property="InvoiceXODetailQuantity" column="InvoiceXODetailQuantity" />
      <result property="InvoiceCusId" column="InvoiceCusId" />
      <result property="AuditState" column="AuditState" />
      <result property="AuditEmpId" column="AuditEmpId" />
      <result property="IsClose" column="IsClose" />
      <result property="JieAnDate" column="JieAnDate" />
      <result property="HandbookId" column="HandbookId"/>
      <result property="HandbookProductId" column="HandbookProductId"/>
      <result property="Employee1" column="Employee1Id" lazyLoad="false" select="Employee.select_SimpleEmployee" />
      <result property="Employee2" column="Employee2Id" lazyLoad="false" select="Employee.select_SimpleEmployee" />
      <result property="AuditEmp" column="AuditEmpId" lazyLoad="false" select="Employee.select_SimpleEmployee" />
      <result property="Product" column="ProductId" lazyLoad="false" select="Product.select_SimpleProduct_ZCMai" />
      <result property="Employee0" column="Employee0Id" lazyLoad="false" select="Employee.select_SimpleEmployee" />
      <result property="WorkHouse" column="WorkHouseId" lazyLoad="false" select="WorkHouse.select_by_primary_key" />
    </resultMap>
  </resultMaps>

  <statements>
    <select id="has_rows_of" resultClass="bool">
      <![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[PronoteHeader]
				WHERE
				[PronoteHeaderID] = #PronoteHeaderID#
                         and invoicestatus<>2 			                   
				) then 1 else 0 end
                ]]>
    </select>
    <select id="has_rows" resultClass="bool">
      <![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[PronoteHeader]
 				where invoicestatus<>2 				
				) then 1 else 0 end
                ]]>
    </select>
    <select id="get_first" resultMap="PronoteHeaderResult">
      <![CDATA[
			select top 1 *
			from dbo.PronoteHeader
			where invoicestatus<>2 
			order by InsertTime 
			]]>
    </select>
    <select id="get_last" resultMap="PronoteHeaderResult">
      <![CDATA[
			select top 1 *
			from dbo.PronoteHeader
			where invoicestatus<>2			
            order by InsertTime desc
			]]>

    </select>
    <select id="get_prev" resultMap="PronoteHeaderResult" parameterClass="PronoteHeader">
      <![CDATA[
			select top 1 *
			from dbo.PronoteHeader
			where InsertTime < #InsertTime#	
             and invoicestatus<>2 			          
            order by InsertTime desc
			]]>
    </select>
    <select id="get_next" resultMap="PronoteHeaderResult" parameterClass="PronoteHeader">
      <![CDATA[
			select top 1 *
			from dbo.PronoteHeader
			where InsertTime > #InsertTime#	
                 and invoicestatus<>2			                   
            order by InsertTime
			]]>
    </select>

    <select id="has_rows_before" resultClass="bool" parameterClass="PronoteHeader">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.PronoteHeader
				where InsertTime < #InsertTime#
                 and invoicestatus<>2			                   
				) then 1 else 0 end
			]]>
    </select>

    <select id="has_rows_after" resultClass="bool" parameterClass="PronoteHeader">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.PronoteHeader
				where InsertTime > #InsertTime#
                 and invoicestatus<>2 			          
         
				) then 1 else 0 end
			]]>
    </select>
    <!-- select by primary key -->
    <select id="select_by_primary_key" resultMap="PronoteHeaderResult" parameterClass="PronoteHeader">
      <![CDATA[
      SELECT
				[PronoteHeaderID],
				[Employee0Id],
				[InsertTime],
				[UpdateTime],
				[PronoteDate],
				[Pronotedesc],
				[Checkeds],
				[WorkHouseId],
				[MRSHeaderId],
				[DetailsSum],
				[InDepotQuantity],
				[ProductId],
				[ProductUnit],
				[Employee1Id],
				[Employee2Id],
				[IsBuildMaterial],
				[InvoiceXOId],
				[InvoiceStatus],
				[MRSdetailsId],
				[InvoiceXODetailQuantity],
				[InvoiceCusId],
				[AuditState],
				[AuditEmpId],
				[IsClose],
        [JieAnDate],
        [HandbookId],
        [HandbookProductId]
			FROM
				[dbo].[PronoteHeader]
			WHERE
			  [PronoteHeaderID] = #PronoteHeaderID#
        and invoicestatus<>2
         		]]>
    </select>

    <!-- delete -->
    <delete id="delete" parameterClass="string">
      <![CDATA[                
      DELETE FROM [dbo].[PronoteHeader]
			WHERE            
			[PronoteHeaderID] = #PronoteHeaderID#
    	]]>
    </delete>

    <!-- select all -->
    <select id="select_all" resultMap="PronoteHeaderResult" >
      <![CDATA[
      SELECT *
			FROM 
				[dbo].[PronoteHeader]
                 where  invoicestatus<>2 			                   
      ORDER BY InsertTime DESC
			]]>
    </select>

    <select id="count_all" resultClass="int">
      <![CDATA[	select count(*)
			from 
				[dbo].[PronoteHeader]
                 where invoicestatus<>2 			          
         ]]>
    </select>

    <select id="select_all_with_paging" resultMap="PronoteHeaderResult">
      <![CDATA[    
      SELECT *
      FROM
      (
          SELECT *, row_number() over(order by $OrderStatement$) rownumber
          FROM    
              [dbo].[PronoteHeader]
               where  invoicestatus<>2 			          
   
      ) t
      WHERE t.rownumber between #Row1# and #Row2#
             ]]>
    </select>

    <!-- insert -->
    <insert id="insert" parameterClass="PronoteHeader">
      <![CDATA[ 
      INSERT INTO [dbo].[PronoteHeader] 
			(
				[PronoteHeaderID],
				[Employee0Id],
				[InsertTime],
				[UpdateTime],
				[PronoteDate],
				[Pronotedesc],
				[Checkeds],
				[WorkHouseId],
				[MRSHeaderId],
				[DetailsSum],
				[InDepotQuantity],
				[ProductId],
				[ProductUnit],
				[Employee1Id],
				[Employee2Id],
				[IsBuildMaterial],
				[InvoiceXOId],
				[InvoiceStatus],
				[MRSdetailsId],
				[InvoiceXODetailQuantity],
				[InvoiceCusId],
				[AuditState],
				[AuditEmpId],
				[IsClose],
        [JieAnDate],
        [HandbookId],
        [HandbookProductId]
			) 
			VALUES 
			(
				#PronoteHeaderID#,
				#Employee0Id#,
				#InsertTime#,
				#UpdateTime#,
				#PronoteDate#,
				#Pronotedesc#,
				#Checkeds#,
				#WorkHouseId#,
				#MRSHeaderId#,
				#DetailsSum#,
				#InDepotQuantity#,
				#ProductId#,
				#ProductUnit#,
				#Employee1Id#,
				#Employee2Id#,
				#IsBuildMaterial#,
				#InvoiceXOId#,
				#InvoiceStatus#,
				#MRSdetailsId#,
				#InvoiceXODetailQuantity#,
				#InvoiceCusId#,
				#AuditState#,
				#AuditEmpId#,
				#IsClose#,
        #JieAnDate#,
        #HandbookId#,
        #HandbookProductId#
			)
      ]]>
    </insert>

    <!-- update -->
    <update id="update" parameterClass="PronoteHeader">
      <![CDATA[ 	
      UPDATE [PronoteHeader] SET
				[Employee0Id] = #Employee0Id#,
				[InsertTime] = #InsertTime#,
				[UpdateTime] = #UpdateTime#,
				[PronoteDate] = #PronoteDate#,
				[Pronotedesc] = #Pronotedesc#,
				[Checkeds] = #Checkeds#,
				[WorkHouseId] = #WorkHouseId#,
				[MRSHeaderId] = #MRSHeaderId#,
				[DetailsSum] = #DetailsSum#,
				[InDepotQuantity] = #InDepotQuantity#,
				[ProductId] = #ProductId#,
				[ProductUnit] = #ProductUnit#,
				[Employee1Id] = #Employee1Id#,
				[Employee2Id] = #Employee2Id#,
				[IsBuildMaterial] = #IsBuildMaterial#,
				[InvoiceXOId] = #InvoiceXOId#,
				[InvoiceStatus] = #InvoiceStatus#,
				[MRSdetailsId] = #MRSdetailsId#,
				[InvoiceXODetailQuantity] = #InvoiceXODetailQuantity#,
				[InvoiceCusId] = #InvoiceCusId#,
				[AuditState] = #AuditState#,
				[AuditEmpId] = #AuditEmpId#,
				[IsClose]= #IsClose#,
        [JieAnDate] = #JieAnDate#,
        [HandbookId]=#HandbookId#,
        [HandbookProductId]=#HandbookProductId#
			WHERE
				[PronoteHeaderID] = #PronoteHeaderID#
      ]]>
    </update>
    <select id="existsPrimary" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select *
				from [dbo].[PronoteHeader]
				where  PronoteHeaderID = #value#                 			                   
				)
				then 1 else 0 end
			]]>
    </select>
  </statements>
</sqlMap>

