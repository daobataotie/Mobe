<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="ProductMould" xmlns="http://ibatis.apache.org/mapping"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="ProductMould" type="Book.Model.ProductMould, Book.Model" />
  </alias>
  <resultMaps>
    <resultMap id="ProductMouldResult" class="ProductMould">
      <result property="MouldId" column="MouldId" />
      <result property="ProductId" column="ProductId" />
      <result property="SupplierId" column="SupplierId" />
      <result property="MouldCategoryId" column="MouldCategoryId" />
      <result property="InsertTime" column="InsertTime" />
      <result property="UpdateTime" column="UpdateTime" />
      <result property="Id" column="Id" />
      <result property="MouldName" column="MouldName" />
      <result property="MouldDescription" column="MouldDescription" />
      <result property="MouldBarCode" column="MouldBarCode" />
      <result property="MachineKind" column="MachineKind" />
      <result property="MouldSpecification" column="MouldSpecification" />
      <result property="ProductSpecification" column="ProductSpecification" />
      <result property="MouldMaterial" column="MouldMaterial" />
      <result property="StartTime" column="StartTime" />
      <result property="FirstTime" column="FirstTime" />
      <result property="OkTime" column="OkTime" />
      <result property="PartName" column="PartName" />
      <result property="PartWeight" column="PartWeight" />
      <result property="MouldPrice" column="MouldPrice" />
      <result property="ProductMaterialId" column="ProductMaterialId" />
      <result property="CodeIsAotu" column="CodeIsAotu" />
      <result property="EmployeeId" column="EmployeeId" />
      <result property="Employee0Id" column="Employee0Id" />
      <result property="DoubleCount" column="DoubleCount" />
      <result property="IsChecked" column="IsChecked" />
      <result property ="EachMouldDesc" column="EachMouldDesc"/>
      <result property="MouldCategory" column="MouldCategoryId" lazyLoad="false" select="MouldCategory.select_by_primary_key" />
      <result property="ProductMaterial" column="ProductMaterialId" lazyLoad="false" select="ProductMaterial.select_by_primary_key" />
      <result property="Supplier" column="SupplierId" lazyLoad="false" select="Supplier.select_by_primary_key" />
      <result property="Employee" column="EmployeeId" lazyLoad="false" select="Employee.select_SimpleEmployee" />
      <result property="Employee0" column="Employee0Id" lazyLoad="false" select="Employee.select_SimpleEmployee" />
    </resultMap>
  </resultMaps>

  <statements>
    <select id="has_rows_of" resultClass="bool">
      select case when exists(
      SELECT
      *
      FROM
      [dbo].[ProductMould]
      WHERE
      [MouldId] = #MouldId#
      ) then 1 else 0 end
    </select>
    <select id="has_rows" resultClass="bool">
      select case when exists(
      SELECT
      *
      FROM
      [dbo].[ProductMould]

      ) then 1 else 0 end
    </select>
    <select id="get_first" resultMap="ProductMouldResult">
      <![CDATA[
			select top 1 *
			from dbo.ProductMould 
			order by InsertTime
			]]>
    </select>
    <select id="get_last" resultMap="ProductMouldResult">
      <![CDATA[
			select top 1 *
			from dbo.ProductMould 			
			order by InsertTime desc
			]]>
    </select>
    <select id="get_prev" resultMap="ProductMouldResult" parameterClass="ProductMould">
      <![CDATA[
			select top 1 *
			from dbo.ProductMould
			where InsertTime < #InsertTime#
			order by InsertTime desc
			]]>
    </select>
    <select id="get_next" resultMap="ProductMouldResult" parameterClass="ProductMould">
      <![CDATA[
			select top 1 *
			from dbo.ProductMould
			where InsertTime > #InsertTime#
			order by InsertTime
			]]>
    </select>
    <select id="has_rows_before" resultClass="bool" parameterClass="ProductMould">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.ProductMould
				where InsertTime < #InsertTime#
				) 
				then 1 else 0 end
			]]>
    </select>

    <select id="has_rows_after" resultClass="bool" parameterClass="ProductMould">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.ProductMould
				where InsertTime > #InsertTime#
				) then 1 else 0 end
			]]>
    </select>
    <!-- select by primary key -->
    <select id="select_by_primary_key" resultMap="ProductMouldResult" parameterClass="ProductMould">
      SELECT
      [MouldId],
      [ProductId],
      [SupplierId],
      [MouldCategoryId],
      [InsertTime],
      [UpdateTime],
      [Id],
      [MouldName],
      [MouldDescription],
      [MouldBarCode],
      [MachineKind],
      [MouldSpecification],
      [ProductSpecification],
      [MouldMaterial],
      [StartTime],
      [FirstTime],
      [OkTime],
      [PartName],
      [PartWeight],
      [MouldPrice],
      [ProductMaterialId],
      [CodeIsAotu],
      [EmployeeId],
      [Employee0Id],
      [DoubleCount],
      [IsChecked],
      [EachMouldDesc]
      FROM
      [dbo].[ProductMould]
      WHERE
      [MouldId] = #MouldId#
    </select>

    <!-- delete -->
    <delete id="delete" parameterClass="string">
      DELETE FROM [dbo].[ProductMould]
      WHERE
      [MouldId] = #MouldId#
    </delete>

    <!-- select all -->
    <select id="select_all" resultMap="ProductMouldResult" >
      SELECT *
      FROM
      [dbo].[ProductMould]


      ORDER BY Id ASC


    </select>

    <select id="count_all" resultClass="int">
      select count(*)
      from
      [dbo].[ProductMould]
    </select>

    <select id="select_all_with_paging" resultMap="ProductMouldResult">
      SELECT *
      FROM
      (
      SELECT *, row_number() over(order by $OrderStatement$) rownumber
      FROM
      [dbo].[ProductMould]
      ) t
      WHERE t.rownumber between #Row1# and #Row2#
    </select>

    <!-- insert -->
    <insert id="insert" parameterClass="ProductMould">
      INSERT INTO [dbo].[ProductMould]
      (
      [MouldId],
      [ProductId],
      [SupplierId],
      [MouldCategoryId],
      [InsertTime],
      [UpdateTime],
      [Id],
      [MouldName],
      [MouldDescription],
      [MouldBarCode],
      [MachineKind],
      [MouldSpecification],
      [ProductSpecification],
      [MouldMaterial],
      [StartTime],
      [FirstTime],
      [OkTime],
      [PartName],
      [PartWeight],
      [MouldPrice],
      [ProductMaterialId],
      [CodeIsAotu],
      [EmployeeId],
      [Employee0Id],
      [DoubleCount],
      [IsChecked],
      [EachMouldDesc]
      )
      VALUES
      (
      #MouldId#,
      #ProductId#,
      #SupplierId#,
      #MouldCategoryId#,
      #InsertTime#,
      #UpdateTime#,
      #Id#,
      #MouldName#,
      #MouldDescription#,
      #MouldBarCode#,
      #MachineKind#,
      #MouldSpecification#,
      #ProductSpecification#,
      #MouldMaterial#,
      #StartTime#,
      #FirstTime#,
      #OkTime#,
      #PartName#,
      #PartWeight#,
      #MouldPrice#,
      #ProductMaterialId#,
      #CodeIsAotu#,
      #EmployeeId#,
      #Employee0Id#,
      #DoubleCount#,
      #IsChecked#,
      #EachMouldDesc#
      )
    </insert>

    <!-- update -->
    <update id="update" parameterClass="ProductMould">
      UPDATE [ProductMould] SET
      [ProductId] = #ProductId#,
      [SupplierId] = #SupplierId#,
      [MouldCategoryId] = #MouldCategoryId#,
      [InsertTime] = #InsertTime#,
      [UpdateTime] = #UpdateTime#,
      [Id] = #Id#,
      [MouldName] = #MouldName#,
      [MouldDescription] = #MouldDescription#,
      [MouldBarCode] = #MouldBarCode#,
      [MachineKind] = #MachineKind#,
      [MouldSpecification] = #MouldSpecification#,
      [ProductSpecification] = #ProductSpecification#,
      [MouldMaterial] = #MouldMaterial#,
      [StartTime] = #StartTime#,
      [FirstTime] = #FirstTime#,
      [OkTime] = #OkTime#,
      [PartName] = #PartName#,
      [PartWeight] = #PartWeight#,
      [MouldPrice] = #MouldPrice#,
      [ProductMaterialId] = #ProductMaterialId#,
      [CodeIsAotu] = #CodeIsAotu#,
      [EmployeeId] = #EmployeeId#,
      [Employee0Id] = #Employee0Id#,
      [DoubleCount] = #DoubleCount#,
      [IsChecked] = #IsChecked#,
      [EachMouldDesc]=#EachMouldDesc#
      WHERE
      [MouldId] = #MouldId#
    </update>
    <select id="existsPrimary" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select *
				from [dbo].[ProductMould]
				where  MouldId = #value# 
				)
				then 1 else 0 end
			]]>
    </select>
    <select id="exists" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.ProductMould
				where Id = #value#
				) then 1 else 0 end
			]]>
    </select>

    <select id="get_by_id" resultMap="ProductMouldResult" parameterClass="string">
      <![CDATA[
			SELECT top 1
				*
			FROM
				[dbo].[ProductMould]
			WHERE
				Id = #value#
			]]>
    </select>

    <select id="existsexcept" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select *
				from dbo.ProductMould
				where Id = #newId# and Id <> #oldId#
				)
				then 1 else 0 end
			]]>
    </select>


  </statements>
</sqlMap>

