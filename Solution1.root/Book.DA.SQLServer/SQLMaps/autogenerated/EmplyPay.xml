<?xml version="1.0" encoding="utf-8" ?> 
<sqlMap namespace="EmplyPay" xmlns="http://ibatis.apache.org/mapping" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="EmplyPay" type="Book.Model.EmplyPay, Book.Model" />
    </alias>
    <resultMaps>                                    
        <resultMap id="EmplyPayResult" class="EmplyPay">
			<result property="EmplyPayId" column="EmplyPayId" />
			<result property="EmployeeId" column="EmployeeId" />
			<result property="Employee0Id" column="Employee0Id" />
			<result property="InsertTime" column="InsertTime" />
			<result property="UpdateTime" column="UpdateTime" />
			<result property="PayDate" column="PayDate" />
			<result property="EdailyPay" column="EdailyPay" />
			<result property="EmonthlyPay" column="EmonthlyPay" />
			<result property="EdutyPay" column="EdutyPay" />
			<result property="EpostPay" column="EpostPay" />
			<result property="EfeldPay" column="EfeldPay" />
			<result property="Einsurance" column="Einsurance" />
			<result property="Eoverpay" column="Eoverpay" />
			<result property="Eleavepay" column="Eleavepay" />
			<result property="EotherPay" column="EotherPay" />
			<result property="Etax" column="Etax" />
		<result property="Employee0" column="Employee0Id" lazyLoad="false" select="Employee.select_SimpleEmployee" />		<result property="Employee" column="EmployeeId" lazyLoad="false" select="Employee.select_SimpleEmployee" />
        </resultMap>
    </resultMaps>
		
    <statements>
		<select id="has_rows_of" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[EmplyPay]
				WHERE
				[EmplyPayId] = #EmplyPayId#
				) then 1 else 0 end
		</select>
		<select id="has_rows" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[EmplyPay]
 								
				) then 1 else 0 end
		</select>
		<select id="get_first" resultMap="EmplyPayResult">
			<![CDATA[
			select top 1 *
			from dbo.EmplyPay 
			order by InsertTime
			]]>
		</select>
		<select id="get_last" resultMap="EmplyPayResult">
			<![CDATA[
			select top 1 *
			from dbo.EmplyPay 			
			order by InsertTime desc
			]]>
		</select>
		<select id="get_prev" resultMap="EmplyPayResult" parameterClass="EmplyPay">
			<![CDATA[
			select top 1 *
			from dbo.EmplyPay
			where InsertTime < #InsertTime#
			order by InsertTime desc
			]]>
		</select>
		<select id="get_next" resultMap="EmplyPayResult" parameterClass="EmplyPay">
			<![CDATA[
			select top 1 *
			from dbo.EmplyPay
			where InsertTime > #InsertTime#
			order by InsertTime
			]]>
		</select>
		<select id="has_rows_before" resultClass="bool" parameterClass="EmplyPay">
			<![CDATA[
			select case when exists(
				select * 
				from dbo.EmplyPay
				where InsertTime < #InsertTime#
				) 
				then 1 else 0 end
			]]>
		</select>
		
		<select id="has_rows_after" resultClass="bool" parameterClass="EmplyPay">
			<![CDATA[
			select case when exists(
				select * 
				from dbo.EmplyPay
				where InsertTime > #InsertTime#
				) then 1 else 0 end
			]]>
		</select>
		<!-- select by primary key -->
        <select id="select_by_primary_key" resultMap="EmplyPayResult" parameterClass="EmplyPay">
			SELECT
				[EmplyPayId],
				[EmployeeId],
				[Employee0Id],
				[InsertTime],
				[UpdateTime],
				[PayDate],
				[EdailyPay],
				[EmonthlyPay],
				[EdutyPay],
				[EpostPay],
				[EfeldPay],
				[Einsurance],
				[Eoverpay],
				[Eleavepay],
				[EotherPay],
				[Etax]
			FROM
				[dbo].[EmplyPay]
			WHERE
				[EmplyPayId] = #EmplyPayId#
        </select>
		
		<!-- delete -->
        <delete id="delete" parameterClass="string">
			DELETE FROM [dbo].[EmplyPay]
			WHERE
				[EmplyPayId] = #EmplyPayId#
        </delete>

		<!-- select all -->
        <select id="select_all" resultMap="EmplyPayResult" >
			SELECT *
			FROM 
				[dbo].[EmplyPay]
			ORDER BY EmplyPayId ASC
        </select>
        
		<select id="count_all" resultClass="int">
			select count(*)
			from 
				[dbo].[EmplyPay]
		</select>
		
		<select id="select_all_with_paging" resultMap="EmplyPayResult">
            SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[EmplyPay]
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
		</select>
		
		<!-- insert -->
        <insert id="insert" parameterClass="EmplyPay">
			INSERT INTO [dbo].[EmplyPay] 
			(
				[EmplyPayId],
				[EmployeeId],
				[Employee0Id],
				[InsertTime],
				[UpdateTime],
				[PayDate],
				[EdailyPay],
				[EmonthlyPay],
				[EdutyPay],
				[EpostPay],
				[EfeldPay],
				[Einsurance],
				[Eoverpay],
				[Eleavepay],
				[EotherPay],
				[Etax]
			) 
			VALUES 
			(
				#EmplyPayId#,
				#EmployeeId#,
				#Employee0Id#,
				#InsertTime#,
				#UpdateTime#,
				#PayDate#,
				#EdailyPay#,
				#EmonthlyPay#,
				#EdutyPay#,
				#EpostPay#,
				#EfeldPay#,
				#Einsurance#,
				#Eoverpay#,
				#Eleavepay#,
				#EotherPay#,
				#Etax#
			)
        </insert>
		
		<!-- update -->
        <update id="update" parameterClass="EmplyPay">
			UPDATE [EmplyPay] SET
				[EmployeeId] = #EmployeeId#,
				[Employee0Id] = #Employee0Id#,
				[InsertTime] = #InsertTime#,
				[UpdateTime] = #UpdateTime#,
				[PayDate] = #PayDate#,
				[EdailyPay] = #EdailyPay#,
				[EmonthlyPay] = #EmonthlyPay#,
				[EdutyPay] = #EdutyPay#,
				[EpostPay] = #EpostPay#,
				[EfeldPay] = #EfeldPay#,
				[Einsurance] = #Einsurance#,
				[Eoverpay] = #Eoverpay#,
				[Eleavepay] = #Eleavepay#,
				[EotherPay] = #EotherPay#,
				[Etax] = #Etax#
			WHERE
				[EmplyPayId] = #EmplyPayId#
        </update>
		
		
    </statements>
</sqlMap>

