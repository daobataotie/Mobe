<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="AtSummonDetail" xmlns="http://ibatis.apache.org/mapping"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="AtSummonDetail" type="Book.Model.AtSummonDetail, Book.Model" />
  </alias>
  <resultMaps>
    <resultMap id="AtSummonDetailResult" class="AtSummonDetail">
      <result property="SummonDetailId" column="SummonDetailId" />
      <result property="BillCode" column="BillCode" />
      <result property="SummonId" column="SummonId" />
      <result property="SummonCatetory" column="SummonCatetory" />
      <result property="Lending" column="Lending" />
      <result property="SubjectId" column="SubjectId" />
      <result property="AMoney" column="AMoney" />
      <result property="Summary" column="Summary" />
      <result property="DepartmentId" column="DepartmentId" />
      <result property="ProjectId" column="ProjectId" />
      <result property="OffsettingSummon" column="OffsettingSummon" />
      <result property="DebitMoney" column="DebitMoney" />
      <result property="CreditMoney" column="CreditMoney" />
      <result property="InsertTime" column="InsertTime" />
      <result property="UpdateTime" column="UpdateTime" />
      <result property="Id" column="Id" />
      <result property="Summon" column="SummonId" lazyLoad="false" select="AtSummon.select_by_primary_key" />
      <result property="Subject" column="SubjectId" lazyLoad="false" select="AtAccountSubject.select_by_primary_key" />
      <result property="Department" column="DepartmentId" lazyLoad="false" select="Department.select_by_primary_key" />
    </resultMap>
  </resultMaps>

  <statements>
    <select id="has_rows_of" resultClass="bool">
      select case when exists(
      SELECT
      *
      FROM
      [dbo].[AtSummonDetail]
      WHERE
      [SummonDetailId] = #SummonDetailId#
      ) then 1 else 0 end
    </select>
    <select id="has_rows" resultClass="bool">
      select case when exists(
      SELECT
      *
      FROM
      [dbo].[AtSummonDetail]

      ) then 1 else 0 end
    </select>
    <select id="get_first" resultMap="AtSummonDetailResult">
      <![CDATA[
			select top 1 *
			from dbo.AtSummonDetail 
			order by InsertTime
			]]>
    </select>
    <select id="get_last" resultMap="AtSummonDetailResult">
      <![CDATA[
			select top 1 *
			from dbo.AtSummonDetail 			
			order by InsertTime desc
			]]>
    </select>
    <select id="get_prev" resultMap="AtSummonDetailResult" parameterClass="AtSummonDetail">
      <![CDATA[
			select top 1 *
			from dbo.AtSummonDetail
			where InsertTime < #InsertTime#
			order by InsertTime desc
			]]>
    </select>
    <select id="get_next" resultMap="AtSummonDetailResult" parameterClass="AtSummonDetail">
      <![CDATA[
			select top 1 *
			from dbo.AtSummonDetail
			where InsertTime > #InsertTime#
			order by InsertTime
			]]>
    </select>
    <select id="has_rows_before" resultClass="bool" parameterClass="AtSummonDetail">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.AtSummonDetail
				where InsertTime < #InsertTime#
				) 
				then 1 else 0 end
			]]>
    </select>

    <select id="has_rows_after" resultClass="bool" parameterClass="AtSummonDetail">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.AtSummonDetail
				where InsertTime > #InsertTime#
				) then 1 else 0 end
			]]>
    </select>
    <!-- select by primary key -->
    <select id="select_by_primary_key" resultMap="AtSummonDetailResult" parameterClass="AtSummonDetail">
      SELECT
      [SummonDetailId],
      [BillCode],
      [SummonId],
      [SummonCatetory],
      [Lending],
      [SubjectId],
      [AMoney],
      [Summary],
      [DepartmentId],
      [ProjectId],
      [OffsettingSummon],
      [DebitMoney],
      [CreditMoney],
      [InsertTime],
      [UpdateTime],
      [Id]
      FROM
      [dbo].[AtSummonDetail]
      WHERE
      [SummonDetailId] = #SummonDetailId#
    </select>

    <!-- delete -->
    <delete id="delete" parameterClass="string">
      DELETE FROM [dbo].[AtSummonDetail]
      WHERE
      [SummonDetailId] = #SummonDetailId#
    </delete>

    <!-- select all -->
    <select id="select_all" resultMap="AtSummonDetailResult" >
      SELECT *
      FROM
      [dbo].[AtSummonDetail]


      ORDER BY Id ASC


    </select>

    <select id="count_all" resultClass="int">
      select count(*)
      from
      [dbo].[AtSummonDetail]
    </select>

    <select id="select_all_with_paging" resultMap="AtSummonDetailResult">
      SELECT *
      FROM
      (
      SELECT *, row_number() over(order by $OrderStatement$) rownumber
      FROM
      [dbo].[AtSummonDetail]
      ) t
      WHERE t.rownumber between #Row1# and #Row2#
    </select>

    <!-- insert -->
    <insert id="insert" parameterClass="AtSummonDetail">
      INSERT INTO [dbo].[AtSummonDetail]
      (
      [SummonDetailId],
      [BillCode],
      [SummonId],
      [SummonCatetory],
      [Lending],
      [SubjectId],
      [AMoney],
      [Summary],
      [DepartmentId],
      [ProjectId],
      [OffsettingSummon],
      [DebitMoney],
      [CreditMoney],
      [InsertTime],
      [UpdateTime],
      [Id]
      )
      VALUES
      (
      #SummonDetailId#,
      #BillCode#,
      #SummonId#,
      #SummonCatetory#,
      #Lending#,
      #SubjectId#,
      #AMoney#,
      #Summary#,
      #DepartmentId#,
      #ProjectId#,
      #OffsettingSummon#,
      #DebitMoney#,
      #CreditMoney#,
      #InsertTime#,
      #UpdateTime#,
      #Id#
      )
    </insert>

    <!-- update -->
    <update id="update" parameterClass="AtSummonDetail">
      UPDATE [AtSummonDetail] SET
      [BillCode] = #BillCode#,
      [SummonId] = #SummonId#,
      [SummonCatetory] = #SummonCatetory#,
      [Lending] = #Lending#,
      [SubjectId] = #SubjectId#,
      [AMoney] = #AMoney#,
      [Summary] = #Summary#,
      [DepartmentId] = #DepartmentId#,
      [ProjectId] = #ProjectId#,
      [OffsettingSummon] = #OffsettingSummon#,
      [DebitMoney] = #DebitMoney#,
      [CreditMoney] = #CreditMoney#,
      [InsertTime] = #InsertTime#,
      [UpdateTime] = #UpdateTime#,
      [Id] = #Id#
      WHERE
      [SummonDetailId] = #SummonDetailId#
    </update>
    <select id="existsPrimary" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select *
				from [dbo].[AtSummonDetail]
				where  SummonDetailId = #value# 
				)
				then 1 else 0 end
			]]>
    </select>
    <select id="exists" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.AtSummonDetail
				where Id = #value#
				) then 1 else 0 end
			]]>
    </select>

    <select id="get_by_id" resultMap="AtSummonDetailResult" parameterClass="string">
      <![CDATA[
			SELECT top 1
				*
			FROM
				[dbo].[AtSummonDetail]
			WHERE
				Id = #value#
			]]>
    </select>

    <select id="existsexcept" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select *
				from dbo.AtSummonDetail
				where Id = #newId# and Id <> #oldId#
				)
				then 1 else 0 end
			]]>
    </select>


  </statements>
</sqlMap>

