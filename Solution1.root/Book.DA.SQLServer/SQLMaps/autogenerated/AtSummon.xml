<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="AtSummon" xmlns="http://ibatis.apache.org/mapping"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="AtSummon" type="Book.Model.AtSummon, Book.Model" />
  </alias>
  <resultMaps>
    <resultMap id="AtSummonResult" class="AtSummon">
      <result property="SummonId" column="SummonId" />
      <result property="BIllCode" column="BIllCode" />
      <result property="SummonDate" column="SummonDate" />
      <result property="SummonCategory" column="SummonCategory" />
      <result property="DepartmentId" column="DepartmentId" />
      <result property="TotalDebits" column="TotalDebits" />
      <result property="CreditTotal" column="CreditTotal" />
      <result property="InsertTime" column="InsertTime" />
      <result property="UpdateTime" column="UpdateTime" />
      <result property="Id" column="Id" />
      <result property="EmployeeDSId" column="EmployeeDSId" />
      <result property="AuditEmpId" column="AuditEmpId" />
      <result property="AuditState" column="AuditState" />
      <result property="AtSummonDesc" column="AtSummonDesc" />
      <result property="Department" column="DepartmentId" lazyLoad="false" select="Department.select_by_primary_key" />
      <result property="AuditEmp" column="AuditEmpId" lazyLoad="false" select="Employee.select_SimpleEmployee" />
      <result property="EmployeeDS" column="EmployeeDSId" lazyLoad="false" select="Employee.select_SimpleEmployee" />
    </resultMap>
  </resultMaps>

  <statements>
    <select id="has_rows_of" resultClass="bool">
      <![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[AtSummon]
				WHERE
				[SummonId] = #SummonId#
                        			                   
				) then 1 else 0 end
                ]]>
    </select>
    <select id="has_rows" resultClass="bool">
      <![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[AtSummon]
 								
				) then 1 else 0 end
                ]]>
    </select>
    <select id="get_first" resultMap="AtSummonResult">
      <![CDATA[
			select top 1 *
			from dbo.AtSummon
			order by SummonDate 
			]]>
    </select>
    <select id="get_last" resultMap="AtSummonResult">
      <![CDATA[
			select top 1 *
			from dbo.AtSummon
      order by SummonDate desc
			]]>

    </select>
    <select id="get_prev" resultMap="AtSummonResult" parameterClass="AtSummon">
      <![CDATA[
			select top 1 *
			from dbo.AtSummon
			where SummonDate < #SummonDate#	
      order by SummonDate desc
			]]>
    </select>
    <select id="get_next" resultMap="AtSummonResult" parameterClass="AtSummon">
      <![CDATA[
			select top 1 *
			from dbo.AtSummon
			where SummonDate > #SummonDate#	
      order by SummonDate
			]]>
    </select>

    <select id="has_rows_before" resultClass="bool" parameterClass="AtSummon">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.AtSummon
				where SummonDate < #SummonDate#              
				) then 1 else 0 end
			]]>
    </select>

    <select id="has_rows_after" resultClass="bool" parameterClass="AtSummon">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.AtSummon
				where SummonDate > #SummonDate#
				) then 1 else 0 end
			]]>
    </select>
    <!-- select by primary key -->
    <select id="select_by_primary_key" resultMap="AtSummonResult" parameterClass="AtSummon">
      <![CDATA[SELECT
				[SummonId],
				[BIllCode],
				[SummonDate],
				[SummonCategory],
				[DepartmentId],
				[TotalDebits],
				[CreditTotal],
				[InsertTime],
				[UpdateTime],
				[Id],
				[EmployeeDSId],
				[AuditEmpId],
				[AuditState],
				[AtSummonDesc]
			FROM
				[dbo].[AtSummon]
			WHERE
				[SummonId] = #SummonId#
                			          
         		]]>
    </select>

    <!-- delete -->
    <delete id="delete" parameterClass="string">
      <![CDATA[                
      DELETE FROM [dbo].[AtSummon]
			WHERE            
				[SummonId] = #SummonId#
      ]]>
    </delete>

    <!-- select all -->
    <select id="select_all" resultMap="AtSummonResult" >
      <![CDATA[SELECT *
			FROM 
				[dbo].[AtSummon]
			ORDER BY Id ASC			
			]]>
    </select>

    <select id="count_all" resultClass="int">
      <![CDATA[	
      select count(*)
			from 
				[dbo].[AtSummon]
     ]]>
    </select>

    <select id="select_all_with_paging" resultMap="AtSummonResult">
      <![CDATA[    SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[AtSummon]
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
             ]]>
    </select>

    <!-- insert -->
    <insert id="insert" parameterClass="AtSummon">
      <![CDATA[ INSERT INTO [dbo].[AtSummon] 
			(
				[SummonId],
				[BIllCode],
				[SummonDate],
				[SummonCategory],
				[DepartmentId],
				[TotalDebits],
				[CreditTotal],
				[InsertTime],
				[UpdateTime],
				[Id],
				[EmployeeDSId],
				[AuditEmpId],
				[AuditState],
				[AtSummonDesc]
			) 
			VALUES 
			(
				#SummonId#,
				#BIllCode#,
				#SummonDate#,
				#SummonCategory#,
				#DepartmentId#,
				#TotalDebits#,
				#CreditTotal#,
				#InsertTime#,
				#UpdateTime#,
				#Id#,
				#EmployeeDSId#,
				#AuditEmpId#,
				#AuditState#,
				#AtSummonDesc#
			)
             ]]>
    </insert>

    <!-- update -->
    <update id="update" parameterClass="AtSummon">
      <![CDATA[ 	UPDATE [AtSummon] SET
				[BIllCode] = #BIllCode#,
				[SummonDate] = #SummonDate#,
				[SummonCategory] = #SummonCategory#,
				[DepartmentId] = #DepartmentId#,
				[TotalDebits] = #TotalDebits#,
				[CreditTotal] = #CreditTotal#,
				[InsertTime] = #InsertTime#,
				[UpdateTime] = #UpdateTime#,
				[Id] = #Id#,
				[EmployeeDSId] = #EmployeeDSId#,
				[AuditEmpId] = #AuditEmpId#,
				[AuditState] = #AuditState#,
				[AtSummonDesc] = #AtSummonDesc#
			WHERE
				[SummonId] = #SummonId#
                    ]]>
    </update>
    <select id="existsPrimary" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select *
				from [dbo].[AtSummon]
				where  SummonId = #value#                 			                   
				)
				then 1 else 0 end
			]]>
    </select>
    <select id="exists" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.AtSummon
				where Id = #value#
				) then 1 else 0 end
			]]>
    </select>

    <select id="get_by_id" resultMap="AtSummonResult" parameterClass="string">
      <![CDATA[
			SELECT top 1
				*
			FROM
				[dbo].[AtSummon]
			WHERE
				Id = #value#
			]]>
    </select>

    <select id="existsexcept" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select *
				from dbo.AtSummon
				where Id = #newId# and Id <> #oldId#
				)
				then 1 else 0 end
			]]>
    </select>
  </statements>
</sqlMap>

