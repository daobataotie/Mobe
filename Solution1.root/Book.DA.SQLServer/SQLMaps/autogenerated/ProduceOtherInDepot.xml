<?xml version="1.0" encoding="utf-8" ?> 
<sqlMap namespace="ProduceOtherInDepot" xmlns="http://ibatis.apache.org/mapping" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="ProduceOtherInDepot" type="Book.Model.ProduceOtherInDepot, Book.Model" />
    </alias>
    <resultMaps>                                    
        <resultMap id="ProduceOtherInDepotResult" class="ProduceOtherInDepot">
			<result property="ProduceOtherInDepotId" column="ProduceOtherInDepotId" />
			<result property="Employee0Id" column="Employee0Id" />
			<result property="Employee1Id" column="Employee1Id" />
			<result property="InsertTime" column="InsertTime" />
			<result property="UpdateTime" column="UpdateTime" />
			<result property="ProduceOtherInDepotDate" column="ProduceOtherInDepotDate" />
			<result property="ProduceOtherInDepotDesc" column="ProduceOtherInDepotDesc" />
			<result property="WorkHouseId" column="WorkHouseId" />
			<result property="SupplierId" column="SupplierId" />
			<result property="ProduceOtherCompactId" column="ProduceOtherCompactId" />
			<result property="DepotId" column="DepotId" />
			<result property="InvoiceCusId" column="InvoiceCusId" />
			<result property="AuditState" column="AuditState" />
			<result property="AuditEmpId" column="AuditEmpId" />
          <result property="EmployeeUpdateId" column="EmployeeUpdateId" />
          
		<result property="Depot" column="DepotId" lazyLoad="false" select="Depot.select_by_primary_key" />		<result property="AuditEmp" column="AuditEmpId" lazyLoad="false" select="Employee.select_SimpleEmployee" />		<result property="EmployeeUpdate" column="EmployeeUpdateId" lazyLoad="false" select="Employee.select_SimpleEmployee" />		<result property="Employee1" column="Employee1Id" lazyLoad="false" select="Employee.select_SimpleEmployee" />		<result property="Supplier" column="SupplierId" lazyLoad="false" select="Supplier.select_by_primary_key" />		<result property="WorkHouse" column="WorkHouseId" lazyLoad="false" select="WorkHouse.select_by_primary_key" />
          <result property="Employee0" column="Employee0Id" lazyLoad="false" select="Employee.select_SimpleEmployee" />      </resultMap>
    </resultMaps>
		
    <statements>
		<select id="has_rows_of" resultClass="bool">
			<![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[ProduceOtherInDepot]
				WHERE
				[ProduceOtherInDepotId] = #ProduceOtherInDepotId#
                        			                   
				) then 1 else 0 end
                ]]>
		</select>
		<select id="has_rows" resultClass="bool">
			<![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[ProduceOtherInDepot]
 								
				) then 1 else 0 end
                ]]>
		</select>
		<select id="get_first" resultMap="ProduceOtherInDepotResult">
			<![CDATA[
			select top 1 *
			from dbo.ProduceOtherInDepot
			 
			order by InsertTime 
			]]>
		</select>
		<select id="get_last" resultMap="ProduceOtherInDepotResult">
			<![CDATA[
			select top 1 *
			from dbo.ProduceOtherInDepot
						
            order by InsertTime desc
			]]>
            
		</select>
		<select id="get_prev" resultMap="ProduceOtherInDepotResult" parameterClass="ProduceOtherInDepot">
			<![CDATA[
			select top 1 *
			from dbo.ProduceOtherInDepot
			where InsertTime < #InsertTime#	
            			          
            order by InsertTime desc
			]]>
		</select>
		<select id="get_next" resultMap="ProduceOtherInDepotResult" parameterClass="ProduceOtherInDepot">
			<![CDATA[
			select top 1 *
			from dbo.ProduceOtherInDepot
			where InsertTime > #InsertTime#	
                			                   
            order by InsertTime
			]]>
		</select>
		
		<select id="has_rows_before" resultClass="bool" parameterClass="ProduceOtherInDepot">
			<![CDATA[
			select case when exists(
				select * 
				from dbo.ProduceOtherInDepot
				where InsertTime < #InsertTime#
                			                   
				) then 1 else 0 end
			]]>
		</select>
		
		<select id="has_rows_after" resultClass="bool" parameterClass="ProduceOtherInDepot">
			<![CDATA[
			select case when exists(
				select * 
				from dbo.ProduceOtherInDepot
				where InsertTime > #InsertTime#
                			          
         
				) then 1 else 0 end
			]]>
		</select>
		<!-- select by primary key -->
        <select id="select_by_primary_key" resultMap="ProduceOtherInDepotResult" parameterClass="ProduceOtherInDepot">
			<![CDATA[SELECT
				[ProduceOtherInDepotId],
				[Employee0Id],
				[Employee1Id],
				[InsertTime],
				[UpdateTime],
				[ProduceOtherInDepotDate],
				[ProduceOtherInDepotDesc],
				[WorkHouseId],
				[SupplierId],
				[ProduceOtherCompactId],
				[DepotId],
				[InvoiceCusId],
				[AuditState],
				[AuditEmpId],
        [EmployeeUpdateId]
			FROM
				[dbo].[ProduceOtherInDepot]
			WHERE
				[ProduceOtherInDepotId] = #ProduceOtherInDepotId#
                			          
         		]]>
        </select>
		
		<!-- delete -->
        <delete id="delete" parameterClass="string">
				<![CDATA[                
                DELETE FROM [dbo].[ProduceOtherInDepot]
			WHERE            
				[ProduceOtherInDepotId] = #ProduceOtherInDepotId#
                    		]]>
        </delete>

		<!-- select all -->
        <select id="select_all" resultMap="ProduceOtherInDepotResult" >
			<![CDATA[SELECT *
			FROM 
				[dbo].[ProduceOtherInDepot]
                			                   
  ORDER BY InsertTime DESC  
			]]>
        </select>
        
		<select id="count_all" resultClass="int">
		<![CDATA[	select count(*)
			from 
				[dbo].[ProduceOtherInDepot]
                			          
         ]]>
		</select>
		
		<select id="select_all_with_paging" resultMap="ProduceOtherInDepotResult">
        <![CDATA[    SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[ProduceOtherInDepot]
                    			          
         
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
             ]]>
		</select>
		
		<!-- insert -->
        <insert id="insert" parameterClass="ProduceOtherInDepot">
			 <![CDATA[ INSERT INTO [dbo].[ProduceOtherInDepot] 
			(
				[ProduceOtherInDepotId],
				[Employee0Id],
				[Employee1Id],
				[InsertTime],
				[UpdateTime],
				[ProduceOtherInDepotDate],
				[ProduceOtherInDepotDesc],
				[WorkHouseId],
				[SupplierId],
				[ProduceOtherCompactId],
				[DepotId],
				[InvoiceCusId],
				[AuditState],
				[AuditEmpId],
        [EmployeeUpdateId]
			) 
			VALUES 
			(
				#ProduceOtherInDepotId#,
				#Employee0Id#,
				#Employee1Id#,
				#InsertTime#,
				#UpdateTime#,
				#ProduceOtherInDepotDate#,
				#ProduceOtherInDepotDesc#,
				#WorkHouseId#,
				#SupplierId#,
				#ProduceOtherCompactId#,
				#DepotId#,
				#InvoiceCusId#,
				#AuditState#,
				#AuditEmpId#,
        #EmployeeUpdateId#
			)
             ]]>
        </insert>
		
		<!-- update -->
        <update id="update" parameterClass="ProduceOtherInDepot">
		 <![CDATA[ 	UPDATE [ProduceOtherInDepot] SET
				[Employee0Id] = #Employee0Id#,
				[Employee1Id] = #Employee1Id#,
				[InsertTime] = #InsertTime#,
				[UpdateTime] = #UpdateTime#,
				[ProduceOtherInDepotDate] = #ProduceOtherInDepotDate#,
				[ProduceOtherInDepotDesc] = #ProduceOtherInDepotDesc#,
				[WorkHouseId] = #WorkHouseId#,
				[SupplierId] = #SupplierId#,
				[ProduceOtherCompactId] = #ProduceOtherCompactId#,
				[DepotId] = #DepotId#,
				[InvoiceCusId] = #InvoiceCusId#,
				[AuditState] = #AuditState#,
				[AuditEmpId] = #AuditEmpId#,
        [EmployeeUpdateId]=#EmployeeUpdateId#
			WHERE
				[ProduceOtherInDepotId] = #ProduceOtherInDepotId#
                    ]]>
        </update>
		<select id="existsPrimary" resultClass="bool" parameterClass="string">
			<![CDATA[
			select case when exists(
				select *
				from [dbo].[ProduceOtherInDepot]
				where  ProduceOtherInDepotId = #value#                 			                   
				)
				then 1 else 0 end
			]]>
		</select>
		
    </statements>
</sqlMap>

