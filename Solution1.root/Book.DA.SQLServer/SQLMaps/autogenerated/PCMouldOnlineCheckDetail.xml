<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="PCMouldOnlineCheckDetail" xmlns="http://ibatis.apache.org/mapping"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="PCMouldOnlineCheckDetail" type="Book.Model.PCMouldOnlineCheckDetail, Book.Model" />
  </alias>
  <resultMaps>
    <resultMap id="PCMouldOnlineCheckDetailResult" class="PCMouldOnlineCheckDetail">
      <result property="PCMouldOnlineCheckDetailId" column="PCMouldOnlineCheckDetailId" />
      <result property="PCMouldOnlineCheckId" column="PCMouldOnlineCheckId" />
      <result property="ProductId" column="ProductId" />
      <result property="InvoiceXOId" column="InvoiceXOId" />
      <result property="InvoiceCusId" column="InvoiceCusId" />
      <result property="OnlineDate" column="OnlineDate" />
      <result property="CheckDate" column="CheckDate" />
      <result property="Burr" column="Burr" />
      <result property="Bruise" column="Bruise" />
      <result property="Shrink" column="Shrink" />
      <result property="ForColor" column="ForColor" />
      <result property="Flap" column="Flap" />
      <result property="SandwichedConfirm" column="SandwichedConfirm" />
      <result property="Mark" column="Mark" />
      <result property="Abnormal" column="Abnormal" />
      <result property="EmployeeId" column="EmployeeId" />
      <result property="Employee" column="EmployeeId" lazyLoad="false" select="Employee.select_SimpleEmployee" />
      <result property="InvoiceXO" column="InvoiceXOId" lazyLoad="false" select="InvoiceXO.select_SimpleInvoicexo" />
      <result property="PCMouldOnlineCheck" column="PCMouldOnlineCheckId" lazyLoad="false" select="PCMouldOnlineCheck.select_by_primary_key" />
      <result property="Product" column="ProductId" lazyLoad="false" select="Product.select_SimpleProduct" />
    </resultMap>
  </resultMaps>

  <statements>
    <select id="has_rows_of" resultClass="bool">
      <![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[PCMouldOnlineCheckDetail]
				WHERE
				[PCMouldOnlineCheckDetailId] = #PCMouldOnlineCheckDetailId#
                        			                   
				) then 1 else 0 end
                ]]>
    </select>
    <select id="has_rows" resultClass="bool">
      <![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[PCMouldOnlineCheckDetail]
 								
				) then 1 else 0 end
                ]]>
    </select>
    <!-- select by primary key -->
    <select id="select_by_primary_key" resultMap="PCMouldOnlineCheckDetailResult" parameterClass="PCMouldOnlineCheckDetail">
      <![CDATA[SELECT
				[PCMouldOnlineCheckDetailId],
				[PCMouldOnlineCheckId],
				[ProductId],
				[InvoiceXOId],
				[InvoiceCusId],
				[OnlineDate],
				[CheckDate],
				[Burr],
				[Bruise],
				[Shrink],
				[ForColor],
				[Flap],
				[SandwichedConfirm],
				[Mark],
				[Abnormal],
				[EmployeeId]
			FROM
				[dbo].[PCMouldOnlineCheckDetail]
			WHERE
				[PCMouldOnlineCheckDetailId] = #PCMouldOnlineCheckDetailId#
                			          
         		]]>
    </select>

    <!-- delete -->
    <delete id="delete" parameterClass="string">
      <![CDATA[                
                DELETE FROM [dbo].[PCMouldOnlineCheckDetail]
			WHERE            
				[PCMouldOnlineCheckDetailId] = #PCMouldOnlineCheckDetailId#
                    		]]>
    </delete>

    <!-- select all -->
    <select id="select_all" resultMap="PCMouldOnlineCheckDetailResult" >
      <![CDATA[SELECT *
			FROM 
				[dbo].[PCMouldOnlineCheckDetail]
                			                   

			]]>
    </select>

    <select id="count_all" resultClass="int">
      <![CDATA[	select count(*)
			from 
				[dbo].[PCMouldOnlineCheckDetail]
                			          
         ]]>
    </select>

    <select id="select_all_with_paging" resultMap="PCMouldOnlineCheckDetailResult">
      <![CDATA[    SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[PCMouldOnlineCheckDetail]
                    			          
         
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
             ]]>
    </select>

    <!-- insert -->
    <insert id="insert" parameterClass="PCMouldOnlineCheckDetail">
      <![CDATA[ INSERT INTO [dbo].[PCMouldOnlineCheckDetail] 
			(
				[PCMouldOnlineCheckDetailId],
				[PCMouldOnlineCheckId],
				[ProductId],
				[InvoiceXOId],
				[InvoiceCusId],
				[OnlineDate],
				[CheckDate],
				[Burr],
				[Bruise],
				[Shrink],
				[ForColor],
				[Flap],
				[SandwichedConfirm],
				[Mark],
				[Abnormal],
				[EmployeeId]
			) 
			VALUES 
			(
				#PCMouldOnlineCheckDetailId#,
				#PCMouldOnlineCheckId#,
				#ProductId#,
				#InvoiceXOId#,
				#InvoiceCusId#,
				#OnlineDate#,
				#CheckDate#,
				#Burr#,
				#Bruise#,
				#Shrink#,
				#ForColor#,
				#Flap#,
				#SandwichedConfirm#,
				#Mark#,
				#Abnormal#,
				#EmployeeId#
			)
             ]]>
    </insert>

    <!-- update -->
    <update id="update" parameterClass="PCMouldOnlineCheckDetail">
      <![CDATA[ 	UPDATE [PCMouldOnlineCheckDetail] SET
				[PCMouldOnlineCheckId] = #PCMouldOnlineCheckId#,
				[ProductId] = #ProductId#,
				[InvoiceXOId] = #InvoiceXOId#,
				[InvoiceCusId] = #InvoiceCusId#,
				[OnlineDate] = #OnlineDate#,
				[CheckDate] = #CheckDate#,
				[Burr] = #Burr#,
				[Bruise] = #Bruise#,
				[Shrink] = #Shrink#,
				[ForColor] = #ForColor#,
				[Flap] = #Flap#,
				[SandwichedConfirm] = #SandwichedConfirm#,
				[Mark] = #Mark#,
				[Abnormal] = #Abnormal#,
				[EmployeeId] = #EmployeeId#
			WHERE
				[PCMouldOnlineCheckDetailId] = #PCMouldOnlineCheckDetailId#
                    ]]>
    </update>
    <select id="existsPrimary" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select *
				from [dbo].[PCMouldOnlineCheckDetail]
				where  PCMouldOnlineCheckDetailId = #value#                 			                   
				)
				then 1 else 0 end
			]]>
    </select>

  </statements>
</sqlMap>
