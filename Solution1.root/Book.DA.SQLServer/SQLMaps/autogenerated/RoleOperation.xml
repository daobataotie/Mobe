<?xml version="1.0" encoding="utf-8" ?> 
<sqlMap namespace="RoleOperation" xmlns="http://ibatis.apache.org/mapping" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="RoleOperation" type="Book.Model.RoleOperation, Book.Model" />
    </alias>
    <resultMaps>                                    
        <resultMap id="RoleOperationResult" class="RoleOperation">
			<result property="RoleOperationId" column="RoleOperationId" />
			<result property="RoleId" column="RoleId" />
			<result property="OperationId" column="OperationId" />
			<result property="RoleOperationHold" column="RoleOperationHold" />
			<result property="PossAdd" column="PossAdd" />
			<result property="PossUpdate" column="PossUpdate" />
			<result property="PossDelete" column="PossDelete" />
			<result property="PossSearch" column="PossSearch" />
			<result property="PossAuditing" column="PossAuditing" />
			<result property="PossPrint" column="PossPrint" />
			<result property="PossExport" column="PossExport" />
			<result property="PossReportEdit" column="PossReportEdit" />
			<result property="KeyTag" column="KeyTag" />
      <result property="PossAuditingRank" column="PossAuditingRank" />
          <result property="TableName" column="TableName" />
          <result property="Operation" column="OperationId" lazyLoad="false" select="Operation.select_by_primary_key" />		<result property="Role" column="RoleId" lazyLoad="false" select="Role.select_by_primary_key" />
        </resultMap>
    </resultMaps>
		
    <statements>
		<select id="has_rows_of" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[RoleOperation]
				WHERE
				[RoleOperationId] = #RoleOperationId#
				) then 1 else 0 end
		</select>
		<select id="has_rows" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[RoleOperation]
 				where invoicestatus=1 or invoicestatus is null				
				) then 1 else 0 end
		</select>
		<!-- select by primary key -->
        <select id="select_by_primary_key" resultMap="RoleOperationResult" parameterClass="RoleOperation">
          SELECT
          [RoleOperationId],
          [RoleId],
          [OperationId],
          [RoleOperationHold],
          [PossAdd],
          [PossUpdate],
          [PossDelete],
          [PossSearch],
          [PossAuditing],
          [PossPrint],
          [PossExport],
          [PossReportEdit],
          [KeyTag],
          [PossAuditingRank],
          [TableName]
          FROM
          [dbo].[RoleOperation]
          WHERE
          [RoleOperationId] = #RoleOperationId#
        </select>
		
		<!-- delete -->
        <delete id="delete" parameterClass="string">
			DELETE FROM [dbo].[RoleOperation]
			WHERE
				[RoleOperationId] = #RoleOperationId#
        </delete>

		<!-- select all -->
        <select id="select_all" resultMap="RoleOperationResult" >
			SELECT *
			FROM 
				[dbo].[RoleOperation]
			

			
        </select>
        
		<select id="count_all" resultClass="int">
			select count(*)
			from 
				[dbo].[RoleOperation]
		</select>
		
		<select id="select_all_with_paging" resultMap="RoleOperationResult">
            SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[RoleOperation]
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
		</select>
		
		<!-- insert -->
        <insert id="insert" parameterClass="RoleOperation">
          INSERT INTO [dbo].[RoleOperation]
          (
          [RoleOperationId],
          [RoleId],
          [OperationId],
          [RoleOperationHold],
          [PossAdd],
          [PossUpdate],
          [PossDelete],
          [PossSearch],
          [PossAuditing],
          [PossPrint],
          [PossExport],
          [PossReportEdit],
          [KeyTag],
          [PossAuditingRank],
          [TableName]
          )
          VALUES
          (
          #RoleOperationId#,
          #RoleId#,
          #OperationId#,
          #RoleOperationHold#,
          #PossAdd#,
          #PossUpdate#,
          #PossDelete#,
          #PossSearch#,
          #PossAuditing#,
          #PossPrint#,
          #PossExport#,
          #PossReportEdit#,
          #KeyTag#,
          #PossAuditingRank#,
          #TableName#
          )
        </insert>
		
		<!-- update -->
        <update id="update" parameterClass="RoleOperation">
          UPDATE [RoleOperation] SET
          [RoleId] = #RoleId#,
          [OperationId] = #OperationId#,
          [RoleOperationHold] = #RoleOperationHold#,
          [PossAdd] = #PossAdd#,
          [PossUpdate] = #PossUpdate#,
          [PossDelete] = #PossDelete#,
          [PossSearch] = #PossSearch#,
          [PossAuditing] = #PossAuditing#,
          [PossPrint] = #PossPrint#,
          [PossExport] = #PossExport#,
          [PossReportEdit] = #PossReportEdit#,
          [KeyTag] = #KeyTag#,
          [PossAuditingRank]=#PossAuditingRank#
          WHERE
          [RoleOperationId] = #RoleOperationId#
          [TableName]= #TableName#
        </update>
		<select id="existsPrimary" resultClass="bool" parameterClass="string">
			<![CDATA[
			select case when exists(
				select *
				from [dbo].[RoleOperation]
				where  RoleOperationId = #value# 
				)
				then 1 else 0 end
			]]>
		</select>
		
    </statements>
</sqlMap>

