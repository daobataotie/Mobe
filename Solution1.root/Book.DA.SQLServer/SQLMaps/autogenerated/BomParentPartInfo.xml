<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="BomParentPartInfo" xmlns="http://ibatis.apache.org/mapping"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="BomParentPartInfo" type="Book.Model.BomParentPartInfo, Book.Model" />
  </alias>
  <resultMaps>
    <resultMap id="BomParentPartInfoResult" class="BomParentPartInfo">
      <result property="BomId" column="BomId" />
      <result property="ProductId" column="ProductId" />
      <result property="InsertTime" column="InsertTime" />
      <result property="UpdateTime" column="UpdateTime" />
      <result property="Id" column="Id" />
      <result property="BomType" column="BomType" />
      <result property="LossRate" column="LossRate" />
      <result property="BomVersion" column="BomVersion" />
      <result property="BomDescription" column="BomDescription" />
      <result property="EffectiveDate" column="EffectiveDate" />
      <result property="DefaultQuantity" column="DefaultQuantity" />
      <result property="Status" column="Status" />
      <result property="CreateMan" column="CreateMan" />
      <result property="ModifyMan" column="ModifyMan" />
      <result property="MaterialTypeID" column="MaterialTypeID" />
      <result property="CustomerPackageId" column="CustomerPackageId" />
      <result property="CustomerId" column="CustomerId" />
      <result property="CustomerProductName" column="CustomerProductName" />
      <result property="IsCustomerProcut" column="IsCustomerProcut" />
      <result property="CustomerBOMInProductId" column="CustomerBOMInProductId" />
      <result property="TechonlogyHeaderId" column="TechonlogyHeaderId" />
      <result property="EmployeeAddId" column="EmployeeAddId" />
      <result property="EmployeeUpdateId" column="EmployeeUpdateId" />
      <result property="Customer" column="CustomerId" lazyLoad="false" select="Customer.select_SimpleCustomer" />
      <result property="EmployeeAdd" column="EmployeeAddId" lazyLoad="false" select="Employee.select_SimpleEmployee" />
      <result property="EmployeeUpdate" column="EmployeeUpdateId" lazyLoad="false" select="Employee.select_SimpleEmployee" />
      <result property="Product" column="ProductId" lazyLoad="false" select="Product.select_SimpleProduct" />
    </resultMap>
  </resultMaps>

  <statements>
    <select id="has_rows_of" resultClass="bool">
      select case when exists(
      SELECT
      *
      FROM
      [dbo].[BomParentPartInfo]
      WHERE
      [BomId] = #BomId#
      ) then 1 else 0 end
    </select>
    <select id="has_rows" resultClass="bool">
      select case when exists(
      SELECT
      *
      FROM
      [dbo].[BomParentPartInfo]

      ) then 1 else 0 end
    </select>
    <select id="get_first" resultMap="BomParentPartInfoResult">
      <![CDATA[
			select top 1 *
			from dbo.BomParentPartInfo 
			order by InsertTime
			]]>
    </select>
    <select id="get_last" resultMap="BomParentPartInfoResult">
      <![CDATA[
			select top 1 *
			from dbo.BomParentPartInfo 			
			order by InsertTime desc
			]]>
    </select>
    <select id="get_prev" resultMap="BomParentPartInfoResult" parameterClass="BomParentPartInfo">
      <![CDATA[
			select top 1 *
			from dbo.BomParentPartInfo
			where InsertTime < #InsertTime#
			order by InsertTime desc
			]]>
    </select>
    <select id="get_next" resultMap="BomParentPartInfoResult" parameterClass="BomParentPartInfo">
      <![CDATA[
			select top 1 *
			from dbo.BomParentPartInfo
			where InsertTime > #InsertTime#
			order by InsertTime
			]]>
    </select>
    <select id="has_rows_before" resultClass="bool" parameterClass="BomParentPartInfo">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.BomParentPartInfo
				where InsertTime < #InsertTime#
				) 
				then 1 else 0 end
			]]>
    </select>

    <select id="has_rows_after" resultClass="bool" parameterClass="BomParentPartInfo">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.BomParentPartInfo
				where InsertTime > #InsertTime#
				) then 1 else 0 end
			]]>
    </select>
    <!-- select by primary key -->
    <select id="select_by_primary_key" resultMap="BomParentPartInfoResult" parameterClass="BomParentPartInfo">
      SELECT
      [BomId],
      [ProductId],
      [InsertTime],
      [UpdateTime],
      [Id],
      [BomType],
      [LossRate],
      [BomVersion],
      [BomDescription],
      [EffectiveDate],
      [DefaultQuantity],
      [Status],
      [CreateMan],
      [ModifyMan],
      [MaterialTypeID],
      [CustomerPackageId],
      [CustomerId],
      [CustomerProductName],
      [IsCustomerProcut],
      [CustomerBOMInProductId],
      [TechonlogyHeaderId],
      [EmployeeAddId],
      [EmployeeUpdateId]
      FROM
      [dbo].[BomParentPartInfo]
      WHERE
      [BomId] = #BomId#
    </select>

    <!-- delete -->
    <delete id="delete" parameterClass="string">
      DELETE FROM [dbo].[BomParentPartInfo]
      WHERE
      [BomId] = #BomId#
    </delete>

    <!-- select all -->
    <select id="select_all" resultMap="BomParentPartInfoResult" >
      SELECT *
      FROM
      [dbo].[BomParentPartInfo]


      ORDER BY Id ASC



    </select>

    <select id="count_all" resultClass="int">
      select count(*)
      from
      [dbo].[BomParentPartInfo]
    </select>

    <select id="select_all_with_paging" resultMap="BomParentPartInfoResult">
      SELECT *
      FROM
      (
      SELECT *, row_number() over(order by $OrderStatement$) rownumber
      FROM
      [dbo].[BomParentPartInfo]
      ) t
      WHERE t.rownumber between #Row1# and #Row2#
    </select>

    <!-- insert -->
    <insert id="insert" parameterClass="BomParentPartInfo">
      INSERT INTO [dbo].[BomParentPartInfo]
      (
      [BomId],
      [ProductId],
      [InsertTime],
      [UpdateTime],
      [Id],
      [BomType],
      [LossRate],
      [BomVersion],
      [BomDescription],
      [EffectiveDate],
      [DefaultQuantity],
      [Status],
      [CreateMan],
      [ModifyMan],
      [MaterialTypeID],
      [CustomerPackageId],
      [CustomerId],
      [CustomerProductName],
      [IsCustomerProcut],
      [CustomerBOMInProductId],
      [TechonlogyHeaderId],
      [EmployeeAddId],
      [EmployeeUpdateId]
      )
      VALUES
      (
      #BomId#,
      #ProductId#,
      #InsertTime#,
      #UpdateTime#,
      #Id#,
      #BomType#,
      #LossRate#,
      #BomVersion#,
      #BomDescription#,
      #EffectiveDate#,
      #DefaultQuantity#,
      #Status#,
      #CreateMan#,
      #ModifyMan#,
      #MaterialTypeID#,
      #CustomerPackageId#,
      #CustomerId#,
      #CustomerProductName#,
      #IsCustomerProcut#,
      #CustomerBOMInProductId#,
      #TechonlogyHeaderId#,
      #EmployeeAddId#,
      #EmployeeUpdateId#
      )
    </insert>

    <!-- update -->
    <update id="update" parameterClass="BomParentPartInfo">
      UPDATE [BomParentPartInfo] SET
      [ProductId] = #ProductId#,
      [InsertTime] = #InsertTime#,
      [UpdateTime] = #UpdateTime#,
      [Id] = #Id#,
      [BomType] = #BomType#,
      [LossRate] = #LossRate#,
      [BomVersion] = #BomVersion#,
      [BomDescription] = #BomDescription#,
      [EffectiveDate] = #EffectiveDate#,
      [DefaultQuantity] = #DefaultQuantity#,
      [Status] = #Status#,
      [CreateMan] = #CreateMan#,
      [ModifyMan] = #ModifyMan#,
      [MaterialTypeID] = #MaterialTypeID#,
      [CustomerPackageId] = #CustomerPackageId#,
      [CustomerId] = #CustomerId#,
      [CustomerProductName] = #CustomerProductName#,
      [IsCustomerProcut] = #IsCustomerProcut#,
      [CustomerBOMInProductId] = #CustomerBOMInProductId#,
      [TechonlogyHeaderId] = #TechonlogyHeaderId#,
      [EmployeeAddId] = #EmployeeAddId#,
      [EmployeeUpdateId] = #EmployeeUpdateId#
      WHERE
      [BomId] = #BomId#
    </update>
    <select id="existsPrimary" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select *
				from [dbo].[BomParentPartInfo]
				where  BomId = #value# 
				)
				then 1 else 0 end
			]]>
    </select>
    <select id="exists" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.BomParentPartInfo
				where Id = #value#
				) then 1 else 0 end
			]]>
    </select>

    <select id="get_by_id" resultMap="BomParentPartInfoResult" parameterClass="string">
      <![CDATA[
			SELECT top 1
				*
			FROM
				[dbo].[BomParentPartInfo]
			WHERE
				Id = #value#
			]]>
    </select>

    <select id="existsexcept" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select *
				from dbo.BomParentPartInfo
				where Id = #newId# and Id <> #oldId#
				)
				then 1 else 0 end
			]]>
    </select>


  </statements>
</sqlMap>

