<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="BGHandbookRangeDetail" xmlns="http://ibatis.apache.org/mapping"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="BGHandbookRangeDetail" type="Book.Model.BGHandbookRangeDetail, Book.Model" />
  </alias>
  <resultMaps>
    <resultMap id="BGHandbookRangeDetailResult" class="BGHandbookRangeDetail">
      <result property="BGHandbookRangeDetailId" column="BGHandbookRangeDetailId" />
      <result property="BGHandbookRangeId" column="BGHandbookRangeId" />
      <result property="Id" column="Id" />
      <result property="ProductName" column="ProductName" />
      <result property="ProductSpecification" column="ProductSpecification" />
      <result property="ProductUnit" column="ProductUnit" />
      <result property="CompanyProductId" column="CompanyProductId" />
      <result property="CustomProductId" column="CustomProductId" />
      <result property="Note" column="Note" />
      <result property="ProductType" column="ProductType" />
      <result property="CustomId" column="CustomId"/>
      <result property="BGHandbookRange" column="BGHandbookRangeId" lazyLoad="false" select="BGHandbookRange.select_by_primary_key" />
    </resultMap>
  </resultMaps>

  <statements>
    <select id="has_rows_of" resultClass="bool">
      <![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[BGHandbookRangeDetail]
				WHERE
				[BGHandbookRangeDetailId] = #BGHandbookRangeDetailId#
                        			                   
				) then 1 else 0 end
                ]]>
    </select>
    <select id="has_rows" resultClass="bool">
      <![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[BGHandbookRangeDetail]
 								
				) then 1 else 0 end
                ]]>
    </select>
    <!-- select by primary key -->
    <select id="select_by_primary_key" resultMap="BGHandbookRangeDetailResult" parameterClass="BGHandbookRangeDetail">
      <![CDATA[SELECT
				[BGHandbookRangeDetailId],
				[BGHandbookRangeId],
				[Id],
				[ProductName],
				[ProductSpecification],
				[ProductUnit],
				[CompanyProductId],
				[CustomProductId],
				[Note],
				[ProductType],
        [CustomId]
			FROM
				[dbo].[BGHandbookRangeDetail]
			WHERE
				[BGHandbookRangeDetailId] = #BGHandbookRangeDetailId#
                			          
         		]]>
    </select>

    <!-- delete -->
    <delete id="delete" parameterClass="string">
      <![CDATA[                
                DELETE FROM [dbo].[BGHandbookRangeDetail]
			WHERE            
				[BGHandbookRangeDetailId] = #BGHandbookRangeDetailId#
                    		]]>
    </delete>

    <!-- select all -->
    <select id="select_all" resultMap="BGHandbookRangeDetailResult" >
      <![CDATA[SELECT *
			FROM 
				[dbo].[BGHandbookRangeDetail]
                			                   
			ORDER BY Id ASC			
			
			]]>
    </select>

    <select id="count_all" resultClass="int">
      <![CDATA[	select count(*)
			from 
				[dbo].[BGHandbookRangeDetail]
                			          
         ]]>
    </select>

    <select id="select_all_with_paging" resultMap="BGHandbookRangeDetailResult">
      <![CDATA[    SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[BGHandbookRangeDetail]
                    			          
         
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
             ]]>
    </select>

    <!-- insert -->
    <insert id="insert" parameterClass="BGHandbookRangeDetail">
      <![CDATA[ INSERT INTO [dbo].[BGHandbookRangeDetail] 
			(
				[BGHandbookRangeDetailId],
				[BGHandbookRangeId],
				[Id],
				[ProductName],
				[ProductSpecification],
				[ProductUnit],
				[CompanyProductId],
				[CustomProductId],
				[Note],
				[ProductType],
        [CustomId]
			) 
			VALUES 
			(
				#BGHandbookRangeDetailId#,
				#BGHandbookRangeId#,
				#Id#,
				#ProductName#,
				#ProductSpecification#,
				#ProductUnit#,
				#CompanyProductId#,
				#CustomProductId#,
				#Note#,
				#ProductType#,
        #CustomId#
			)
             ]]>
    </insert>

    <!-- update -->
    <update id="update" parameterClass="BGHandbookRangeDetail">
      <![CDATA[ 	UPDATE [BGHandbookRangeDetail] SET
				[BGHandbookRangeId] = #BGHandbookRangeId#,
				[Id] = #Id#,
				[ProductName] = #ProductName#,
				[ProductSpecification] = #ProductSpecification#,
				[ProductUnit] = #ProductUnit#,
				[CompanyProductId] = #CompanyProductId#,
				[CustomProductId] = #CustomProductId#,
				[Note] = #Note#,
				[ProductType] = #ProductType#,
        [CustomId]=#CustomId#
			WHERE
				[BGHandbookRangeDetailId] = #BGHandbookRangeDetailId#
                    ]]>
    </update>
    <select id="existsPrimary" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select *
				from [dbo].[BGHandbookRangeDetail]
				where  BGHandbookRangeDetailId = #value#                 			                   
				)
				then 1 else 0 end
			]]>
    </select>
    <select id="exists" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.BGHandbookRangeDetail
				where Id = #value#
               			          
         
				) then 1 else 0 end
			]]>
    </select>

    <select id="get_by_id" resultMap="BGHandbookRangeDetailResult" parameterClass="string">
      <![CDATA[
			SELECT top 1
				*
			FROM
				[dbo].[BGHandbookRangeDetail]
                    			          
         
			WHERE
				Id = #value#
			]]>
    </select>

    <select id="existsexcept" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select *
				from dbo.BGHandbookRangeDetail
				where Id = #newId# and Id <> #oldId#
                    			          
         
				)
				then 1 else 0 end
			]]>
    </select>


  </statements>
</sqlMap>

