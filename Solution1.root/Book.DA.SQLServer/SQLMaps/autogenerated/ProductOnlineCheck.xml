<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="ProductOnlineCheck" xmlns="http://ibatis.apache.org/mapping"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="ProductOnlineCheck" type="Book.Model.ProductOnlineCheck, Book.Model" />
  </alias>
  <resultMaps>
    <resultMap id="ProductOnlineCheckResult" class="ProductOnlineCheck">
      <result property="ProductOnlineCheckId" column="ProductOnlineCheckId" />
      <result property="ProductOnlineCheckDate" column="ProductOnlineCheckDate" />
      <result property="OnlineDate" column="OnlineDate" />
      <result property="ProductId" column="ProductId" />
      <result property="EmployeeId" column="EmployeeId" />
      <result property="PronoteHeaderId" column="PronoteHeaderId" />
      <result property="InvoiceXOId" column="InvoiceXOId" />
      <result property="Remark" column="Remark" />
      <result property="InsertTime" column="InsertTime" />
      <result property="UpdateTime" column="UpdateTime" />
      <result property="AuditState" column="AuditState" />
      <result property="AuditEmpId" column="AuditEmpId" />
      <result property="Note" column="Note"/>
      <result property="CheckNum" column="CheckNum"/>
      <result property="PassNum" column="PassNum"/>
      <result property="ProductUnit" column="ProductUnit"/>
      <result property="Employee" column="EmployeeId" lazyLoad="false" select="Employee.select_SimpleEmployee" />
      <result property="InvoiceXO" column="InvoiceXOId" lazyLoad="false" select="InvoiceXO.select_SimpleInvoicexo" />
      <result property="Product" column="ProductId" lazyLoad="false" select="Product.select_SimpleProduct" />
      <result property="PronoteHeader" column="PronoteHeaderId" lazyLoad="false" select="PronoteHeader.selectwithXO" />
      <result property="AuditEmp" column="AuditEmpId" lazyLoad="false" select="Employee.select_SimpleEmployee" />
    </resultMap>
  </resultMaps>

  <statements>
    <select id="has_rows_of" resultClass="bool">
      <![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[ProductOnlineCheck]
				WHERE
				[ProductOnlineCheckId] = #ProductOnlineCheckId#
                        			                   
				) then 1 else 0 end
                ]]>
    </select>
    <select id="has_rows" resultClass="bool">
      <![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[ProductOnlineCheck]
 								
				) then 1 else 0 end
                ]]>
    </select>
    <select id="get_first" resultMap="ProductOnlineCheckResult">
      <![CDATA[
			select top 1 *
			from dbo.ProductOnlineCheck
			 
			order by InsertTime 
			]]>
    </select>
    <select id="get_last" resultMap="ProductOnlineCheckResult">
      <![CDATA[
			select top 1 *
			from dbo.ProductOnlineCheck
						
            order by InsertTime desc
			]]>

    </select>
    <select id="get_prev" resultMap="ProductOnlineCheckResult" parameterClass="ProductOnlineCheck">
      <![CDATA[
			select top 1 *
			from dbo.ProductOnlineCheck
			where InsertTime < #InsertTime#	
            			          
            order by InsertTime desc
			]]>
    </select>
    <select id="get_next" resultMap="ProductOnlineCheckResult" parameterClass="ProductOnlineCheck">
      <![CDATA[
			select top 1 *
			from dbo.ProductOnlineCheck
			where InsertTime > #InsertTime#	
                			                   
            order by InsertTime
			]]>
    </select>

    <select id="has_rows_before" resultClass="bool" parameterClass="ProductOnlineCheck">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.ProductOnlineCheck
				where InsertTime < #InsertTime#
                			                   
				) then 1 else 0 end
			]]>
    </select>

    <select id="has_rows_after" resultClass="bool" parameterClass="ProductOnlineCheck">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.ProductOnlineCheck
				where InsertTime > #InsertTime#
                			          
         
				) then 1 else 0 end
			]]>
    </select>
    <!-- select by primary key -->
    <select id="select_by_primary_key" resultMap="ProductOnlineCheckResult" parameterClass="ProductOnlineCheck">
      <![CDATA[SELECT
				[ProductOnlineCheckId],
				[ProductOnlineCheckDate],
				[OnlineDate],
				[ProductId],
				[EmployeeId],
				[PronoteHeaderId],
				[InvoiceXOId],
				[Remark],
				[InsertTime],
				[UpdateTime],
        [AuditState],
        [AuditEmpId],
        [Note],
        [CheckNum],
        [PassNum],
        [ProductUnit]        
        
			FROM
				[dbo].[ProductOnlineCheck]
			WHERE
				[ProductOnlineCheckId] = #ProductOnlineCheckId#
                			          
         		]]>
    </select>

    <!-- delete -->
    <delete id="delete" parameterClass="string">
      <![CDATA[                
                DELETE FROM [dbo].[ProductOnlineCheck]
			WHERE            
				[ProductOnlineCheckId] = #ProductOnlineCheckId#
                    		]]>
    </delete>

    <!-- select all -->
    <select id="select_all" resultMap="ProductOnlineCheckResult" >
      <![CDATA[SELECT *
			FROM 
				[dbo].[ProductOnlineCheck]
                			                   
  ORDER BY InsertTime DESC  
			]]>
    </select>

    <select id="count_all" resultClass="int">
      <![CDATA[	select count(*)
			from 
				[dbo].[ProductOnlineCheck]
                			          
         ]]>
    </select>

    <select id="select_all_with_paging" resultMap="ProductOnlineCheckResult">
      <![CDATA[    SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[ProductOnlineCheck]
                    			          
         
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
             ]]>
    </select>

    <!-- insert -->
    <insert id="insert" parameterClass="ProductOnlineCheck">
      <![CDATA[ INSERT INTO [dbo].[ProductOnlineCheck] 
			(
				[ProductOnlineCheckId],
				[ProductOnlineCheckDate],
				[OnlineDate],
				[ProductId],
				[EmployeeId],
				[PronoteHeaderId],
				[InvoiceXOId],
				[Remark],
				[InsertTime],
				[UpdateTime],
        [AuditState],
        [AuditEmpId],
        [Note],
        [CheckNum],
        [PassNum],
        [ProductUnit] 
			) 
			VALUES 
			(
				#ProductOnlineCheckId#,
				#ProductOnlineCheckDate#,
				#OnlineDate#,
				#ProductId#,
				#EmployeeId#,
				#PronoteHeaderId#,
				#InvoiceXOId#,
				#Remark#,
				#InsertTime#,
				#UpdateTime#,
        #AuditState#,
        #AuditEmpId#,
        #Note#,
        #CheckNum#,
        #PassNum#,
        #ProductUnit#
			)
             ]]>
    </insert>

    <!-- update -->
    <update id="update" parameterClass="ProductOnlineCheck">
      <![CDATA[ 	UPDATE [ProductOnlineCheck] SET
				[ProductOnlineCheckDate] = #ProductOnlineCheckDate#,
				[OnlineDate] = #OnlineDate#,
				[ProductId] = #ProductId#,
				[EmployeeId] = #EmployeeId#,
				[PronoteHeaderId] = #PronoteHeaderId#,
				[InvoiceXOId] = #InvoiceXOId#,
				[Remark] = #Remark#,
				[InsertTime] = #InsertTime#,
				[UpdateTime] = #UpdateTime#,
        [AuditState]=#AuditState#,        
        [AuditEmpId]=#AuditEmpId#,
        [Note]=#Note#,
        [CheckNum]=#CheckNum#,
        [PassNum]=#PassNum#,
        [ProductUnit]=#ProductUnit# 
			WHERE
				[ProductOnlineCheckId] = #ProductOnlineCheckId#
                    ]]>
    </update>
    <select id="existsPrimary" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select *
				from [dbo].[ProductOnlineCheck]
				where  ProductOnlineCheckId = #value#                 			                   
				)
				then 1 else 0 end
			]]>
    </select>

  </statements>
</sqlMap>

