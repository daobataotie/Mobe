<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="PCFogCheckDetail" xmlns="http://ibatis.apache.org/mapping"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="PCFogCheckDetail" type="Book.Model.PCFogCheckDetail, Book.Model" />
  </alias>
  <resultMaps>
    <resultMap id="PCFogCheckDetailResult" class="PCFogCheckDetail">
      <result property="PCImpactCheckDetailId" column="PCImpactCheckDetailId" />
      <result property="PCFogCheckId" column="PCFogCheckId" />
      <result property="CommentLDate" column="CommentLDate" />
      <result property="CommentRDate" column="CommentRDate" />
      <result property="Method" column="Method" />
      <result property="attrTL" column="attrTL" />
      <result property="attrTR" column="attrTR" />
      <result property="attrHL" column="attrHL" />
      <result property="attrHR" column="attrHR" />
      <result property="attrCL" column="attrCL" />
      <result property="attrCR" column="attrCR" />
      <result property="PassingL" column="PassingL" />
      <result property="PassingR" column="PassingR" />
      <result property="CommentLTime" column="CommentLTime" />
      <result property="CommentRTime" column="CommentRTime" />
      <result property="CheckDate" column="CheckDate"/>
      <result property="BusinessHoursId" column="BusinessHoursId"/>
      <result property="CheckStandard" column="CheckStandard"/>
      <result property="BusinessHours" column="BusinessHoursId" lazyLoad="false" select="BusinessHours.select_by_primary_key"/>
      <result property="PCFogCheck" column="PCFogCheckId" lazyLoad="false" select="PCFogCheck.select_by_primary_key" />
    </resultMap>
  </resultMaps>

  <statements>
    <select id="has_rows_of" resultClass="bool">
      <![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[PCFogCheckDetail]
				WHERE
				[PCImpactCheckDetailId] = #PCImpactCheckDetailId#
                        			                   
				) then 1 else 0 end
                ]]>
    </select>
    <select id="has_rows" resultClass="bool">
      <![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[PCFogCheckDetail]
 								
				) then 1 else 0 end
                ]]>
    </select>
    <!-- select by primary key -->
    <select id="select_by_primary_key" resultMap="PCFogCheckDetailResult" parameterClass="PCFogCheckDetail">
      <![CDATA[SELECT
				[PCImpactCheckDetailId],
				[PCFogCheckId],
				[CommentLDate],
				[CommentRDate],
				[Method],
				[attrTL],
				[attrTR],
				[attrHL],
				[attrHR],
				[attrCL],
				[attrCR],
				[PassingL],
				[PassingR],
				[CommentLTime],
				[CommentRTime],
        [CheckDate],
        [BusinessHoursId],
        [CheckStandard]
			FROM
				[dbo].[PCFogCheckDetail]
			WHERE
				[PCImpactCheckDetailId] = #PCImpactCheckDetailId#
                			          
         		]]>
    </select>

    <!-- delete -->
    <delete id="delete" parameterClass="string">
      <![CDATA[                
                DELETE FROM [dbo].[PCFogCheckDetail]
			WHERE            
				[PCImpactCheckDetailId] = #PCImpactCheckDetailId#
                    		]]>
    </delete>

    <!-- select all -->
    <select id="select_all" resultMap="PCFogCheckDetailResult" >
      <![CDATA[SELECT *
			FROM 
				[dbo].[PCFogCheckDetail]
                			                   

			]]>
    </select>

    <select id="count_all" resultClass="int">
      <![CDATA[	select count(*)
			from 
				[dbo].[PCFogCheckDetail]
                			          
         ]]>
    </select>

    <select id="select_all_with_paging" resultMap="PCFogCheckDetailResult">
      <![CDATA[    SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[PCFogCheckDetail]
                    			          
         
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
             ]]>
    </select>

    <!-- insert -->
    <insert id="insert" parameterClass="PCFogCheckDetail">
      <![CDATA[ INSERT INTO [dbo].[PCFogCheckDetail] 
			(
				[PCImpactCheckDetailId],
				[PCFogCheckId],
				[CommentLDate],
				[CommentRDate],
				[Method],
				[attrTL],
				[attrTR],
				[attrHL],
				[attrHR],
				[attrCL],
				[attrCR],
				[PassingL],
				[PassingR],
				[CommentLTime],
				[CommentRTime],
        [CheckDate],
        [BusinessHoursId],
        [CheckStandard]
			) 
			VALUES 
			(
				#PCImpactCheckDetailId#,
				#PCFogCheckId#,
				#CommentLDate#,
				#CommentRDate#,
				#Method#,
				#attrTL#,
				#attrTR#,
				#attrHL#,
				#attrHR#,
				#attrCL#,
				#attrCR#,
				#PassingL#,
				#PassingR#,
				#CommentLTime#,
				#CommentRTime#,
        #CheckDate#,
        #BusinessHoursId#,
        #CheckStandard#
			)
             ]]>
    </insert>

    <!-- update -->
    <update id="update" parameterClass="PCFogCheckDetail">
      <![CDATA[ 	UPDATE [PCFogCheckDetail] SET
				[PCFogCheckId] = #PCFogCheckId#,
				[CommentLDate] = #CommentLDate#,
				[CommentRDate] = #CommentRDate#,
				[Method] = #Method#,
				[attrTL] = #attrTL#,
				[attrTR] = #attrTR#,
				[attrHL] = #attrHL#,
				[attrHR] = #attrHR#,
				[attrCL] = #attrCL#,
				[attrCR] = #attrCR#,
				[PassingL] = #PassingL#,
				[PassingR] = #PassingR#,
				[CommentLTime] = #CommentLTime#,
				[CommentRTime] = #CommentRTime#,
        [CheckDate]=#CheckDate#,
        [BusinessHoursId]=#BusinessHoursId#,
        [CheckStandard]=#CheckStandard#
			WHERE
				[PCImpactCheckDetailId] = #PCImpactCheckDetailId#
                    ]]>
    </update>
    <select id="existsPrimary" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select *
				from [dbo].[PCFogCheckDetail]
				where  PCImpactCheckDetailId = #value#                 			                   
				)
				then 1 else 0 end
			]]>
    </select>

  </statements>
</sqlMap>

