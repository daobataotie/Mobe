<?xml version="1.0" encoding="utf-8" ?> 
<sqlMap namespace="AtProfitLoss" xmlns="http://ibatis.apache.org/mapping" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="AtProfitLoss" type="Book.Model.AtProfitLoss, Book.Model" />
    </alias>
    <resultMaps>                                    
        <resultMap id="AtProfitLossResult" class="AtProfitLoss">
			<result property="ProfitLossId" column="ProfitLossId" />
			<result property="ProfitLossCategory" column="ProfitLossCategory" />
			<result property="CategoriesName" column="CategoriesName" />
			<result property="SubjectId" column="SubjectId" />
			<result property="SubjectName" column="SubjectName" />
			<result property="ThisMoney" column="ThisMoney" />
			<result property="IsMoney" column="IsMoney" />
			<result property="Ratio" column="Ratio" />
			<result property="InsertTime" column="InsertTime" />
			<result property="UpdateTime" column="UpdateTime" />
			<result property="ProfitLossDate" column="ProfitLossDate" />
			<result property="Id" column="Id" />
		<result property="Subject" column="SubjectId" lazyLoad="false" select="AtAccountSubject.select_by_primary_key" />
        </resultMap>
    </resultMaps>
		
    <statements>
		<select id="has_rows_of" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[AtProfitLoss]
				WHERE
				[ProfitLossId] = #ProfitLossId#
				) then 1 else 0 end
		</select>
		<select id="has_rows" resultClass="bool">
			select case when exists(
				SELECT
					*
				FROM
					[dbo].[AtProfitLoss]
 								
				) then 1 else 0 end
		</select>
		<select id="get_first" resultMap="AtProfitLossResult">
			<![CDATA[
			select top 1 *
			from dbo.AtProfitLoss 
			order by InsertTime
			]]>
		</select>
		<select id="get_last" resultMap="AtProfitLossResult">
			<![CDATA[
			select top 1 *
			from dbo.AtProfitLoss 			
			order by InsertTime desc
			]]>
		</select>
		<select id="get_prev" resultMap="AtProfitLossResult" parameterClass="AtProfitLoss">
			<![CDATA[
			select top 1 *
			from dbo.AtProfitLoss
			where InsertTime < #InsertTime#
			order by InsertTime desc
			]]>
		</select>
		<select id="get_next" resultMap="AtProfitLossResult" parameterClass="AtProfitLoss">
			<![CDATA[
			select top 1 *
			from dbo.AtProfitLoss
			where InsertTime > #InsertTime#
			order by InsertTime
			]]>
		</select>
		<select id="has_rows_before" resultClass="bool" parameterClass="AtProfitLoss">
			<![CDATA[
			select case when exists(
				select * 
				from dbo.AtProfitLoss
				where InsertTime < #InsertTime#
				) 
				then 1 else 0 end
			]]>
		</select>
		
		<select id="has_rows_after" resultClass="bool" parameterClass="AtProfitLoss">
			<![CDATA[
			select case when exists(
				select * 
				from dbo.AtProfitLoss
				where InsertTime > #InsertTime#
				) then 1 else 0 end
			]]>
		</select>
		<!-- select by primary key -->
        <select id="select_by_primary_key" resultMap="AtProfitLossResult" parameterClass="AtProfitLoss">
			SELECT
				[ProfitLossId],
				[ProfitLossCategory],
				[CategoriesName],
				[SubjectId],
				[SubjectName],
				[ThisMoney],
				[IsMoney],
				[Ratio],
				[InsertTime],
				[UpdateTime],
				[ProfitLossDate],
				[Id]
			FROM
				[dbo].[AtProfitLoss]
			WHERE
				[ProfitLossId] = #ProfitLossId#
        </select>
		
		<!-- delete -->
        <delete id="delete" parameterClass="string">
			DELETE FROM [dbo].[AtProfitLoss]
			WHERE
				[ProfitLossId] = #ProfitLossId#
        </delete>

		<!-- select all -->
        <select id="select_all" resultMap="AtProfitLossResult" >
			SELECT *
			FROM 
				[dbo].[AtProfitLoss]
			
				
			ORDER BY Id ASC
			
			
        </select>
        
		<select id="count_all" resultClass="int">
			select count(*)
			from 
				[dbo].[AtProfitLoss]
		</select>
		
		<select id="select_all_with_paging" resultMap="AtProfitLossResult">
            SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[AtProfitLoss]
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
		</select>
		
		<!-- insert -->
        <insert id="insert" parameterClass="AtProfitLoss">
			INSERT INTO [dbo].[AtProfitLoss] 
			(
				[ProfitLossId],
				[ProfitLossCategory],
				[CategoriesName],
				[SubjectId],
				[SubjectName],
				[ThisMoney],
				[IsMoney],
				[Ratio],
				[InsertTime],
				[UpdateTime],
				[ProfitLossDate],
				[Id]
			) 
			VALUES 
			(
				#ProfitLossId#,
				#ProfitLossCategory#,
				#CategoriesName#,
				#SubjectId#,
				#SubjectName#,
				#ThisMoney#,
				#IsMoney#,
				#Ratio#,
				#InsertTime#,
				#UpdateTime#,
				#ProfitLossDate#,
				#Id#
			)
        </insert>
		
		<!-- update -->
        <update id="update" parameterClass="AtProfitLoss">
			UPDATE [AtProfitLoss] SET
				[ProfitLossCategory] = #ProfitLossCategory#,
				[CategoriesName] = #CategoriesName#,
				[SubjectId] = #SubjectId#,
				[SubjectName] = #SubjectName#,
				[ThisMoney] = #ThisMoney#,
				[IsMoney] = #IsMoney#,
				[Ratio] = #Ratio#,
				[InsertTime] = #InsertTime#,
				[UpdateTime] = #UpdateTime#,
				[ProfitLossDate] = #ProfitLossDate#,
				[Id] = #Id#
			WHERE
				[ProfitLossId] = #ProfitLossId#
        </update>
		<select id="existsPrimary" resultClass="bool" parameterClass="string">
			<![CDATA[
			select case when exists(
				select *
				from [dbo].[AtProfitLoss]
				where  ProfitLossId = #value# 
				)
				then 1 else 0 end
			]]>
		</select>
		<select id="exists" resultClass="bool" parameterClass="string">
			<![CDATA[
			select case when exists(
				select * 
				from dbo.AtProfitLoss
				where Id = #value#
				) then 1 else 0 end
			]]>
		</select>
		
		<select id="get_by_id" resultMap="AtProfitLossResult" parameterClass="string">
			<![CDATA[
			SELECT top 1
				*
			FROM
				[dbo].[AtProfitLoss]
			WHERE
				Id = #value#
			]]>	
        </select>
		
		<select id="existsexcept" resultClass="bool" parameterClass="string">
			<![CDATA[
			select case when exists(
				select *
				from dbo.AtProfitLoss
				where Id = #newId# and Id <> #oldId#
				)
				then 1 else 0 end
			]]>
		</select>		
		
		
    </statements>
</sqlMap>

