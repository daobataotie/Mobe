<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="ProduceMaterial" xmlns="http://ibatis.apache.org/mapping"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="ProduceMaterial" type="Book.Model.ProduceMaterial, Book.Model" />
  </alias>
  <resultMaps>
    <resultMap id="ProduceMaterialResult" class="ProduceMaterial">
      <result property="ProduceMaterialID" column="ProduceMaterialID" />
      <result property="Employee0Id" column="Employee0Id" />
      <result property="Employee1Id" column="Employee1Id" />
      <result property="InsertTime" column="InsertTime" />
      <result property="UpdateTime" column="UpdateTime" />
      <result property="ProduceMaterialDate" column="ProduceMaterialDate" />
      <result property="ProduceMaterialdesc" column="ProduceMaterialdesc" />
      <result property="State" column="State" />
      <result property="WorkHouseId" column="WorkHouseId" />
      <result property="Employee2Id" column="Employee2Id" />
      <result property="DepotId" column="DepotId" />
      <result property="DepotOutState" column="DepotOutState" />
      <result property="InvoiceId" column="InvoiceId" />
      <result property="SourceType" column="SourceType" />
      <result property="InvoiceXOId" column="InvoiceXOId" />
      <result property="AuditState" column="AuditState" />
      <result property="AuditEmpId" column="AuditEmpId" />
      <result property="Depot" column="DepotId" lazyLoad="false" select="Depot.select_by_primary_key" />
      <result property="Employee2" column="Employee2Id" lazyLoad="false" select="Employee.select_SimpleEmployee" />
      <result property="AuditEmp" column="AuditEmpId" lazyLoad="false" select="Employee.select_SimpleEmployee" />
      <result property="Employee0" column="Employee0Id" lazyLoad="false" select="Employee.select_SimpleEmployee" />
      <result property="Employee1" column="Employee1Id" lazyLoad="false" select="Employee.select_SimpleEmployee" />
      <result property="WorkHouse" column="WorkHouseId" lazyLoad="false" select="WorkHouse.select_by_primary_key" />
    </resultMap>
  </resultMaps>

  <statements>
    <select id="has_rows_of" resultClass="bool">
      <![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[ProduceMaterial]
				WHERE
				[ProduceMaterialID] = #ProduceMaterialID#
                        			                   
				) then 1 else 0 end
                ]]>
    </select>
    <select id="has_rows" resultClass="bool">
      <![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[ProduceMaterial]
 								
				) then 1 else 0 end
                ]]>
    </select>
    <select id="get_first" resultMap="ProduceMaterialResult">
      <![CDATA[
			select top 1 *
			from dbo.ProduceMaterial
			 
			order by InsertTime 
			]]>
    </select>
    <select id="get_last" resultMap="ProduceMaterialResult">
      <![CDATA[
			select top 1 *
			from dbo.ProduceMaterial
						
            order by InsertTime desc
			]]>

    </select>
    <select id="get_prev" resultMap="ProduceMaterialResult" parameterClass="ProduceMaterial">
      <![CDATA[
			select top 1 *
			from dbo.ProduceMaterial
			where InsertTime < #InsertTime#	
            			          
            order by InsertTime desc
			]]>
    </select>
    <select id="get_next" resultMap="ProduceMaterialResult" parameterClass="ProduceMaterial">
      <![CDATA[
			select top 1 *
			from dbo.ProduceMaterial
			where InsertTime > #InsertTime#	
                			                   
            order by InsertTime
			]]>
    </select>

    <select id="has_rows_before" resultClass="bool" parameterClass="ProduceMaterial">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.ProduceMaterial
				where InsertTime < #InsertTime#
                			                   
				) then 1 else 0 end
			]]>
    </select>

    <select id="has_rows_after" resultClass="bool" parameterClass="ProduceMaterial">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.ProduceMaterial
				where InsertTime > #InsertTime#
                			          
         
				) then 1 else 0 end
			]]>
    </select>
    <!-- select by primary key -->
    <select id="select_by_primary_key" resultMap="ProduceMaterialResult" parameterClass="ProduceMaterial">
      <![CDATA[SELECT
				[ProduceMaterialID],
				[Employee0Id],
				[Employee1Id],
				[InsertTime],
				[UpdateTime],
				[ProduceMaterialDate],
				[ProduceMaterialdesc],
				[State],
				[WorkHouseId],
				[Employee2Id],
				[DepotId],
				[DepotOutState],
				[InvoiceId],
				[SourceType],
				[InvoiceXOId],
				[AuditState],
				[AuditEmpId]
			FROM
				[dbo].[ProduceMaterial]
			WHERE
				[ProduceMaterialID] = #ProduceMaterialID#
                			          
         		]]>
    </select>

    <!-- delete -->
    <delete id="delete" parameterClass="string">
      <![CDATA[                
                DELETE FROM [dbo].[ProduceMaterial]
			WHERE            
				[ProduceMaterialID] = #ProduceMaterialID#
                    		]]>
    </delete>

    <!-- select all -->
    <select id="select_all" resultMap="ProduceMaterialResult" >
      <![CDATA[SELECT *
			FROM 
				[dbo].[ProduceMaterial]
                			                   
  ORDER BY InsertTime DESC  
			]]>
    </select>

    <select id="count_all" resultClass="int">
      <![CDATA[	select count(*)
			from 
				[dbo].[ProduceMaterial]
                			          
         ]]>
    </select>

    <select id="select_all_with_paging" resultMap="ProduceMaterialResult">
      <![CDATA[    SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[ProduceMaterial]
                    			          
         
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
             ]]>
    </select>

    <!-- insert -->
    <insert id="insert" parameterClass="ProduceMaterial">
      <![CDATA[ INSERT INTO [dbo].[ProduceMaterial] 
			(
				[ProduceMaterialID],
				[Employee0Id],
				[Employee1Id],
				[InsertTime],
				[UpdateTime],
				[ProduceMaterialDate],
				[ProduceMaterialdesc],
				[State],
				[WorkHouseId],
				[Employee2Id],
				[DepotId],
				[DepotOutState],
				[InvoiceId],
				[SourceType],
				[InvoiceXOId],
				[AuditState],
				[AuditEmpId]
			) 
			VALUES 
			(
				#ProduceMaterialID#,
				#Employee0Id#,
				#Employee1Id#,
				#InsertTime#,
				#UpdateTime#,
				#ProduceMaterialDate#,
				#ProduceMaterialdesc#,
				#State#,
				#WorkHouseId#,
				#Employee2Id#,
				#DepotId#,
				#DepotOutState#,
				#InvoiceId#,
				#SourceType#,
				#InvoiceXOId#,
				#AuditState#,
				#AuditEmpId#
			)
             ]]>
    </insert>

    <!-- update -->
    <update id="update" parameterClass="ProduceMaterial">
      <![CDATA[ 	UPDATE [ProduceMaterial] SET
				[Employee0Id] = #Employee0Id#,
				[Employee1Id] = #Employee1Id#,
				[InsertTime] = #InsertTime#,
				[UpdateTime] = #UpdateTime#,
				[ProduceMaterialDate] = #ProduceMaterialDate#,
				[ProduceMaterialdesc] = #ProduceMaterialdesc#,
				[State] = #State#,
				[WorkHouseId] = #WorkHouseId#,
				[Employee2Id] = #Employee2Id#,
				[DepotId] = #DepotId#,
				[DepotOutState] = #DepotOutState#,
				[InvoiceId] = #InvoiceId#,
				[SourceType] = #SourceType#,
				[InvoiceXOId] = #InvoiceXOId#,
				[AuditState] = #AuditState#,
				[AuditEmpId] = #AuditEmpId#
			WHERE
				[ProduceMaterialID] = #ProduceMaterialID#
                    ]]>
    </update>
    <select id="existsPrimary" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select *
				from [dbo].[ProduceMaterial]
				where  ProduceMaterialID = #value#                 			                   
				)
				then 1 else 0 end
			]]>
    </select>

  </statements>
</sqlMap>

