<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="PCExportReportANSIDetail" xmlns="http://ibatis.apache.org/mapping"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="PCExportReportANSIDetail" type="Book.Model.PCExportReportANSIDetail, Book.Model" />
  </alias>
  <resultMaps>
    <resultMap id="PCExportReportANSIDetailResult" class="PCExportReportANSIDetail">
      <result property="PCExportReportANSIDetailId" column="PCExportReportANSIDetailId" />
      <result property="CustomerId" column="CustomerId" />
      <result property="EmployeeId" column="EmployeeId" />
      <result property="ProductId" column="ProductId" />
      <result property="InsertTime" column="InsertTime" />
      <result property="UpdateTime" column="UpdateTime" />
      <result property="MustCheckSum" column="MustCheckSum" />
      <result property="HasCheckSum" column="HasCheckSum" />
      <result property="PassSum" column="PassSum" />
      <result property="CheckDate" column="CheckDate" />
      <result property="InvoiceCusXOId" column="InvoiceCusXOId" />
      <result property="InvoiceQuantity" column="InvoiceQuantity" />
      <result property="FromPC" column="FromPC" />
      <result property="Remark" column="Remark" />
      <result property="TestType" column="TestType"/>
      <result property="ProductUnitId" column="ProductUnitId"/>
      <result property="Customer" column="CustomerId" lazyLoad="false" select="Customer.select_SimpleCustomer" />
      <result property="Employee" column="EmployeeId" lazyLoad="false" select="Employee.select_SimpleEmployee" />
      <result property="Product" column="ProductId" lazyLoad="false" select="Product.select_SimpleProduct" />
      <result property="ProductUnit" column="ProductUnitId" lazyLoad="false" select="ProductUnit.select_by_primary_key"/>
    </resultMap>
  </resultMaps>

  <statements>
    <select id="has_rows_of" resultClass="bool">
      <![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[PCExportReportANSIDetail]
				WHERE
				[PCExportReportANSIDetailId] = #PCExportReportANSIDetailId#
                        			                   
				) then 1 else 0 end
                ]]>
    </select>
    <select id="has_rows" resultClass="bool">
      <![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[PCExportReportANSIDetail]
 								
				) then 1 else 0 end
                ]]>
    </select>
    <select id="get_first" resultMap="PCExportReportANSIDetailResult">
      <![CDATA[
			select top 1 *
			from dbo.PCExportReportANSIDetail
			 
			order by InsertTime 
			]]>
    </select>
    <select id="get_last" resultMap="PCExportReportANSIDetailResult">
      <![CDATA[
			select top 1 *
			from dbo.PCExportReportANSIDetail
						
            order by InsertTime desc
			]]>

    </select>
    <select id="get_prev" resultMap="PCExportReportANSIDetailResult" parameterClass="PCExportReportANSIDetail">
      <![CDATA[
			select top 1 *
			from dbo.PCExportReportANSIDetail
			where InsertTime < #InsertTime#	
            			          
            order by InsertTime desc
			]]>
    </select>
    <select id="get_next" resultMap="PCExportReportANSIDetailResult" parameterClass="PCExportReportANSIDetail">
      <![CDATA[
			select top 1 *
			from dbo.PCExportReportANSIDetail
			where InsertTime > #InsertTime#	
                			                   
            order by InsertTime
			]]>
    </select>

    <select id="has_rows_before" resultClass="bool" parameterClass="PCExportReportANSIDetail">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.PCExportReportANSIDetail
				where InsertTime < #InsertTime#
                			                   
				) then 1 else 0 end
			]]>
    </select>

    <select id="has_rows_after" resultClass="bool" parameterClass="PCExportReportANSIDetail">
      <![CDATA[
			select case when exists(
				select * 
				from dbo.PCExportReportANSIDetail
				where InsertTime > #InsertTime#
                			          
         
				) then 1 else 0 end
			]]>
    </select>
    <!-- select by primary key -->
    <select id="select_by_primary_key" resultMap="PCExportReportANSIDetailResult" parameterClass="PCExportReportANSIDetail">
      <![CDATA[SELECT
				[PCExportReportANSIDetailId],
				[CustomerId],
				[EmployeeId],
				[ProductId],
				[InsertTime],
				[UpdateTime],
				[MustCheckSum],
				[HasCheckSum],
				[PassSum],
				[CheckDate],
				[InvoiceCusXOId],
				[InvoiceQuantity],
				[FromPC],
				[Remark],
        [TestType],
        [ProductUnitId]
			FROM
				[dbo].[PCExportReportANSIDetail]
			WHERE
				[PCExportReportANSIDetailId] = #PCExportReportANSIDetailId#
                			          
         		]]>
    </select>

    <!-- delete -->
    <delete id="delete" parameterClass="string">
      <![CDATA[                
                DELETE FROM [dbo].[PCExportReportANSIDetail]
			WHERE            
				[PCExportReportANSIDetailId] = #PCExportReportANSIDetailId#
                    		]]>
    </delete>

    <!-- select all -->
    <select id="select_all" resultMap="PCExportReportANSIDetailResult" >
      <![CDATA[SELECT *
			FROM 
				[dbo].[PCExportReportANSIDetail]
                			                   
  ORDER BY InsertTime DESC  
			]]>
    </select>

    <select id="count_all" resultClass="int">
      <![CDATA[	select count(*)
			from 
				[dbo].[PCExportReportANSIDetail]
                			          
         ]]>
    </select>

    <select id="select_all_with_paging" resultMap="PCExportReportANSIDetailResult">
      <![CDATA[    SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[PCExportReportANSIDetail]
                    			          
         
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
             ]]>
    </select>

    <!-- insert -->
    <insert id="insert" parameterClass="PCExportReportANSIDetail">
      <![CDATA[ INSERT INTO [dbo].[PCExportReportANSIDetail] 
			(
				[PCExportReportANSIDetailId],
				[CustomerId],
				[EmployeeId],
				[ProductId],
				[InsertTime],
				[UpdateTime],
				[MustCheckSum],
				[HasCheckSum],
				[PassSum],
				[CheckDate],
				[InvoiceCusXOId],
				[InvoiceQuantity],
				[FromPC],
				[Remark],
        [TestType],
        [ProductUnitId]
			) 
			VALUES 
			(
				#PCExportReportANSIDetailId#,
				#CustomerId#,
				#EmployeeId#,
				#ProductId#,
				#InsertTime#,
				#UpdateTime#,
				#MustCheckSum#,
				#HasCheckSum#,
				#PassSum#,
				#CheckDate#,
				#InvoiceCusXOId#,
				#InvoiceQuantity#,
				#FromPC#,
				#Remark#,
        #TestType#,
        #ProductUnitId#
			)
             ]]>
    </insert>

    <!-- update -->
    <update id="update" parameterClass="PCExportReportANSIDetail">
      <![CDATA[ 	UPDATE [PCExportReportANSIDetail] SET
				[CustomerId] = #CustomerId#,
				[EmployeeId] = #EmployeeId#,
				[ProductId] = #ProductId#,
				[InsertTime] = #InsertTime#,
				[UpdateTime] = #UpdateTime#,
				[MustCheckSum] = #MustCheckSum#,
				[HasCheckSum] = #HasCheckSum#,
				[PassSum] = #PassSum#,
				[CheckDate] = #CheckDate#,
				[InvoiceCusXOId] = #InvoiceCusXOId#,
				[InvoiceQuantity] = #InvoiceQuantity#,
				[FromPC] = #FromPC#,
				[Remark] = #Remark#,
        [TestType]=#TestType#,
        [ProductUnitId]=#ProductUnitId#
			WHERE
				[PCExportReportANSIDetailId] = #PCExportReportANSIDetailId#
                    ]]>
    </update>
    <select id="existsPrimary" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select *
				from [dbo].[PCExportReportANSIDetail]
				where  PCExportReportANSIDetailId = #value#                 			                   
				)
				then 1 else 0 end
			]]>
    </select>

  </statements>
</sqlMap>

