<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="ProduceMaterialdetails" xmlns="http://ibatis.apache.org/mapping"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="ProduceMaterialdetails" type="Book.Model.ProduceMaterialdetails, Book.Model" />
  </alias>
  <resultMaps>
    <resultMap id="ProduceMaterialdetailsResult" class="ProduceMaterialdetails">
      <result property="ProduceMaterialdetailsID" column="ProduceMaterialdetailsID" />
      <result property="ProductId" column="ProductId" />
      <result property="DepotPositionId" column="DepotPositionId" />
      <result property="Materialprocessum" column="Materialprocessum" />
      <result property="ProductStock" column="ProductStock" />
      <result property="ProduceMaterialID" column="ProduceMaterialID" />
      <result property="Materialprocesedsum" column="Materialprocesedsum" />
      <result property="MPSheaderId" column="MPSheaderId" />
      <result property="InvoiceXOId" column="InvoiceXOId" />
      <result property="InvoiceXODetailId" column="InvoiceXODetailId" />
      <result property="ProductUnit" column="ProductUnit" />
      <result property="PronoteHeaderID" column="PronoteHeaderID" />
      <result property="PrimaryKeyId" column="PrimaryKeyId" />
      <result property="Pihao" column="Pihao" />
      <result property="PronotedetailsID" column="PronotedetailsID" />
      <result property="CustomerInvoiceXOId" column="CustomerInvoiceXOId" />
      <result property="IsChecked" column="IsChecked" />
      <result property="Inumber" column="Inumber" />
      <result property="StockQuantity" column="StockQuantity" />
      <result property="DepotOutStateDetail" column="DepotOutStateDetail" />
      <result property="Distributioned" column="Distributioned" />
      <result property="MRSHeaderId" column="MRSHeaderId" />
      <result property="MRSdetailsId" column="MRSdetailsId" />
      <result property="MPSDetailsSum" column="MPSDetailsSum" />
      <result property="NextWorkHouseId" column="NextWorkHouseId" />
      <result property="HandbookId" column="HandbookId"/>
      <result property="HandbookProductId" column="HandbookProductId"/>
      <result property="DepotStock" column="DepotStock"/>
      <result property="StockInvoiceId" column="StockInvoiceId"/>
      <result property="PrimaryKey" column="PrimaryKeyId" lazyLoad="false" select="CustomerProducts.select_by_primary_key" />
      <result property="DepotPosition" column="DepotPositionId" lazyLoad="false" select="DepotPosition.select_by_primary_key" />
      <result property="Product" column="ProductId" lazyLoad="false" select="Product.select_SimpleProduct" />
      <result property="ProduceMaterial" column="ProduceMaterialID" lazyLoad="false" select="ProduceMaterial.select_by_primary_key" />
      <result property="NextWorkHouse" column="NextWorkHouseId" lazyLoad="false" select="WorkHouse.select_by_primary_key" />
    </resultMap>
  </resultMaps>

  <statements>
    <select id="has_rows_of" resultClass="bool">
      select case when exists(
      SELECT
      *
      FROM
      [dbo].[ProduceMaterialdetails]
      WHERE
      [ProduceMaterialdetailsID] = #ProduceMaterialdetailsID#
      ) then 1 else 0 end
    </select>
    <select id="has_rows" resultClass="bool">
      select case when exists(
      SELECT
      *
      FROM
      [dbo].[ProduceMaterialdetails]

      ) then 1 else 0 end
    </select>
    <!-- select by primary key -->
    <select id="select_by_primary_key" resultMap="ProduceMaterialdetailsResult" parameterClass="ProduceMaterialdetails">
      SELECT
      [ProduceMaterialdetailsID],
      [ProductId],
      [DepotPositionId],
      [Materialprocessum],
      [ProductStock],
      [ProduceMaterialID],
      [Materialprocesedsum],
      [MPSheaderId],
      [InvoiceXOId],
      [InvoiceXODetailId],
      [ProductUnit],
      [PronoteHeaderID],
      [PrimaryKeyId],
      [Pihao],
      [PronotedetailsID],
      [CustomerInvoiceXOId],
      [IsChecked],
      [Inumber],
      [StockQuantity],
      [DepotOutStateDetail],
      [Distributioned],
      [MRSHeaderId],
      [MRSdetailsId],
      [MPSDetailsSum],
      [NextWorkHouseId],
      [HandbookId],
      [HandbookProductId],
      [DepotStock],
      [StockInvoiceId]
      FROM
      [dbo].[ProduceMaterialdetails]
      WHERE
      [ProduceMaterialdetailsID] = #ProduceMaterialdetailsID#
    </select>

    <!-- delete -->
    <delete id="delete" parameterClass="string">
      DELETE FROM [dbo].[ProduceMaterialdetails]
      WHERE
      [ProduceMaterialdetailsID] = #ProduceMaterialdetailsID#
    </delete>

    <!-- select all -->
    <select id="select_all" resultMap="ProduceMaterialdetailsResult" >
      SELECT *
      FROM
      [dbo].[ProduceMaterialdetails]



    </select>

    <select id="count_all" resultClass="int">
      select count(*)
      from
      [dbo].[ProduceMaterialdetails]
    </select>

    <select id="select_all_with_paging" resultMap="ProduceMaterialdetailsResult">
      SELECT *
      FROM
      (
      SELECT *, row_number() over(order by $OrderStatement$) rownumber
      FROM
      [dbo].[ProduceMaterialdetails]
      ) t
      WHERE t.rownumber between #Row1# and #Row2#
    </select>

    <!-- insert -->
    <insert id="insert" parameterClass="ProduceMaterialdetails">
      INSERT INTO [dbo].[ProduceMaterialdetails]
      (
      [ProduceMaterialdetailsID],
      [ProductId],
      [DepotPositionId],
      [Materialprocessum],
      [ProductStock],
      [ProduceMaterialID],
      [Materialprocesedsum],
      [MPSheaderId],
      [InvoiceXOId],
      [InvoiceXODetailId],
      [ProductUnit],
      [PronoteHeaderID],
      [PrimaryKeyId],
      [Pihao],
      [PronotedetailsID],
      [CustomerInvoiceXOId],
      [IsChecked],
      [Inumber],
      [StockQuantity],
      [DepotOutStateDetail],
      [Distributioned],
      [MRSHeaderId],
      [MRSdetailsId],
      [MPSDetailsSum],
      [NextWorkHouseId],
      [HandbookId],
      [HandbookProductId],
      [DepotStock],
      [StockInvoiceId]
      )
      VALUES
      (
      #ProduceMaterialdetailsID#,
      #ProductId#,
      #DepotPositionId#,
      #Materialprocessum#,
      #ProductStock#,
      #ProduceMaterialID#,
      #Materialprocesedsum#,
      #MPSheaderId#,
      #InvoiceXOId#,
      #InvoiceXODetailId#,
      #ProductUnit#,
      #PronoteHeaderID#,
      #PrimaryKeyId#,
      #Pihao#,
      #PronotedetailsID#,
      #CustomerInvoiceXOId#,
      #IsChecked#,
      #Inumber#,
      #StockQuantity#,
      #DepotOutStateDetail#,
      #Distributioned#,
      #MRSHeaderId#,
      #MRSdetailsId#,
      #MPSDetailsSum#,
      #NextWorkHouseId#,
      #HandbookId#,
      #HandbookProductId#,
      #DepotStock#,
      #StockInvoiceId#
      )
    </insert>

    <!-- update -->
    <update id="update" parameterClass="ProduceMaterialdetails">
      UPDATE [ProduceMaterialdetails] SET
      [ProductId] = #ProductId#,
      [DepotPositionId] = #DepotPositionId#,
      [Materialprocessum] = #Materialprocessum#,
      [ProductStock] = #ProductStock#,
      [ProduceMaterialID] = #ProduceMaterialID#,
      [Materialprocesedsum] = #Materialprocesedsum#,
      [MPSheaderId] = #MPSheaderId#,
      [InvoiceXOId] = #InvoiceXOId#,
      [InvoiceXODetailId] = #InvoiceXODetailId#,
      [ProductUnit] = #ProductUnit#,
      [PronoteHeaderID] = #PronoteHeaderID#,
      [PrimaryKeyId] = #PrimaryKeyId#,
      [Pihao] = #Pihao#,
      [PronotedetailsID] = #PronotedetailsID#,
      [CustomerInvoiceXOId] = #CustomerInvoiceXOId#,
      [IsChecked] = #IsChecked#,
      [Inumber] = #Inumber#,
      [StockQuantity] = #StockQuantity#,
      [DepotOutStateDetail] = #DepotOutStateDetail#,
      [Distributioned] = #Distributioned#,
      [MRSHeaderId] = #MRSHeaderId#,
      [MRSdetailsId] = #MRSdetailsId#,
      [MPSDetailsSum] = #MPSDetailsSum#,
      [NextWorkHouseId] = #NextWorkHouseId#,
      [HandbookId]=#HandbookId#,
      [HandbookProductId]=#HandbookProductId#,
      [DepotStock]=#DepotStock#,
      [StockInvoiceId]=#StockInvoiceId#
      WHERE
      [ProduceMaterialdetailsID] = #ProduceMaterialdetailsID#
    </update>
    <select id="existsPrimary" resultClass="bool" parameterClass="string">
      <![CDATA[
			select case when exists(
				select *
				from [dbo].[ProduceMaterialdetails]
				where  ProduceMaterialdetailsID = #value# 
				)
				then 1 else 0 end
			]]>
    </select>

  </statements>
</sqlMap>

