//------------------------------------------------------------------------------
//
// 说明： 该文件中的内容是由代码生成器自动生成的，请勿手工修改！
//
// file name：productImageAccessor.autogenerated.cs
// author: mayanjun
// create date：2011/2/26 9:38:27
//
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Text;

namespace Book.DA.SQLServer
{
    public partial class ProductImageAccessor
    {
		public Model.ProductImage Get(string id)
		{
			return this.Get<Model.ProductImage>(id);
		}
		
		public void Insert(Model.ProductImage e)
		{
            this.Insert<Model.ProductImage>(e);
		}

        public void Update(Model.ProductImage e)
		{
            this.Update<Model.ProductImage>(e);
		}

        public IList<Model.ProductImage> Select()
		{
            return this.Select<Model.ProductImage>();
		}

        public IList<Model.ProductImage> Select(Helper.OrderDescription orderDescription, Helper.PagingDescription pagingDescription)
		{
            return this.Select<Model.ProductImage>(orderDescription, pagingDescription);
		}
		public void Delete(string id)
		{
            this.Delete<Model.ProductImage>(id);
		}
		public bool HasRows(string id)
		{
            return this.HasRows<Model.ProductImage>(id);
		}
		public bool HasRows()
		{
            return this.HasRows<Model.ProductImage>();
		}
		public int Count()
		{
            return this.Count<Model.ProductImage>();
		}
        public bool HasRowsBefore(Model.ProductImage e)
		{
            return sqlmapper.QueryForObject<bool>("ProductImage.has_rows_before", e);
		}
        public bool HasRowsAfter(Model.ProductImage e)
		{
            return sqlmapper.QueryForObject<bool>("ProductImage.has_rows_after", e);
		}
        public Model.ProductImage GetFirst()
		{
            return sqlmapper.QueryForObject<Model.ProductImage>("ProductImage.get_first", null);
		}
        public Model.ProductImage GetLast()
		{
            return sqlmapper.QueryForObject<Model.ProductImage>("ProductImage.get_last", null);
		}
        public Model.ProductImage GetNext(Model.ProductImage e)
		{
            return sqlmapper.QueryForObject<Model.ProductImage>("ProductImage.get_next", e);
		}
        public Model.ProductImage GetPrev(Model.ProductImage e)
		{
            return sqlmapper.QueryForObject<Model.ProductImage>("ProductImage.get_prev", e);
		}
		

		public bool ExistsPrimary(string id)
		{
            return sqlmapper.QueryForObject<bool>("ProductImage.existsPrimary", id);
		}
    }
}
