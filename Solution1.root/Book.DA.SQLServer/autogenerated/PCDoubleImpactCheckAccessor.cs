//------------------------------------------------------------------------------
//
// 说明： 该文件中的内容是由代码生成器自动生成的，请勿手工修改！
//
// file name：PCDoubleImpactCheckAccessor.autogenerated.cs
// author: mayanjun
// create date：2011-11-24 17:38:16
//
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Text;

namespace Book.DA.SQLServer
{
    public partial class PCDoubleImpactCheckAccessor
    {
        public Model.PCDoubleImpactCheck Get(string id)
        {
            return this.Get<Model.PCDoubleImpactCheck>(id);
        }

        public void Insert(Model.PCDoubleImpactCheck e)
        {
            this.Insert<Model.PCDoubleImpactCheck>(e);
        }

        public void Update(Model.PCDoubleImpactCheck e)
        {
            this.Update<Model.PCDoubleImpactCheck>(e);
        }

        public IList<Model.PCDoubleImpactCheck> Select()
        {
            return this.Select<Model.PCDoubleImpactCheck>();
        }

        public IList<Model.PCDoubleImpactCheck> Select(Helper.OrderDescription orderDescription, Helper.PagingDescription pagingDescription)
        {
            return this.Select<Model.PCDoubleImpactCheck>(orderDescription, pagingDescription);
        }
        public void Delete(string id)
        {
            this.Delete<Model.PCDoubleImpactCheck>(id);
        }
        public bool HasRows(string id)
        {
            return this.HasRows<Model.PCDoubleImpactCheck>(id);
        }
        public bool HasRows(int PCDoubleImpactCheckType)
        {
            return sqlmapper.QueryForObject<bool>("PCDoubleImpactCheck.has_rows", PCDoubleImpactCheckType);
            return this.HasRows<Model.PCDoubleImpactCheck>();
        }
        public int Count()
        {
            return this.Count<Model.PCDoubleImpactCheck>();
        }
        public bool HasRowsBefore(Model.PCDoubleImpactCheck e)
        {
            return sqlmapper.QueryForObject<bool>("PCDoubleImpactCheck.has_rows_before", e);
        }
        public bool HasRowsAfter(Model.PCDoubleImpactCheck e)
        {
            return sqlmapper.QueryForObject<bool>("PCDoubleImpactCheck.has_rows_after", e);
        }
        public Model.PCDoubleImpactCheck GetFirst(int PCDoubleImpactCheckType)
        {
            return sqlmapper.QueryForObject<Model.PCDoubleImpactCheck>("PCDoubleImpactCheck.get_first", PCDoubleImpactCheckType);
        }
        public Model.PCDoubleImpactCheck GetLast(int PCDoubleImpactCheckType)
        {
            if (PCDoubleImpactCheckType == -1)
            {
                return sqlmapper.QueryForObject<Model.PCDoubleImpactCheck>("PCDoubleImpactCheck.get_last", null);
            }
            else
            {
                return sqlmapper.QueryForObject<Model.PCDoubleImpactCheck>("PCDoubleImpactCheck.get_last_hasType", PCDoubleImpactCheckType);
            }
        }
        public Model.PCDoubleImpactCheck GetNext(Model.PCDoubleImpactCheck e)
        {
            return sqlmapper.QueryForObject<Model.PCDoubleImpactCheck>("PCDoubleImpactCheck.get_next", e);
        }
        public Model.PCDoubleImpactCheck GetPrev(Model.PCDoubleImpactCheck e)
        {
            return sqlmapper.QueryForObject<Model.PCDoubleImpactCheck>("PCDoubleImpactCheck.get_prev", e);
        }
        public bool ExistsPrimary(string id)
        {
            return sqlmapper.QueryForObject<bool>("PCDoubleImpactCheck.existsPrimary", id);
        }
    }
}
