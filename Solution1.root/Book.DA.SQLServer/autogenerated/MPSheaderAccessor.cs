//------------------------------------------------------------------------------
//
// 说明： 该文件中的内容是由代码生成器自动生成的，请勿手工修改！
//
// file name：MPSheaderAccessor.autogenerated.cs
// author: mayanjun
// create date：2011-12-16 09:48:13
//
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Text;

namespace Book.DA.SQLServer
{
    public partial class MPSheaderAccessor
    {
		public Model.MPSheader Get(string id)
		{
			return this.Get<Model.MPSheader>(id);
		}
		
		public void Insert(Model.MPSheader e)
		{
			this.Insert<Model.MPSheader>(e);
		}
		
		public void Update(Model.MPSheader e)
		{
			this.Update<Model.MPSheader>(e);
		}
		
		public IList<Model.MPSheader> Select()
		{
			return this.Select<Model.MPSheader>();
		}
		
		public IList<Model.MPSheader> Select(Helper.OrderDescription orderDescription, Helper.PagingDescription pagingDescription)
		{
			return this.Select<Model.MPSheader>(orderDescription,pagingDescription);
		}
		public void Delete(string id)
		{
			this.Delete<Model.MPSheader>(id);
		}
		public bool HasRows(string id)
		{
			return this.HasRows<Model.MPSheader>(id);
		}
		public bool HasRows()
		{
			return this.HasRows<Model.MPSheader>();
		}
		public int Count()
		{
			return this.Count<Model.MPSheader>();
		}
		public bool HasRowsBefore(Model.MPSheader e)
		{
			return sqlmapper.QueryForObject<bool>("MPSheader.has_rows_before", e);
		}
		public bool HasRowsAfter(Model.MPSheader e)
		{
			return sqlmapper.QueryForObject<bool>("MPSheader.has_rows_after", e);
		}
		public Model.MPSheader GetFirst()
		{
			return sqlmapper.QueryForObject<Model.MPSheader>("MPSheader.get_first", null);
		}
		public Model.MPSheader GetLast()
		{
			return sqlmapper.QueryForObject<Model.MPSheader>("MPSheader.get_last", null);
		}
		public Model.MPSheader GetNext(Model.MPSheader e)
		{
			return sqlmapper.QueryForObject<Model.MPSheader>("MPSheader.get_next", e);
		}
		public Model.MPSheader GetPrev(Model.MPSheader e)
		{
			return sqlmapper.QueryForObject<Model.MPSheader>("MPSheader.get_prev", e);
		}
		

		public bool Exists(string id)
		{
			return sqlmapper.QueryForObject<bool>("MPSheader.exists", id);
		}
		
		public Model.MPSheader GetById(string id)
		{
			return sqlmapper.QueryForObject<Model.MPSheader>("MPSheader.get_by_id", id);
		}
		
		public bool ExistsExcept(Model.MPSheader e)
		{
			Hashtable paras = new Hashtable();
			paras.Add("newId", e.Id);
            paras.Add("oldId", Get(e.MPSheaderId)==null?null:Get(e.MPSheaderId).Id);
			return sqlmapper.QueryForObject<bool>("MPSheader.existsexcept", paras);
		}
		
		
		
		public bool ExistsPrimary(string id)
		{			
			return sqlmapper.QueryForObject<bool>("MPSheader.existsPrimary", id);
		}
    }
}
